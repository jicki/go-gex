syntax = "proto3";
package order;
option go_package = "./pb";
import "enum/enum.proto";
message OrderEmpty{}
// 下单请求
message CreateOrderReq {

  // 用户ID
  int64 user_id = 3;
  // 交易对ID
  int32 symbol_id = 4;
  // 交易对名称
  string symbol_name = 5;
  // 下单数量
  string qty = 6;
  // 价格
  string price = 7;
  // 金额
  string amount = 13;
  // 方向 - 1: 买, 2: 卖
  commonEnum.Side side = 8;
  // 订单类型 - 1: 市价单, 2: 限价单
  commonEnum.OrderType order_type = 10;
  //订单id用于补偿定位订单
  string order_id=14;
}


message GetOrderListByUserReq {
  //用户id
  int64 user_id=1;
  //订单类型
  repeated commonEnum.OrderStatus status_list=2;
}
// 订单实体
message Order {
  // 自增ID
  int64 id = 1;
  // 订单id
  string order_id = 2;
  // 用户ID
  int64 user_id = 3;
  // 交易对ID
  int32 symbol_id = 4;
  // 交易对名称
  string symbol_name = 5;
  // 下单数量
  string qty = 6;
  // 价格
  string price = 7;
  // 金额
  string amount = 17;
  // 方向 - 1: 买, 2: 卖
  commonEnum.Side side = 8;
  // 状态 - 1: 新订单, 2: 部分成交, 3: 全部成交, 4: 撤销
  commonEnum.OrderStatus status = 9;
  // 订单类型 - 1: 市价单, 2: 限价单
  commonEnum.OrderType order_type = 10;
  //成交数量
  string filled_qty =14;
  //成交金额
  string filled_amount=15;
  // 成交均价
  string filled_avg_price = 11;
  // 创建时间
  int64 created_at = 12;
  // 修改时间
  int64 updated_at = 13;

}

message GetOrderListByUserResp{
  repeated Order order_list =1;
}

message FreezeUserAssetResp{}

message CancelOrderReq{
  //订单id
  int64 id=1;
  //用户id
  int64 uid=2;
}
message UpdateOrderStatusReq{
  //订单id
  string order_id=1;
  //订单状态
  commonEnum.OrderStatus order_status = 2;
}
message UpdateEntrustOrderReq{
  // 订单id
  string order_id = 1;
  //成交数量
  string  filled_qty =3;
  //未成交数量
  string  un_filled_qty =4;
  //成交金额
  string  filled_amount=5;
  //未成交金额
  string  un_filled_amount=6;
}

message GetOrderAllPendingOrderResp{
  //订单id
  string order_id=1;
  //订单序号,唯一在订单簿中如果价格相同，用这个来排序。
  int64 sequence_id=2;
  //用户id
  int64 uid=9;
  //订单方向
  commonEnum.Side side=3;
  //价格
  string price=7;
  //订单数量
  string qty=4;
  //订单金额 计价币数量
  string amount=5;
  //订单类型
  commonEnum.OrderType order_type=6;
  //未成交金额
  string un_filled_amount=8;
  //未成交数量
  string un_filled_qty=10;
  //是否结束
  bool done =11;
}

service OrderService {
  //下单
  rpc Order(CreateOrderReq)returns(OrderEmpty);
  //创建订单,下单有分布式事务要处理分为两个接口
  rpc CreateOrder(CreateOrderReq)returns(OrderEmpty);
  //获取用户订单列表
  rpc GetOrderList(GetOrderListByUserReq)returns(GetOrderListByUserResp);
  //取消订单
  rpc CancelOrder(CancelOrderReq)returns(OrderEmpty);
  //下单补偿
  rpc CreateOrderRevert(CreateOrderReq)returns(OrderEmpty);
  //获取所有订单状态为未成交或部分成交的订单
  rpc GetOrderAllPendingOrder(OrderEmpty)returns(stream GetOrderAllPendingOrderResp);
}