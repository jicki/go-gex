{"version":3,"sources":["webpack:///./node_modules/babel-runtime/core-js/promise.js","webpack:///./node_modules/core-js/library/modules/_an-instance.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_microtask.js","webpack:///./node_modules/core-js/library/modules/es6.promise.js","webpack:///./node_modules/core-js/library/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/library/modules/_task.js","webpack:///./src/assets/js/utils.js","webpack:///src/components/home/home.vue","webpack:///./src/components/home/home.vue?dd00","webpack:///./src/components/home/home.vue","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_for-of.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/library/fn/promise.js","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./node_modules/core-js/library/modules/_set-species.js","webpack:///./node_modules/core-js/library/modules/_perform.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/babel-runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/core-js/library/modules/_user-agent.js","webpack:///./node_modules/core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/core-js/library/modules/_invoke.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/babel-runtime/core-js/json/stringify.js","webpack:///./node_modules/core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/core-js/library/fn/json/stringify.js","webpack:///./node_modules/core-js/library/modules/_species-constructor.js","webpack:///./node_modules/decimal.js/decimal.js","webpack:///./node_modules/core-js/library/modules/_redefine-all.js"],"names":["module","exports","default","__webpack_require__","__esModule","it","Constructor","name","forbiddenField","undefined","TypeError","classof","ITERATOR","Iterators","getIteratorMethod","global","macrotask","set","Observer","MutationObserver","WebKitMutationObserver","process","Promise","isNode","head","last","notify","flush","parent","fn","domain","exit","next","e","enter","nextTick","navigator","standalone","resolve","promise","then","call","toggle","node","document","createTextNode","observe","characterData","data","task","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","ctx","$export","isObject","aFunction","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","versions","v8","$Promise","empty","newPromiseCapability","f","USE_NATIVE","FakePromise","constructor","exec","PromiseRejectionEvent","indexOf","isThenable","isReject","_n","chain","_c","value","_v","ok","_s","i","run","reaction","result","exited","handler","fail","reject","_h","onHandleUnhandled","length","onUnhandled","console","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","v","onrejectionhandled","$reject","this","_d","_w","slice","$resolve","wrapper","executor","err","prototype","onFulfilled","onRejected","push","catch","C","G","W","F","S","r","capability","$$reject","x","iter","all","iterable","values","index","remaining","$index","alreadyCalled","race","core","P","R","finally","onFinally","isFunction","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","id","hasOwnProperty","listener","event","args","arguments","Function","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","clear","castTimeStamp","timestamp","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","castTimeStamp2Time","home","currentEntrustForm","loBuyButtonName","loSellButtonName","isLogin","showLoginDialogForm","formLabelWidth","asset_data","last_price","loginForm","username","password","entrustCard","loBuyForm","price","qty","side","symbol_name","symbol_id","order_type","amount","loSellForm","moBuyForm","moSellForm","askList","bidList","askMaxQty","decimal","bidMaxQty","currentVersion","currentOrderList","historyOrderList","filledOrderList","tickerList","WebSocketConn","WebSocket","latest_kline","kline_type","kline_data","echartDom","klineData","klineOption","methods","switchEntrustForm","tab","log","switchOrderListCard","_this","$myHttp","post","status_list","resp","status","code","$message","msg","localStorage","removeItem","order_list","forEach","el","symbol","created_at","getCurrentUserOrder","validateToken","getItem","submitLoginForm","_this2","loginResp","success","setItem","token","getUserAsset","_this3","asset_list","getDepthList","_this4","level","asks","bids","version","q","gt","getTickList","_this5","limit","tick_list","filled_time","filledOrderListClassName","_ref","row","rowIndex","taker_is_buyer","buyLoOrderOrLogin","formName","_this6","$refs","resetFields","sellLoOrderOrLogin","_this7","buyMoOrderOrLogin","_this8","sellMoOrderOrLogin","_this9","_this10","filledUnfilled","filled_qty","reload","_this11","getKlineData","myEcharts","splitData","rawData","categoryData","volumes","splice","chartDom","getElementById","echarts","animation","legend","bottom","left","tooltip","trigger","axisPointer","type","borderWidth","borderColor","padding","textStyle","color","position","pos","params","elRect","size","obj","top","viewSize","link","xAxisIndex","label","backgroundColor","toolbox","feature","dataZoom","yAxisIndex","brush","brushLink","outOfBrush","colorAlpha","visualMap","show","seriesIndex","dimension","pieces","grid","right","height","xAxis","boundaryGap","axisLine","onZero","splitLine","min","max","z","gridIndex","axisTick","axisLabel","yAxis","scale","splitArea","splitNumber","start","end","series","itemStyle","color0","borderColor0","setOption","_this12","asyncToGenerator_default","regenerator_default","a","mark","_callee","st","wrap","_context","prev","t0","abrupt","start_time","end_time","kine_list","d","item","open","close","low","high","volume","stop","getTicker","_this13","ticker_list","cancelOrder","_this14","initWebsocketConn","_this15","_callee2","subs","loginReq","orderReq","tickTopic","tickerTopic","depthTopic","klineTopic","orderTopic","_context2","connect","topic","webSocketConn","send","stringify_default","JSON","parse","t","split","p","lp","price_range","newAsks","decimalZero","existed","eq","sort","v1","v2","v1Price","v2Price","comparedTo","newBids","b","ts","tib","unshift","pop","klineCycle","l","o","c","h","lastCategory","_lastCategory","s","order","order_id","oi","user_id","u","sn","si","ot","fq","filled_amount","fa","filled_avg_price","fap","ca","filter","filledOrderCell","_ref2","columnIndex","column","tickerListStyle","_ref3","askListCell","_ref4","askListRow","_ref5","sc","div","mul","ceil","toFixed","ROUND_CEIL","background-image","bidListCell","_ref6","bidListRow","_ref7","toString","_this16","_callee3","_context3","promise_default","onopen","onerror","mounted","_this17","home_home","render","_vm","$createElement","_self","staticClass","attrs","title","visible","on","update:visible","$event","model","label-width","autocomplete","callback","$$v","$set","expression","slot","click","gutter","span","staticStyle","margin-bottom","shadow","float","width","cell-style","prop","scopedSlots","_u","key","scope","className","text-color","input","tab-click","ref","placeholder","round","row-style","min-width","row-class-name","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","ArrayProto","Array","isArrayIter","anObject","toLength","getIterFn","BREAK","RETURN","entries","that","step","iterator","iterFn","done","cof","TAG","ARG","O","T","B","tryGet","Object","callee","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","keys","object","reverse","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","dP","DESCRIPTORS","SPECIES","KEY","configurable","get","SAFE_CLOSING","riter","from","skipClosing","safe","arr","_promise","_promise2","gen","apply","promiseCapability","try","callbackfn","g","hadRuntime","getOwnPropertyNames","oldRuntime","un","ret","$$resolve","$JSON","stringify","D","__WEBPACK_AMD_DEFINE_RESULT__","globalScope","Decimal","inexact","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LOG_BASE","LN10_PRECISION","PI_PRECISION","digitsToString","k","ws","indexOfLastWord","str","w","getZeroString","checkInt32","checkRoundingDigits","rm","repeating","di","rd","convertBase","baseIn","baseOut","j","arrL","strL","absoluteValue","abs","finalise","clampedTo","clamp","Ctor","NaN","cmp","y","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","len","isZero","tinyPow","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","m","n","rep","t3","t3plusx","isFinite","toExponential","divide","decimalPlaces","dp","dividedBy","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","base","isBase10","denominator","inf","num","naturalLogarithm","getLn10","sub","xe","xLTy","shift","getBase10Exponent","mod","naturalExponential","exp","negated","add","carry","getPrecision","sine","sin","sin2_x","squareRoot","tangent","tan","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","ltgt","guard","sum","c0","numerator","x1","String","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","test","toLowerCase","isHyperbolic","pi","atan2","config","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","isDecimalInstance","log2","log10","random","Uint32Array","copy","clone","ROUND_UP","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","hide","target","src"],"mappings":"yCAAAA,EAAAC,SAAkBC,QAAYC,EAAQ,QAA4BC,YAAA,yBCAlEJ,EAAAC,QAAA,SAAAI,EAAAC,EAAAC,EAAAC,GACA,KAAAH,aAAAC,SAAAG,IAAAD,QAAAH,EACA,MAAAK,UAAAH,EAAA,2BACG,OAAAF,2BCHH,IAAAM,EAAcR,EAAQ,QACtBS,EAAeT,EAAQ,OAARA,CAAgB,YAC/BU,EAAgBV,EAAQ,QACxBH,EAAAC,QAAiBE,EAAQ,QAASW,kBAAA,SAAAT,GAClC,QAAAI,GAAAJ,EAAA,OAAAA,EAAAO,IACAP,EAAA,eACAQ,EAAAF,EAAAN,6BCNA,IAAAU,EAAaZ,EAAQ,QACrBa,EAAgBb,EAAQ,QAASc,IACjCC,EAAAH,EAAAI,kBAAAJ,EAAAK,uBACAC,EAAAN,EAAAM,QACAC,EAAAP,EAAAO,QACAC,EAA6B,WAAhBpB,EAAQ,OAARA,CAAgBkB,GAE7BrB,EAAAC,QAAA,WACA,IAAAuB,EAAAC,EAAAC,EAEAC,EAAA,WACA,IAAAC,EAAAC,EAEA,IADAN,IAAAK,EAAAP,EAAAS,SAAAF,EAAAG,OACAP,GAAA,CACAK,EAAAL,EAAAK,GACAL,IAAAQ,KACA,IACAH,IACO,MAAAI,GAGP,MAFAT,EAAAE,IACAD,OAAAhB,EACAwB,GAEKR,OAAAhB,EACLmB,KAAAM,SAIA,GAAAX,EACAG,EAAA,WACAL,EAAAc,SAAAR,SAGG,IAAAT,GAAAH,EAAAqB,WAAArB,EAAAqB,UAAAC,WAQA,GAAAf,KAAAgB,QAAA,CAEH,IAAAC,EAAAjB,EAAAgB,aAAA7B,GACAiB,EAAA,WACAa,EAAAC,KAAAb,SASAD,EAAA,WAEAV,EAAAyB,KAAA1B,EAAAY,QAvBG,CACH,IAAAe,GAAA,EACAC,EAAAC,SAAAC,eAAA,IACA,IAAA3B,EAAAS,GAAAmB,QAAAH,GAAuCI,eAAA,IACvCrB,EAAA,WACAiB,EAAAK,KAAAN,MAsBA,gBAAAb,GACA,IAAAoB,GAAgBpB,KAAAG,UAAAvB,GAChBgB,MAAAO,KAAAiB,GACAzB,IACAA,EAAAyB,EACAvB,KACKD,EAAAwB,uCCjEL,IAwBAC,EAAAC,EAAAC,EAAAC,EAxBAC,EAAcnD,EAAQ,QACtBY,EAAaZ,EAAQ,QACrBoD,EAAUpD,EAAQ,QAClBQ,EAAcR,EAAQ,QACtBqD,EAAcrD,EAAQ,QACtBsD,EAAetD,EAAQ,QACvBuD,EAAgBvD,EAAQ,QACxBwD,EAAiBxD,EAAQ,QACzByD,EAAYzD,EAAQ,QACpB0D,EAAyB1D,EAAQ,QACjC8C,EAAW9C,EAAQ,QAASc,IAC5B6C,EAAgB3D,EAAQ,OAARA,GAChB4D,EAAiC5D,EAAQ,QACzC6D,EAAc7D,EAAQ,QACtB8D,EAAgB9D,EAAQ,QACxB+D,EAAqB/D,EAAQ,QAE7BO,EAAAK,EAAAL,UACAW,EAAAN,EAAAM,QACA8C,EAAA9C,KAAA8C,SACAC,EAAAD,KAAAC,IAAA,GACAC,EAAAtD,EAAA,QACAQ,EAAA,WAAAZ,EAAAU,GACAiD,EAAA,aAEAC,EAAApB,EAAAY,EAAAS,EAEAC,IAAA,WACA,IAEA,IAAAlC,EAAA8B,EAAA/B,QAAA,GACAoC,GAAAnC,EAAAoC,gBAAiDxE,EAAQ,OAARA,CAAgB,qBAAAyE,GACjEA,EAAAN,MAGA,OAAA/C,GAAA,mBAAAsD,wBACAtC,EAAAC,KAAA8B,aAAAI,GAIA,IAAAN,EAAAU,QAAA,SACA,IAAAb,EAAAa,QAAA,aACG,MAAA7C,KAfH,GAmBA8C,EAAA,SAAA1E,GACA,IAAAmC,EACA,SAAAiB,EAAApD,IAAA,mBAAAmC,EAAAnC,EAAAmC,WAEAd,EAAA,SAAAa,EAAAyC,GACA,IAAAzC,EAAA0C,GAAA,CACA1C,EAAA0C,IAAA,EACA,IAAAC,EAAA3C,EAAA4C,GACArB,EAAA,WAoCA,IAnCA,IAAAsB,EAAA7C,EAAA8C,GACAC,EAAA,GAAA/C,EAAAgD,GACAC,EAAA,EACAC,EAAA,SAAAC,GACA,IAIAC,EAAAnD,EAAAoD,EAJAC,EAAAP,EAAAI,EAAAJ,GAAAI,EAAAI,KACAxD,EAAAoD,EAAApD,QACAyD,EAAAL,EAAAK,OACAjE,EAAA4D,EAAA5D,OAEA,IACA+D,GACAP,IACA,GAAA/C,EAAAyD,IAAAC,EAAA1D,GACAA,EAAAyD,GAAA,IAEA,IAAAH,EAAAF,EAAAP,GAEAtD,KAAAI,QACAyD,EAAAE,EAAAT,GACAtD,IACAA,EAAAC,OACA6D,GAAA,IAGAD,IAAAD,EAAAnD,QACAwD,EAAArF,EAAA,yBACW8B,EAAAuC,EAAAY,IACXnD,EAAAC,KAAAkD,EAAArD,EAAAyD,GACWzD,EAAAqD,IACFI,EAAAX,GACF,MAAAnD,GACPH,IAAA8D,GAAA9D,EAAAC,OACAgE,EAAA9D,KAGAiD,EAAAgB,OAAAV,GAAAC,EAAAP,EAAAM,MACAjD,EAAA4C,MACA5C,EAAA0C,IAAA,EACAD,IAAAzC,EAAAyD,IAAAG,EAAA5D,OAGA4D,EAAA,SAAA5D,GACAU,EAAAR,KAAA1B,EAAA,WACA,IAEA4E,EAAAE,EAAAO,EAFAhB,EAAA7C,EAAA8C,GACAgB,EAAAC,EAAA/D,GAeA,GAbA8D,IACAV,EAAA3B,EAAA,WACAzC,EACAF,EAAAkF,KAAA,qBAAAnB,EAAA7C,IACSsD,EAAA9E,EAAAyF,sBACTX,GAAmBtD,UAAAkE,OAAArB,KACVgB,EAAArF,EAAAqF,YAAAM,OACTN,EAAAM,MAAA,8BAAAtB,KAIA7C,EAAAyD,GAAAzE,GAAA+E,EAAA/D,GAAA,KACKA,EAAAoE,QAAAlG,EACL4F,GAAAV,EAAA1D,EAAA,MAAA0D,EAAAiB,KAGAN,EAAA,SAAA/D,GACA,WAAAA,EAAAyD,IAAA,KAAAzD,EAAAoE,IAAApE,EAAA4C,IAAAe,QAEAD,EAAA,SAAA1D,GACAU,EAAAR,KAAA1B,EAAA,WACA,IAAA8E,EACAtE,EACAF,EAAAkF,KAAA,mBAAAhE,IACKsD,EAAA9E,EAAA8F,qBACLhB,GAAetD,UAAAkE,OAAAlE,EAAA8C,QAIfyB,EAAA,SAAA1B,GACA,IAAA7C,EAAAwE,KACAxE,EAAAyE,KACAzE,EAAAyE,IAAA,GACAzE,IAAA0E,IAAA1E,GACA8C,GAAAD,EACA7C,EAAAgD,GAAA,EACAhD,EAAAoE,KAAApE,EAAAoE,GAAApE,EAAA4C,GAAA+B,SACAxF,EAAAa,GAAA,KAEA4E,EAAA,SAAA/B,GACA,IACA5C,EADAD,EAAAwE,KAEA,IAAAxE,EAAAyE,GAAA,CACAzE,EAAAyE,IAAA,EACAzE,IAAA0E,IAAA1E,EACA,IACA,GAAAA,IAAA6C,EAAA,MAAA1E,EAAA,qCACA8B,EAAAuC,EAAAK,IACAtB,EAAA,WACA,IAAAsD,GAAuBH,GAAA1E,EAAAyE,IAAA,GACvB,IACAxE,EAAAC,KAAA2C,EAAA7B,EAAA4D,EAAAC,EAAA,GAAA7D,EAAAuD,EAAAM,EAAA,IACS,MAAAnF,GACT6E,EAAArE,KAAA2E,EAAAnF,OAIAM,EAAA8C,GAAAD,EACA7C,EAAAgD,GAAA,EACA7D,EAAAa,GAAA,IAEG,MAAAN,GACH6E,EAAArE,MAAkBwE,GAAA1E,EAAAyE,IAAA,GAAyB/E,MAK3CwC,IAEAJ,EAAA,SAAAgD,GACA1D,EAAAoD,KAAA1C,EA3JA,UA2JA,MACAX,EAAA2D,GACAnE,EAAAT,KAAAsE,MACA,IACAM,EAAA9D,EAAA4D,EAAAJ,KAAA,GAAAxD,EAAAuD,EAAAC,KAAA,IACK,MAAAO,GACLR,EAAArE,KAAAsE,KAAAO,MAIApE,EAAA,SAAAmE,GACAN,KAAA5B,MACA4B,KAAAJ,QAAAlG,EACAsG,KAAAxB,GAAA,EACAwB,KAAAC,IAAA,EACAD,KAAA1B,QAAA5E,EACAsG,KAAAf,GAAA,EACAe,KAAA9B,IAAA,IAEAsC,UAAuBpH,EAAQ,OAARA,CAAyBkE,EAAAkD,WAEhD/E,KAAA,SAAAgF,EAAAC,GACA,IAAA/B,EAAAnB,EAAAV,EAAAkD,KAAA1C,IAOA,OANAqB,EAAAJ,GAAA,mBAAAkC,KACA9B,EAAAI,KAAA,mBAAA2B,KACA/B,EAAA5D,OAAAP,EAAAF,EAAAS,YAAArB,EACAsG,KAAA5B,GAAAuC,KAAAhC,GACAqB,KAAAJ,IAAAI,KAAAJ,GAAAe,KAAAhC,GACAqB,KAAAxB,IAAA7D,EAAAqF,MAAA,GACArB,EAAAnD,SAGAoF,MAAA,SAAAF,GACA,OAAAV,KAAAvE,UAAA/B,EAAAgH,MAGArE,EAAA,WACA,IAAAb,EAAA,IAAAW,EACA6D,KAAAxE,UACAwE,KAAAzE,QAAAiB,EAAA4D,EAAA5E,EAAA,GACAwE,KAAAhB,OAAAxC,EAAAuD,EAAAvE,EAAA,IAEAwB,EAAAS,EAAAD,EAAA,SAAAqD,GACA,OAAAA,IAAAvD,GAAAuD,IAAAvE,EACA,IAAAD,EAAAwE,GACAzE,EAAAyE,KAIApE,IAAAqE,EAAArE,EAAAsE,EAAAtE,EAAAuE,GAAAtD,GAA0DnD,QAAA+C,IAC1DlE,EAAQ,OAARA,CAA8BkE,EA7M9B,WA8MAlE,EAAQ,OAARA,CA9MA,WA+MAkD,EAAUlD,EAAQ,QAAS,QAG3BqD,IAAAwE,EAAAxE,EAAAuE,GAAAtD,EAlNA,WAoNAsB,OAAA,SAAAkC,GACA,IAAAC,EAAA3D,EAAAwC,MAGA,OADAoB,EADAD,EAAAnC,QACAkC,GACAC,EAAA3F,WAGAiB,IAAAwE,EAAAxE,EAAAuE,GAAAzE,IAAAmB,GA3NA,WA6NAnC,QAAA,SAAA8F,GACA,OAAAlE,EAAAZ,GAAAyD,OAAA1D,EAAAgB,EAAA0C,KAAAqB,MAGA5E,IAAAwE,EAAAxE,EAAAuE,IAAAtD,GAAgDtE,EAAQ,OAARA,CAAwB,SAAAkI,GACxEhE,EAAAiE,IAAAD,GAAA,MAAA/D,MAlOA,WAqOAgE,IAAA,SAAAC,GACA,IAAAX,EAAAb,KACAmB,EAAA3D,EAAAqD,GACAtF,EAAA4F,EAAA5F,QACAyD,EAAAmC,EAAAnC,OACAJ,EAAA3B,EAAA,WACA,IAAAwE,KACAC,EAAA,EACAC,EAAA,EACA9E,EAAA2E,GAAA,WAAAhG,GACA,IAAAoG,EAAAF,IACAG,GAAA,EACAJ,EAAAd,UAAAjH,GACAiI,IACAd,EAAAtF,QAAAC,GAAAC,KAAA,SAAA4C,GACAwD,IACAA,GAAA,EACAJ,EAAAG,GAAAvD,IACAsD,GAAApG,EAAAkG,KACSzC,OAET2C,GAAApG,EAAAkG,KAGA,OADA7C,EAAA1D,GAAA8D,EAAAJ,EAAAiB,GACAsB,EAAA3F,SAGAsG,KAAA,SAAAN,GACA,IAAAX,EAAAb,KACAmB,EAAA3D,EAAAqD,GACA7B,EAAAmC,EAAAnC,OACAJ,EAAA3B,EAAA,WACAJ,EAAA2E,GAAA,WAAAhG,GACAqF,EAAAtF,QAAAC,GAAAC,KAAA0F,EAAA5F,QAAAyD,OAIA,OADAJ,EAAA1D,GAAA8D,EAAAJ,EAAAiB,GACAsB,EAAA3F,8CCzRA,IAAAiB,EAAcrD,EAAQ,QACtB2I,EAAW3I,EAAQ,QACnBY,EAAaZ,EAAQ,QACrB0D,EAAyB1D,EAAQ,QACjC+D,EAAqB/D,EAAQ,QAE7BqD,IAAAuF,EAAAvF,EAAAwF,EAAA,WAA2CC,QAAA,SAAAC,GAC3C,IAAAtB,EAAA/D,EAAAkD,KAAA+B,EAAAxH,SAAAP,EAAAO,SACA6H,EAAA,mBAAAD,EACA,OAAAnC,KAAAvE,KACA2G,EAAA,SAAAf,GACA,OAAAlE,EAAA0D,EAAAsB,KAAA1G,KAAA,WAA8D,OAAA4F,KACzDc,EACLC,EAAA,SAAAlH,GACA,OAAAiC,EAAA0D,EAAAsB,KAAA1G,KAAA,WAA8D,MAAAP,KACzDiH,4BCjBL,IAaAE,EAAAC,EAAAC,EAbA/F,EAAUpD,EAAQ,QAClBoJ,EAAapJ,EAAQ,QACrBqJ,EAAWrJ,EAAQ,QACnBsJ,EAAUtJ,EAAQ,QAClBY,EAAaZ,EAAQ,QACrBkB,EAAAN,EAAAM,QACAqI,EAAA3I,EAAA4I,aACAC,EAAA7I,EAAA8I,eACAC,EAAA/I,EAAA+I,eACAC,EAAAhJ,EAAAgJ,SACAC,EAAA,EACAC,KAGAxE,EAAA,WACA,IAAAyE,GAAAnD,KAEA,GAAAkD,EAAAE,eAAAD,GAAA,CACA,IAAArI,EAAAoI,EAAAC,UACAD,EAAAC,GACArI,MAGAuI,EAAA,SAAAC,GACA5E,EAAAhD,KAAA4H,EAAArH,OAGA0G,GAAAE,IACAF,EAAA,SAAA7H,GAGA,IAFA,IAAAyI,KACA9E,EAAA,EACA+E,UAAArE,OAAAV,GAAA8E,EAAA5C,KAAA6C,UAAA/E,MAMA,OALAyE,IAAAD,GAAA,WAEAT,EAAA,mBAAA1H,IAAA2I,SAAA3I,GAAAyI,IAEAlB,EAAAY,GACAA,GAEAJ,EAAA,SAAAM,UACAD,EAAAC,IAGsB,WAAhB/J,EAAQ,OAARA,CAAgBkB,GACtB+H,EAAA,SAAAc,GACA7I,EAAAc,SAAAoB,EAAAkC,EAAAyE,EAAA,KAGGH,KAAAU,IACHrB,EAAA,SAAAc,GACAH,EAAAU,IAAAlH,EAAAkC,EAAAyE,EAAA,KAGGJ,GAEHR,GADAD,EAAA,IAAAS,GACAY,MACArB,EAAAsB,MAAAC,UAAAR,EACAhB,EAAA7F,EAAA+F,EAAAuB,YAAAvB,EAAA,IAGGvI,EAAA+J,kBAAA,mBAAAD,cAAA9J,EAAAgK,eACH3B,EAAA,SAAAc,GACAnJ,EAAA8J,YAAAX,EAAA,SAEAnJ,EAAA+J,iBAAA,UAAAV,GAAA,IAGAhB,EAvDA,uBAsDGK,EAAA,UACH,SAAAS,GACAV,EAAAwB,YAAAvB,EAAA,yCACAD,EAAAyB,YAAAlE,MACAtB,EAAAhD,KAAAyH,KAKA,SAAAA,GACAgB,WAAA3H,EAAAkC,EAAAyE,EAAA,QAIAlK,EAAAC,SACAgB,IAAAyI,EACAyB,MAAAvB,+KChFA,SAASwB,EAAcC,GACrB,IAAMC,EAAO,IAAIC,KAAiB,IAAZF,GAOtB,OANUC,EAAKE,cAAgB,MACpBF,EAAKG,WAAa,EAAI,GAAK,KAAOH,EAAKG,WAAa,GAAKH,EAAKG,WAAa,GAAK,OAChFH,EAAKI,UAAa,GAAK,IAAMJ,EAAKI,UAAYJ,EAAKI,WAAc,OACjEJ,EAAKK,WAAc,GAAK,IAAML,EAAKK,WAAaL,EAAKK,YAAc,OACnEL,EAAKM,aAAgB,GAAK,IAAMN,EAAKM,aAAeN,EAAKM,cAAgB,MACzEN,EAAKO,aAAgB,GAAK,IAAMP,EAAKO,aAAeP,EAAKO,cAGtE,SAASC,EAAmBT,GAC1B,IAAMC,EAAO,IAAIC,KAAiB,IAAZF,GAItB,OAHWC,EAAKK,WAAc,GAAK,IAAML,EAAKK,WAAaL,EAAKK,YAAc,MACnEL,EAAKM,aAAgB,GAAK,IAAMN,EAAKM,aAAeN,EAAKM,cAAgB,MACzEN,EAAKO,aAAgB,GAAK,IAAMP,EAAKO,aAAeP,EAAKO,0CC+VtEE,GACA/I,KADA,WAEA,OACAgJ,mBAAA,KACAC,gBAAA,KACAC,iBAAA,KACAC,SAAA,EACAC,qBAAA,EACAC,eAAA,QACAC,cACAC,WAAA,GACAC,WACAC,SAAA,GACAC,SAAA,IAEAC,YAAA,UACAC,WACAC,MAAA,GACAC,IAAA,GACAC,KAAA,EACAC,YAAA,WACAC,UAAA,EACAC,WAAA,EACAC,OAAA,IAEAC,YACAP,MAAA,GACAC,IAAA,GACAC,KAAA,EACAC,YAAA,WACAC,UAAA,EACAC,WAAA,EACAC,OAAA,IAEAE,WACAR,MAAA,IACAC,IAAA,IACAC,KAAA,EACAC,YAAA,WACAC,UAAA,EACAC,WAAA,EACAC,OAAA,IAEAG,YACAT,MAAA,IACAC,IAAA,GACAC,KAAA,EACAC,YAAA,WACAC,UAAA,EACAC,WAAA,EACAC,OAAA,KAGAI,WACAC,WACAC,UAAA,IAAAC,EAAA,WACAC,UAAA,IAAAD,EAAA,WACAE,eAAA,EAEAC,oBACAC,oBACAC,mBACAC,cACAC,cAAAC,UACAC,gBACAC,WAAA,MAEAC,cACAC,aACAC,aACAC,iBAKAC,SACAC,kBADA,SACAC,EAAAtE,GACAjE,QAAAwI,IAAAD,EAAAtE,IAEAwE,oBAJA,SAIAF,EAAAtE,GAAA,IAAAyE,EAAA/H,KACA,YAAAA,KAAA4F,YACA5F,KAAAgI,QAAAC,KAAA,4BAAAhC,YAAA,WAAAiC,aAAA,OAAAzM,KAAA,SAAA0M,GACA,SAAAA,EAAAC,OAAA,CAIA,OAAAD,EAAAlM,KAAAoM,KAGA,OAFAN,EAAAO,SAAA3I,MAAAwI,EAAAlM,KAAAsM,UACAC,aAAAC,WAAA,YAGAN,EAAAlM,UAAAyM,WAAAC,QAAA,SAAAC,GACAA,EAAA5C,KAAA,IAAA4C,EAAA5C,KAAA,QACA4C,EAAAC,OAAAD,EAAA3C,YACA2C,EAAArE,KAAAF,EAAAuE,EAAAE,YACAF,EAAAzC,WAAA,IAAAyC,EAAAzC,WAAA,YACAyC,EAAAR,OAAA,IAAAQ,EAAAR,OAAA,gBAEAL,EAAAhB,iBAAAoB,EAAAlM,UAAAyM,gBAfAX,EAAAO,SAAA3I,MAAA,UAkBAK,KAAA+I,uBAGAC,cA7BA,WA8BA,OAAAR,aAAAS,QAAA,aAEAC,gBAhCA,WAgCA,IAAAC,EAAAnJ,KACAA,KAAAgI,QAAAC,KAAA,oBAAAjI,KAAAyF,WAAAhK,KAAA,SAAA2N,GACA,MAAAA,EAAAhB,QACAe,EAAAb,SAAA3I,MAAA,QAEA,IAAAyJ,EAAAnN,KAAAoM,MACAc,EAAAb,SAAA3I,MAAAyJ,EAAAnN,KAAAsM,KAEAY,EAAAb,SAAAe,QAAA,SACAb,aAAAc,QAAA,WAAAF,EAAAnN,UAAAsN,OACAJ,EAAA9D,qBAAA,IACAzE,MAAA,SAAAgI,GACAvJ,QAAAwI,IAAAe,MAGAY,aA/CA,WA+CA,IAAAC,EAAAzJ,KACAA,KAAAgI,QAAAC,KAAA,mCAAAxM,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,KAIAoB,EAAAlE,WAAA4C,EAAAlM,UAAAyN,WAHAD,EAAAnB,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJAkB,EAAAnB,SAAA3I,MAAA,WAWAgK,aA7DA,WA6DA,IAAAC,EAAA5J,KACAA,KAAAgI,QAAAC,KAAA,6BACAY,OAAA,WAAAgB,MAAA,MAAApO,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,MAIAuB,EAAApD,QAAA2B,EAAAlM,UAAA6N,KACAF,EAAAnD,QAAA0B,EAAAlM,UAAA8N,KACAH,EAAA/C,eAAAsB,EAAAlM,KAAA+N,QACAJ,EAAApD,QAAAmC,QAAA,SAAA1M,GACA,IAAAgO,EAAA,IAAAtD,EAAA,QAAA1K,EAAA8J,KACAkE,EAAAC,GAAAN,EAAAlD,aACAkD,EAAAlD,UAAAuD,KAGAL,EAAAnD,QAAAkC,QAAA,SAAA1M,GACA,IAAAgO,EAAA,IAAAtD,EAAA,QAAA1K,EAAA8J,KACAkE,EAAAC,GAAAN,EAAAhD,aACAgD,EAAAhD,UAAAqD,MAfAL,EAAAtB,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJAqB,EAAAtB,SAAA3I,MAAA,WAyBAwK,YA1FA,WA0FA,IAAAC,EAAApK,KACAA,KAAAgI,QAAAC,KAAA,4BACAY,OAAA,WAAAwB,MAAA,KAAA5O,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,MAKAF,EAAAlM,UAAAqO,UAAA3B,QAAA,SAAA1M,GAEAA,EAAAsO,YAAAxF,EAAA9I,EAAAqI,aAGA8F,EAAApD,gBAAAmB,EAAAlM,UAAAqO,WATAF,EAAA9B,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJA6B,EAAA9B,SAAA3I,MAAA,WAgBA6K,yBA9GA,SAAAC,GA8GA,IAAAC,EAAAD,EAAAC,IAAAD,EAAAE,SACA,OAAAD,EAAAE,eACA,iBAEA,mBAGAC,kBArHA,SAqHAC,GAAA,IAAAC,EAAA/K,KAEAA,KAAAoF,SAKApF,KAAAgI,QAAAC,KAAA,yBAAAjI,KAAA6F,WAAApK,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,KAIA0C,EAAAzC,SAAAe,QAAA,QAHA0B,EAAAzC,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJAwC,EAAAzC,SAAA3I,MAAA,UASAK,KAAAgL,MAAAF,GAAAG,eAfAjL,KAAAqF,qBAAA,GAkBA6F,mBA1IA,SA0IAJ,GAAA,IAAAK,EAAAnL,KAEAA,KAAAoF,SAKApF,KAAAgI,QAAAC,KAAA,yBAAAjI,KAAAqG,YAAA5K,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,KAIA8C,EAAA7C,SAAAe,QAAA,QAHA8B,EAAA7C,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJA4C,EAAA7C,SAAA3I,MAAA,UASAK,KAAAgL,MAAAF,GAAAG,eAfAjL,KAAAqF,qBAAA,GAkBA+F,kBA/JA,SA+JAN,GAAA,IAAAO,EAAArL,KAEAA,KAAAoF,SAKApF,KAAAgI,QAAAC,KAAA,yBAAAjI,KAAAsG,WAAA7K,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,KAIAgD,EAAA/C,SAAAe,QAAA,QAHAgC,EAAA/C,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJA8C,EAAA/C,SAAA3I,MAAA,UASAK,KAAAgL,MAAAF,GAAAG,eAfAjL,KAAAqF,qBAAA,GAkBAiG,mBApLA,SAoLAR,GAAA,IAAAS,EAAAvL,KAEAA,KAAAoF,SAKApF,KAAAgI,QAAAC,KAAA,yBAAAjI,KAAAuG,YAAA9K,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,KAIAkD,EAAAjD,SAAAe,QAAA,QAHAkC,EAAAjD,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJAgD,EAAAjD,SAAA3I,MAAA,UASAK,KAAAgL,MAAAF,GAAAG,eAfAjL,KAAAqF,qBAAA,GAmBA0D,oBA1MA,WA0MA,IAAAyC,EAAAxL,KACAA,KAAAgI,QAAAC,KAAA,4BAAAhC,YAAA,WAAAiC,aAAA,OAAAzM,KAAA,SAAA0M,GACA,SAAAA,EAAAC,OAAA,CAIA,OAAAD,EAAAlM,KAAAoM,KAGA,OAFAmD,EAAAlD,SAAA3I,MAAAwI,EAAAlM,KAAAsM,UACAC,aAAAC,WAAA,YAGAN,EAAAlM,UAAAyM,WAAAC,QAAA,SAAAC,GACAA,EAAA5C,KAAA,IAAA4C,EAAA5C,KAAA,QACA4C,EAAAC,OAAAD,EAAA3C,YACA2C,EAAArE,KAAAF,EAAAuE,EAAAE,YACAF,EAAA6C,eAAA7C,EAAA8C,WAAA,IAAA9C,EAAA7C,MAEAyF,EAAA1E,iBAAAqB,EAAAlM,UAAAyM,gBAdA8C,EAAAlD,SAAA3I,MAAA,WAiBAgM,OA9NA,WA8NA,IAAAC,EAAA5L,KACAA,KAAA6L,eAAApQ,KAAA,WAEA,OAAAmQ,EAAAvE,YACA,UAEA,OACA,MACA,UAEA,OACA,MACA,WAEA,QACA,MACA,WAEA,QACA,MACA,WAEA,QACA,MACA,UAEA,QACA,MACA,UAEA,QACA,MACA,SAEA,OACA,MACA,SAEA,QACA,MACA,SACA,SAMAuE,EAAAE,eAGAC,UAhRA,SAgRAC,GAIA,IAHA,IAAAC,KACAxK,KACAyK,KACAzN,EAAA,EAAAA,EAAAuN,EAAA7M,OAAAV,IACAwN,EAAAtL,KAAAqL,EAAAvN,GAAA0N,OAAA,SACA1K,EAAAd,KAAAqL,EAAAvN,IACAyN,EAAAvL,MAAAlC,EAAAuN,EAAAvN,GAAA,GAAAuN,EAAAvN,GAAA,GAAAuN,EAAAvN,GAAA,UAEA,OACAwN,eACAxK,SACAyK,YAGAJ,UA/RA,WAgSA,IAAAM,EAAAvQ,SAAAwQ,eAAA,SACArM,KAAAuH,UAAA+E,EAAA,KAAAF,GACA,IAAAnQ,EAAA+D,KAAA+L,UAAA/L,KAAAsH,YACAjI,QAAAwI,IAAA5L,GACA+D,KAAAyH,aACA8E,WAAA,EACAC,QACAC,OAAA,GACAC,KAAA,SACAzQ,MAAA,oBAEA0Q,SACAC,QAAA,OACAC,aACAC,KAAA,SAEAC,YAAA,EACAC,YAAA,OACAC,QAAA,GACAC,WACAC,MAAA,QAEAC,SAAA,SAAAC,EAAAC,EAAA1E,EAAA2E,EAAAC,GACA,IAAAC,GACAC,IAAA,IAGA,OADAD,GAAA,kBAAAJ,EAAA,GAAAG,EAAAG,SAAA,WACAF,IAIAZ,aACAe,OAEAC,WAAA,QAGAC,OACAC,gBAAA,SAGAC,SACAC,SACAC,UACAC,YAAA,GAEAC,OACAtB,MAAA,oBAIAsB,OACAP,WAAA,MACAQ,UAAA,MACAC,YACAC,WAAA,KAGAC,WACAC,MAAA,EACAC,YAAA,EACAC,UAAA,EACAC,SAEAvQ,MAAA,EACA8O,MAAA,YAGA9O,OAAA,EACA8O,MAAA,aAIA0B,OAEAnC,KAAA,MACAoC,MAAA,KACAC,OAAA,QAGArC,KAAA,MACAoC,MAAA,KACApB,IAAA,MACAqB,OAAA,QAGAC,QAEAlC,KAAA,WACA7Q,OAAAgQ,aACAgD,aAAA,EACAC,UAAAC,QAAA,GACAC,WAAAX,MAAA,GACAY,IAAA,UACAC,IAAA,UACAzC,aACA0C,EAAA,OAIAzC,KAAA,WACA0C,UAAA,EACAvT,OAAAgQ,aACAgD,aAAA,EACAC,UAAAC,QAAA,GACAM,UAAAhB,MAAA,GACAW,WAAAX,MAAA,GACAiB,WAAAjB,MAAA,GACAY,IAAA,UACAC,IAAA,YAGAK,QAEAC,OAAA,EACAC,WACApB,MAAA,KAIAmB,OAAA,EACAJ,UAAA,EACAM,YAAA,EACAJ,WAAAjB,MAAA,GACAS,UAAAT,MAAA,GACAgB,UAAAhB,MAAA,GACAW,WAAAX,MAAA,KAGAP,WAEApB,KAAA,SACAe,YAAA,KACAkC,MAAA,GACAC,IAAA,MAGAvB,MAAA,EACAZ,YAAA,KACAf,KAAA,SACAY,IAAA,MACAqC,MAAA,GACAC,IAAA,MAGAC,SAEAzW,KAAA,kBACAsT,KAAA,cACA7Q,OAAAwF,OACAyO,WACA/C,MAAA,UACAgD,OAAA,UACAnD,iBAAAtT,EACA0W,kBAAA1W,KAIAF,KAAA,SACAsT,KAAA,MACAe,WAAA,EACAM,WAAA,EACAlS,OAAAiQ,WAIAlM,KAAAuH,UAAA8I,UAAArQ,KAAAyH,cAGAoE,aAzcA,WAycA,IAAAyE,EAAAtQ,KAAA,OAAAuQ,IAAAC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA7V,MAAA,OACA2V,EAAA,EACA,EAFAE,EAAAE,GAGAV,EAAAjJ,WAHAyJ,EAAA7V,KAIA,QAJA6V,EAAAE,GAAA,EAQA,QARAF,EAAAE,GAAA,EAYA,SAZAF,EAAAE,GAAA,GAgBA,SAhBAF,EAAAE,GAAA,GAoBA,SApBAF,EAAAE,GAAA,GAwBA,QAxBAF,EAAAE,GAAA,GA4BA,QA5BAF,EAAAE,GAAA,GAgCA,OAhCAF,EAAAE,GAAA,GAoCA,OApCAF,EAAAE,GAAA,GAwCA,OAxCAF,EAAAE,GAAA,0BAKAJ,EAAA,EACA,OANAE,EAAAG,OAAA,0BASAL,EAAA,EACA,OAVAE,EAAAG,OAAA,2BAaAL,EAAA,EACA,QAdAE,EAAAG,OAAA,2BAiBAL,EAAA,EACA,QAlBAE,EAAAG,OAAA,2BAqBAL,EAAA,EACA,QAtBAE,EAAAG,OAAA,2BAyBAL,EAAA,EACA,QA1BAE,EAAAG,OAAA,2BA6BAL,EAAA,EACA,QA9BAE,EAAAG,OAAA,2BAiCAL,EAAA,EACA,OAlCAE,EAAAG,OAAA,2BAqCAL,EAAA,EACA,QAtCAE,EAAAG,OAAA,0BAyCA,SACAL,EAAA,GA1CAE,EAAAG,OAAA,2BA6CAX,EAAAhJ,cA7CAwJ,EAAA7V,KAAA,GA8CAqV,EAAAtI,QAAAC,KAAA,6BAEAiJ,WAAA,EACAC,SAAA,cACA9J,WAAAuJ,EACA/H,OAAA,aACApN,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,KAIAF,EAAAlM,UAAAmV,UAAAzI,QACA,SAAA0I,GACA,IAAAC,GAAAjN,EAAAgN,EAAAH,YAAAG,EAAAE,KAAAF,EAAAG,MAAAH,EAAAI,IAAAJ,EAAAK,KAAAL,EAAAM,QACArB,EAAAhJ,WAAA3G,KAAA2Q,KANAhB,EAAAhI,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJA+H,EAAAhI,SAAA3I,MAAA,UAtDA,yBAAAmR,EAAAc,SAAAjB,EAAAL,KAAAC,IAqEAsB,UA9gBA,WA8gBA,IAAAC,EAAA9R,KACAA,KAAAgI,QAAAC,KAAA,8BAAAY,OAAA,aAAApN,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,MAIAyJ,EAAAtM,WAAA2C,EAAAlM,UAAA8V,YAAA,GAAAvM,WACAsM,EAAA7K,WAAAkB,EAAAlM,UAAA8V,aAJAD,EAAAxJ,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJAuJ,EAAAxJ,SAAA3I,MAAA,WAYAqS,YA7hBA,SA6hBAtQ,EAAAgJ,GAAA,IAAAuH,EAAAjS,KACAA,KAAAgI,QAAAC,KAAA,0BAAAhC,YAAA,WAAA9C,GAAAuH,EAAAvH,KAAA1H,KAAA,SAAA0M,GACA,MAAAA,EAAAC,OAIA,IAAAD,EAAAlM,KAAAoM,MACA4J,EAAA3J,SAAA3I,MAAAwI,EAAAlM,KAAAsM,KAJA0J,EAAA3J,SAAA3I,MAAA,WAQAuS,kBAxiBA,WAwiBA,IAAAC,EAAAnS,KAAA,OAAAuQ,IAAAC,EAAAC,EAAAC,KAAA,SAAA0B,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApC,EAAAC,EAAAI,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA5X,MAAA,cAAA4X,EAAA5X,KAAA,EAEAkX,EAAAW,UAFA,OAGAT,IACAhK,KAAA,EAAA0K,MAAA,wBACA1K,KAAA,EAAA0K,MAAA,kBACA1K,KAAA,EAAA0K,MAAA,mBACA1K,KAAA,EAAA0K,MAAA,oBAEAZ,EAAA/M,UACAkN,GAAAjK,KAAA,EAAApM,KAAAuM,aAAAS,QAAA,aACAkJ,EAAAa,cAAAC,KAAAC,IAAAZ,IACAC,GAAAlK,KAAA,EAAA0K,MAAA,kBACAV,EAAA1R,KAAA4R,IAEAC,EAAA,OACAC,EAAA,SACAC,EAAA,QACAC,EAAA,QACAC,EAAA,QACAP,EAAA1J,QAAA,SAAAC,GACAuJ,EAAAa,cAAAC,KAAAC,IAAAtK,MAEAuJ,EAAAa,cAAAnP,UAAA,SAAA5H,GACA,IAAAkM,EAAAgL,KAAAC,MAAAnX,QAEA,KAAAkM,EAAAE,MAAA,KAIA,OADAF,EAAAkL,EAAAC,MAAA,SAEA,KAAAb,EACApT,QAAAwI,IAAAM,GACAgK,EAAAlL,WAAA0B,QAAA,SAAAC,GACAA,EAAAC,SAAAV,EAAAkL,EAAAC,MAAA,UACA1K,EAAApD,WAAA2C,EAAAoL,EAAAC,GACA5K,EAAA6K,YAAAtL,EAAAoL,EAAArS,EACAiR,EAAA3M,WAAA2C,EAAAoL,EAAAC,MAGA,MACA,KAAAd,EACA,IAAAgB,KACAC,EAAA,IAAAhN,EAAA,WACAwB,EAAAoL,EAAA9C,EAAA9H,QAAA,SAAA0I,GACA,IACAhE,EADAuG,GAAA,EAGAzB,EAAA3L,QAAAmC,QAAA,SAAAC,GACAyI,EAAA,KAAAzI,EAAA9C,QACA8C,EAAA7C,IAAAsL,EAAA,GACAzI,EAAAxC,OAAAiL,EAAA,GACAuC,GAAA,KAGA,IAAAjN,EAAA,QAAA0K,EAAA,IAAAwC,GAAAF,KAGAtG,GAAAvH,MAAAuL,EAAA,GAAAtL,IAAAsL,EAAA,GAAAjL,OAAAiL,EAAA,IACAuC,GACAF,EAAA/S,KAAA0M,MAGA8E,EAAA3L,QAAAmC,QAAA,SAAA0I,GACA,IAAA1K,EAAA,QAAA0K,EAAAtL,KAAA8N,GAAAF,IAGAD,EAAA/S,KAAA0Q,KAGAc,EAAAzL,UAAA,IAAAC,EAAA,WACA+M,EAAA/K,QAAA,SAAAC,GACA,IAAA7C,EAAA,IAAAY,EAAA,QAAAiC,EAAA7C,KACAA,EAAAmE,GAAAiI,EAAAzL,aACAyL,EAAAzL,UAAAX,KAIAoM,EAAA3L,QAAAkN,EAAAI,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAtN,EAAA,QAAAoN,EAAAjO,OACAoO,EAAA,IAAAvN,EAAA,QAAAqN,EAAAlO,OACA,OAAAmO,EAAAE,WAAAD,KAEA,IAAAE,KACAjM,EAAAoL,EAAAc,EAAA1L,QAAA,SAAA0I,GACA,IACAhE,EADAuG,GAAA,EAGAzB,EAAA1L,QAAAkC,QAAA,SAAAC,GAEAyI,EAAA,KAAAzI,EAAA9C,QACA8C,EAAA7C,IAAAsL,EAAA,GACAzI,EAAAxC,OAAAiL,EAAA,GACAuC,GAAA,KAIA,IAAAjN,EAAA,QAAA0K,EAAA,IAAAwC,GAAAF,KAGAtG,GAAAvH,MAAAuL,EAAA,GAAAtL,IAAAsL,EAAA,GAAAjL,OAAAiL,EAAA,IAEAuC,GACAQ,EAAAzT,KAAA0M,MAGA8E,EAAA1L,QAAAkC,QAAA,SAAA0I,GACA,IAAA1K,EAAA,QAAA0K,EAAAtL,KAAA8N,GAAAF,IAGAS,EAAAzT,KAAA0Q,KAGAc,EAAAvL,UAAA,IAAAD,EAAA,WACAyN,EAAAzL,QAAA,SAAAC,GACA,IAAA7C,EAAA,IAAAY,EAAA,QAAAiC,EAAA7C,KACAA,EAAAmE,GAAAiI,EAAAvL,aACAuL,EAAAvL,UAAAb,KAKAoM,EAAA1L,QAAA2N,EAAAN,KAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAtN,EAAA,QAAAoN,EAAAjO,OACAoO,EAAA,IAAAvN,EAAA,QAAAqN,EAAAlO,OACA,OAAAmO,EAAAE,WAAAD,KAGA,MACA,KAAA1B,EACA,IAAA/E,GACA3H,MAAAqC,EAAAoL,IACAxN,IAAAoC,EAAAoL,EAAAtJ,EACAM,YAAAxF,EAAAoD,EAAAoL,EAAAe,IACA1J,eAAAzC,EAAAoL,EAAAgB,KAEApC,EAAAnL,gBAAAwN,QAAA/G,GACA0E,EAAAnL,gBAAAyN,MACA,MACA,KAAA9B,EAEA,IAAA+B,EAAA,GACA,OAAAvC,EAAA9K,YACA,UACAqN,EAAA,OACA,MACA,UACAA,EAAA,OACA,MACA,WACAA,EAAA,QACA,MACA,WACAA,EAAA,QACA,MACA,WACAA,EAAA,QACA,MACA,UACAA,EAAA,QACA,MACA,UACAA,EAAA,QACA,MACA,SACAA,EAAA,OACA,MACA,SACAA,EAAA,QACA,MACA,SACAA,EAAA,SAGA,GAAAvM,EAAAkL,EAAAC,MAAA,UAAAoB,EACA,OAEA,IAAAC,EAAAxC,EAAA1K,YAAAwI,OAAA,GAAAhU,KAAAkD,OACAmS,GAAAnJ,EAAAoL,EAAAqB,EAAAzM,EAAAoL,EAAAsB,EAAA1M,EAAAoL,EAAAoB,EAAAxM,EAAAoL,EAAAuB,EAAA3M,EAAAoL,EAAA1T,GAEA,GAAAsS,EAAA1K,YAAAuH,MAAA,GAAA/S,KAAA0Y,EAAA,KAAAtQ,EAAA8D,EAAAoL,EAAA3C,IAAA,CACA,IAAAmE,GAAAJ,EAAA,EAAAxM,EAAAoL,EAAA1T,GAAA,GACAsS,EAAA1K,YAAAwI,OAAA,GAAAhU,KAAA0Y,EAAA,GAAArD,EACAa,EAAA1K,YAAAwI,OAAA,GAAAhU,KAAA0Y,EAAA,GAAAI,MACA,CACA,IAAAC,GAAAL,EAAAxM,EAAAoL,EAAA1T,GAAA,GACAsS,EAAA1K,YAAAwI,OAAA,GAAAhU,KAAA0E,KAAA2Q,GACAa,EAAA1K,YAAAuH,MAAA,GAAA/S,KAAA0E,KAAA0D,EAAA8D,EAAAoL,EAAA3C,KACAuB,EAAA1K,YAAAwI,OAAA,GAAAhU,KAAA0E,KAAAqU,GAEA3V,QAAAwI,IAAAsK,EAAA1K,YAAAwI,QACAkC,EAAA5K,UAAA8I,UAAA8B,EAAA1K,aACA,MACA,KAAAmL,EACA,OAAAzK,EAAAoL,EAAA0B,GACA,OACA,IAAAC,GACA/R,GAAAgF,EAAAoL,EAAApQ,GACAgS,SAAAhN,EAAAoL,EAAA6B,GACAC,QAAAlN,EAAAoL,EAAA+B,EACAzM,OAAAV,EAAAoL,EAAAgC,GACAzP,MAAAqC,EAAAoL,IACAxN,IAAAoC,EAAAoL,EAAAtJ,EACA7D,OAAA+B,EAAAoL,EAAA9C,EACAzK,KAAA,IAAAmC,EAAAoL,EAAAiC,GAAA,QACApN,OAAAD,EAAAoL,EAAA0B,EACA9O,WAAAgC,EAAAoL,EAAAkC,GACA/J,WAAAvD,EAAAoL,EAAAmC,GACAC,cAAAxN,EAAAoL,EAAAqC,GACAC,iBAAA1N,EAAAoL,EAAAuC,IACAvR,KAAAF,EAAA8D,EAAAoL,EAAAwC,IACAtK,eAAAtD,EAAAoL,EAAAmC,GAAA,IAAAvN,EAAAoL,EAAAtJ,GAEAkI,EAAArL,iBAAA0N,QAAAU,GACA,MACA,OACA/C,EAAArL,iBAAAqL,EAAArL,iBAAAkP,OAAA,SAAApN,GACA,OAAAA,EAAAzF,KAAAgF,EAAAoL,EAAApQ,KAEA,MACA,OACAgP,EAAArL,iBAAA6B,QAAA,SAAAC,GACAA,EAAA6C,eAAAtD,EAAAoL,EAAAmC,GAAA,IAAA9M,EAAA7C,MAEA,MACA,OACAoM,EAAArL,iBAAAqL,EAAArL,iBAAAkP,OAAA,SAAApN,GACA,OAAAA,EAAAzF,KAAAgF,EAAAoL,EAAApQ,KAKAgF,EAAAoL,EAAA0B,IAxOA,yBAAApC,EAAAjB,SAAAQ,EAAAD,KAAA5B,IAiPA0F,gBAzxBA,SAAAC,GAyxBAA,EAAAvL,SAAA,IAAAwL,EAAAD,EAAAC,YAAAzL,EAAAwL,EAAAxL,IAAAwL,EAAAE,OACA,OAAA1L,EAAAE,gBAAA,IAAAuL,EACA,mBAEAzL,EAAAE,gBAAA,IAAAuL,OAAA,EACA,mBAIAE,gBAlyBA,SAAAC,GAkyBAA,EAAA3L,SAAA,IAAAwL,EAAAG,EAAAH,YAAAzL,EAAA4L,EAAA5L,IAAA4L,EAAAF,OAEA,OAAAD,EAAA,CAEA,GAAAzL,EAAA+I,YAAA,EACA,wBAGA,GAAA/I,EAAA+I,aAAA,EACA,0BAKA8C,YAhzBA,SAAAC,GAgzBAA,EAAA7L,SAAA,IAAAwL,EAAAK,EAAAL,YAAAK,EAAA9L,IAAA8L,EAAAJ,OACA,WAAAD,EACA,uGAEA,8GAEAM,WAtzBA,SAAAC,GAszBA,IAAAhM,EAAAgM,EAAAhM,IAEAiM,GAFAD,EAAA/L,SACA,IAAAhE,EAAA,QAAA+D,EAAA3E,KACA6Q,IAAA5W,KAAA0G,WAAAmQ,IAAA,IAAAlQ,EAAA,cAAAmQ,OAAAC,QAAA,EAAApQ,EAAA,QAAAqQ,aACA,OAAAC,mBAAA,mCAAAN,EAAA,cAAAA,EAAA,SAGAO,YA5zBA,SAAAC,GA4zBAA,EAAAxM,SAAA,IAAAwL,EAAAgB,EAAAhB,YAAAgB,EAAAzM,IAAAyM,EAAAf,OACA,WAAAD,EACA,uGAEA,8GAEAiB,WAl0BA,SAAAC,GAk0BA,IAAA3M,EAAA2M,EAAA3M,IAAA2M,EAAA1M,SACAtL,QAAAwI,IAAA7H,KAAA4G,UAAA0Q,YACA,IACAX,EADA,IAAAhQ,EAAA,QAAA+D,EAAA3E,KACA6Q,IAAA5W,KAAA4G,WAAAiQ,IAAA,IAAAlQ,EAAA,cAAAmQ,OAAAC,QAAA,EAAApQ,EAAA,QAAAqQ,YACA,OAAAC,mBAAA,mCAAAN,EAAA,cAAAA,EAAA,SAGA7D,QAz0BA,WAy0BA,IAAAyE,EAAAvX,KAAA,OAAAuQ,IAAAC,EAAAC,EAAAC,KAAA,SAAA8G,IAAA,OAAAhH,EAAAC,EAAAI,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAxc,MAAA,cAAAwc,EAAAxc,KAAA,EACA,IAAAyc,EAAAjH,EAAA,SAAAlV,EAAAyD,GACAuY,EAAAvE,cAAA,IAAA7L,UAAA,uBACAoQ,EAAAvE,cAAA2E,OAAA,WACAtY,QAAAwI,IAAA,aACAtM,KAEAgc,EAAAvE,cAAA4E,QAAA,SAAAjY,GACAX,EAAAW,MARA,wBAAA8X,EAAA7F,SAAA4F,EAAAD,KAAAhH,KAiBAsH,QAr6BA,WAq6BA,IAAAC,EAAA9X,KACAA,KAAAoF,QAAApF,KAAAgJ,gBACAhJ,KAAAoF,UACApF,KAAAkF,gBAAA,KACAlF,KAAAmF,iBAAA,KACAnF,KAAAwJ,eACAxJ,KAAA+I,uBAEA/I,KAAA2J,eACA3J,KAAAmK,cACAnK,KAAA6R,YACA7R,KAAAkS,oBACAlS,KAAA6L,eAAApQ,KAAA,WACAqc,EAAAhM,gBC9xCeiM,GADEC,OAFjB,WAA0B,IAAAC,EAAAjY,KAAaf,EAAAgZ,EAAAC,eAA0B9Z,EAAA6Z,EAAAE,MAAA/Z,IAAAa,EAAwB,OAAAb,EAAA,OAAiBga,YAAA,cAAwBha,EAAA,OAAAA,EAAA,aAA4Bia,OAAOC,MAAA,KAAAC,QAAAN,EAAA5S,qBAA+CmT,IAAKC,iBAAA,SAAAC,GAAkCT,EAAA5S,oBAAAqT,MAAiCta,EAAA,WAAgBia,OAAOM,MAAAV,EAAAxS,aAAuBrH,EAAA,gBAAqBia,OAAOvK,MAAA,MAAA8K,cAAAX,EAAA3S,kBAAgDlH,EAAA,YAAiBia,OAAOQ,aAAA,OAAqBF,OAAQta,MAAA4Z,EAAAxS,UAAA,SAAAqT,SAAA,SAAAC,GAAwDd,EAAAe,KAAAf,EAAAxS,UAAA,WAAAsT,IAAyCE,WAAA,yBAAkC,GAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,gBAAqCia,OAAOvK,MAAA,KAAA8K,cAAAX,EAAA3S,kBAA+ClH,EAAA,YAAiBia,OAAOQ,aAAA,OAAqBF,OAAQta,MAAA4Z,EAAAxS,UAAA,SAAAqT,SAAA,SAAAC,GAAwDd,EAAAe,KAAAf,EAAAxS,UAAA,WAAAsT,IAAyCE,WAAA,yBAAkC,OAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,OAAgCga,YAAA,gBAAAC,OAAmCa,KAAA,UAAgBA,KAAA,WAAe9a,EAAA,aAAkBoa,IAAIW,MAAA,SAAAT,GAAyBT,EAAA5S,qBAAA,MAAkC4S,EAAA3Z,GAAA,SAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,aAA8Cia,OAAOvL,KAAA,WAAiB0L,IAAKW,MAAA,SAAAT,GAAyB,OAAAT,EAAA/O,sBAA+B+O,EAAA3Z,GAAA,qBAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,UAAuDia,OAAOe,OAAA,KAAYhb,EAAA,UAAeia,OAAOgB,KAAA,KAAUjb,EAAA,WAAgBga,YAAA,WAAAkB,aAAoCC,gBAAA,SAAwBlB,OAAQmB,OAAA,WAAkBpb,EAAA,OAAYga,YAAA,WAAAkB,aAAoCG,MAAA,QAAepB,OAAQa,KAAA,UAAgBA,KAAA,WAAejB,EAAA3Z,GAAA,QAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,YAA4Ckb,aAAaI,MAAA,QAAerB,OAAQpc,KAAAgc,EAAAhR,WAAA0S,aAAA1B,EAAA5B,mBAAwDjY,EAAA,mBAAwBia,OAAOuB,KAAA,SAAAF,MAAA,MAAA5L,MAAA,SAA6CmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,aAAAF,MAAA,MAAA5L,MAAA,QAAgDmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,cAAAF,MAAA,KAAA5L,MAAA,OAAgD+L,YAAA5B,EAAA6B,KAAsBC,IAAA,UAAAjf,GAAA,SAAAkf,GAAiC,OAAA/B,EAAA3Z,GAAA,qBAAA2Z,EAAAzZ,GAAAwb,EAAAtP,IAAA+I,aAAA,2BAA0F,OAAAwE,EAAA3Z,GAAA,KAAAF,EAAA,WAAoCga,YAAA,WAAAC,OAA8BmB,OAAA,WAAkBpb,EAAA,OAAYga,YAAA,WAAAC,OAA8Ba,KAAA,UAAgBA,KAAA,WAAe9a,EAAA,QAAakb,aAAaG,MAAA,UAAgBxB,EAAA3Z,GAAA,UAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,YAA8Ckb,aAAaI,MAAA,QAAerB,OAAQpc,KAAAgc,EAAA1S,cAAuBnH,EAAA,mBAAwBia,OAAOuB,KAAA,YAAA9L,MAAA,QAAiCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,gBAAA9L,MAAA,QAAqCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,aAAA9L,MAAA,SAAkC,WAAAmK,EAAA3Z,GAAA,KAAAF,EAAA,UAAuCia,OAAOgB,KAAA,MAAWjb,EAAA,WAAgBia,OAAOmB,OAAA,WAAkBpb,EAAA,OAAYia,OAAO4B,UAAA,aAAuB7b,EAAA,UAAAA,EAAA,kBAAoCia,OAAO6B,aAAA,WAAuB1B,IAAK2B,MAAAlC,EAAAtM,QAAmBgN,OAAQta,MAAA4Z,EAAA,WAAAa,SAAA,SAAAC,GAAgDd,EAAA5Q,WAAA0R,GAAmBE,WAAA,gBAA0B7a,EAAA,mBAAwBia,OAAOvK,MAAA,SAAemK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,SAAemK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,UAAgBmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,UAAgBmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,UAAgBmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,SAAemK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,SAAemK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,QAAcmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,QAAcmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOvK,MAAA,SAAc,OAAAmK,EAAA3Z,GAAA,KAAAF,EAAA,OAAgCkb,aAAaI,MAAA,OAAA3K,OAAA,SAAgCsJ,OAAQlV,GAAA,YAAc,KAAA8U,EAAA3Z,GAAA,KAAAF,EAAA,WAAkCga,YAAA,WAAAC,OAA8BmB,OAAA,WAAkBpb,EAAA,OAAYkb,aAAavK,OAAA,WAAkB3Q,EAAA,WAAgBoa,IAAI4B,YAAAnC,EAAAtQ,mBAAkCgR,OAAQta,MAAA4Z,EAAA,mBAAAa,SAAA,SAAAC,GAAwDd,EAAAhT,mBAAA8T,GAA2BE,WAAA,wBAAkC7a,EAAA,eAAoBia,OAAOvK,MAAA,OAAAtU,KAAA,QAA4B4E,EAAA,OAAAA,EAAA,UAAAA,EAAA,UAAsCia,OAAOgB,KAAA,MAAWjb,EAAA,WAAgBic,IAAA,YAAAhC,OAAuBO,cAAA,OAAAD,MAAAV,EAAApS,aAA4CzH,EAAA,gBAAqBia,OAAOuB,KAAA,WAAgBxb,EAAA,YAAiBia,OAAOiC,YAAA,MAAmB3B,OAAQta,MAAA4Z,EAAApS,UAAA,MAAAiT,SAAA,SAAAC,GAAqDd,EAAAe,KAAAf,EAAApS,UAAA,QAAAkT,IAAsCE,WAAA,sBAA+B,GAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,gBAAqCia,OAAOuB,KAAA,SAAcxb,EAAA,YAAiBia,OAAOiC,YAAA,MAAmB3B,OAAQta,MAAA4Z,EAAApS,UAAA,IAAAiT,SAAA,SAAAC,GAAmDd,EAAAe,KAAAf,EAAApS,UAAA,MAAAkT,IAAoCE,WAAA,oBAA6B,GAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,gBAAAA,EAAA,aAAqDkb,aAAaI,MAAA,OAAcrB,OAAQvL,KAAA,WAAiB0L,IAAKW,MAAA,SAAAT,GAAyB,OAAAT,EAAApN,kBAAA,iBAA4CoN,EAAA3Z,GAAA,+BAAA2Z,EAAAzZ,GAAAyZ,EAAA/S,iBAAA,4CAAA+S,EAAA3Z,GAAA,KAAAF,EAAA,UAAyIia,OAAOgB,KAAA,MAAWjb,EAAA,WAAgBic,IAAA,aAAAhC,OAAwBO,cAAA,OAAAD,MAAAV,EAAA5R,cAA6CjI,EAAA,gBAAqBia,OAAOuB,KAAA,WAAgBxb,EAAA,YAAiBia,OAAOiC,YAAA,MAAmB3B,OAAQta,MAAA4Z,EAAA5R,WAAA,MAAAyS,SAAA,SAAAC,GAAsDd,EAAAe,KAAAf,EAAA5R,WAAA,QAAA0S,IAAuCE,WAAA,uBAAgC,GAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,gBAAqCia,OAAOuB,KAAA,SAAcxb,EAAA,YAAiBia,OAAOiC,YAAA,MAAmB3B,OAAQta,MAAA4Z,EAAA5R,WAAA,IAAAyS,SAAA,SAAAC,GAAoDd,EAAAe,KAAAf,EAAA5R,WAAA,MAAA0S,IAAqCE,WAAA,qBAA8B,GAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,aAAkCkb,aAAaI,MAAA,OAAcrB,OAAQkC,MAAA,GAAAzN,KAAA,WAA4B0L,IAAKW,MAAA,SAAAT,GAAyB,OAAAT,EAAA/M,mBAAA,kBAA8C+M,EAAA3Z,GAAA,6BAAA2Z,EAAAzZ,GAAAyZ,EAAA9S,kBAAA,gDAAA8S,EAAA3Z,GAAA,KAAAF,EAAA,eAAiJia,OAAOvK,MAAA,OAAAtU,KAAA,QAA4B4E,EAAA,OAAAA,EAAA,UAAAA,EAAA,UAAsCia,OAAOgB,KAAA,MAAWjb,EAAA,WAAgBic,IAAA,YAAAhC,OAAuBO,cAAA,OAAAD,MAAAV,EAAA3R,aAA4ClI,EAAA,gBAAqBia,OAAOuB,KAAA,YAAiBxb,EAAA,YAAiBia,OAAOiC,YAAA,MAAmB3B,OAAQta,MAAA4Z,EAAA3R,UAAA,OAAAwS,SAAA,SAAAC,GAAsDd,EAAAe,KAAAf,EAAA3R,UAAA,SAAAyS,IAAuCE,WAAA,uBAAgC,GAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,aAAkCkb,aAAaI,MAAA,OAAcrB,OAAQkC,MAAA,GAAAzN,KAAA,WAA4B0L,IAAKW,MAAA,SAAAT,GAAyB,OAAAT,EAAA7M,kBAAA,iBAA4C6M,EAAA3Z,GAAA,gBAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,UAAkDia,OAAOgB,KAAA,MAAWjb,EAAA,WAAgBic,IAAA,aAAAhC,OAAwBO,cAAA,OAAAD,MAAAV,EAAA1R,cAA6CnI,EAAA,gBAAqBia,OAAOuB,KAAA,SAAcxb,EAAA,YAAiBia,OAAOiC,YAAA,MAAmB3B,OAAQta,MAAA4Z,EAAA1R,WAAA,IAAAuS,SAAA,SAAAC,GAAoDd,EAAAe,KAAAf,EAAA1R,WAAA,MAAAwS,IAAqCE,WAAA,qBAA8B,GAAAhB,EAAA3Z,GAAA,KAAAF,EAAA,aAAkCkb,aAAaI,MAAA,OAAcrB,OAAQkC,MAAA,GAAAzN,KAAA,WAA4B0L,IAAKW,MAAA,SAAAT,GAAyB,OAAAT,EAAA3M,mBAAA,kBAA8C2M,EAAA3Z,GAAA,wCAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,UAA0Eia,OAAOgB,KAAA,KAAUjb,EAAA,WAAgBga,YAAA,WAAAC,OAA8BmB,OAAA,WAAkBpb,EAAA,OAAYga,YAAA,WAAAC,OAA8Ba,KAAA,UAAgBA,KAAA,WAAe9a,EAAA,QAAA6Z,EAAA3Z,GAAA,WAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,OAAqDga,YAAA,iBAA2Bha,EAAA,YAAiBia,OAAOpc,KAAAgc,EAAAzR,QAAAmT,aAAA1B,EAAA1B,YAAAiE,YAAAvC,EAAAxB,cAA4ErY,EAAA,mBAAwBia,OAAOuB,KAAA,QAAAF,MAAA,MAAA5L,MAAA,cAAiDmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,MAAA9L,MAAA,KAAA4L,MAAA,QAAwCzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAAa,YAAA,MAAA3M,MAAA,SAAgD,SAAAmK,EAAA3Z,GAAA,KAAAF,EAAA,WAAsCga,YAAA,WAAAC,OAA8BmB,OAAA,WAAkBpb,EAAA,OAAA6Z,EAAA3Z,GAAA,SAAA2Z,EAAAzZ,GAAAyZ,EAAAzS,iBAAAyS,EAAA3Z,GAAA,KAAAF,EAAA,WAAkFga,YAAA,WAAAC,OAA8BmB,OAAA,WAAkBpb,EAAA,YAAiBia,OAAOpc,KAAAgc,EAAAxR,QAAAkT,aAAA1B,EAAAf,YAAAsD,YAAAvC,EAAAb,cAA4EhZ,EAAA,mBAAwBia,OAAOuB,KAAA,QAAAF,MAAA,MAAA5L,MAAA,cAAiDmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,MAAA9L,MAAA,KAAA4L,MAAA,QAAwCzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAAF,MAAA,MAAA5L,MAAA,SAA4C,WAAAmK,EAAA3Z,GAAA,KAAAF,EAAA,UAAuCia,OAAOgB,KAAA,KAAUjb,EAAA,WAAgBga,YAAA,WAAAC,OAA8BmB,OAAA,WAAkBpb,EAAA,OAAYga,YAAA,WAAAC,OAA8Ba,KAAA,UAAgBA,KAAA,WAAe9a,EAAA,QAAA6Z,EAAA3Z,GAAA,YAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,OAAsDga,YAAA,gBAA0Bha,EAAA,YAAiBkb,aAAaI,MAAA,QAAerB,OAAQpc,KAAAgc,EAAAjR,gBAAA0T,iBAAAzC,EAAAzN,yBAAAmP,aAAA1B,EAAAhC,mBAA2G7X,EAAA,mBAAwBia,OAAOuB,KAAA,QAAA9L,MAAA,cAAmCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,MAAA9L,MAAA,aAAgCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,cAAA9L,MAAA,SAAmC,iBAAAmK,EAAA3Z,GAAA,KAAAF,EAAA,UAAAA,EAAA,UAA0Dia,OAAOgB,KAAA,MAAWjb,EAAA,WAAgBoa,IAAI4B,YAAAnC,EAAAnQ,qBAAoC6Q,OAAQta,MAAA4Z,EAAA,YAAAa,SAAA,SAAAC,GAAiDd,EAAArS,YAAAmT,GAAoBE,WAAA,iBAA2B7a,EAAA,eAAoBia,OAAOvK,MAAA,OAAAtU,KAAA,aAAiC4E,EAAA,YAAiBkb,aAAaI,MAAA,QAAerB,OAAQpc,KAAAgc,EAAAnR,oBAA6B1I,EAAA,mBAAwBia,OAAOuB,KAAA,OAAA9L,MAAA,KAAA4L,MAAA,SAA0CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAA9L,MAAA,MAAA4L,MAAA,SAA6CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,OAAA9L,MAAA,QAA4BmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,QAAA9L,MAAA,MAAA4L,MAAA,SAA4CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,MAAA9L,MAAA,MAAA4L,MAAA,SAA0CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAA9L,MAAA,UAAgCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,iBAAA9L,MAAA,iBAA+CmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAA9L,MAAA,MAA6B+L,YAAA5B,EAAA6B,KAAsBC,IAAA,UAAAjf,GAAA,SAAAkf,GAAiC,OAAA5b,EAAA,aAAwBia,OAAO7K,KAAA,OAAAV,KAAA,UAA8B0L,IAAKW,MAAA,SAAAT,GAAyB,OAAAT,EAAAjG,YAAAgI,EAAApY,OAAAoY,EAAAtP,SAAkDuN,EAAA3Z,GAAA,oCAA0C,OAAA2Z,EAAA3Z,GAAA,KAAAF,EAAA,eAAwCia,OAAOvK,MAAA,OAAAtU,KAAA,aAAiC4E,EAAA,YAAiBkb,aAAaI,MAAA,QAAerB,OAAQpc,KAAAgc,EAAAlR,oBAA6B3I,EAAA,mBAAwBia,OAAOuB,KAAA,OAAA9L,MAAA,KAAA4L,MAAA,SAA0CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAA9L,MAAA,MAAA4L,MAAA,SAA6CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,OAAA9L,MAAA,QAA4BmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,aAAA9L,MAAA,QAAkCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,QAAA9L,MAAA,MAAA4L,MAAA,SAA4CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,MAAA9L,MAAA,MAAA4L,MAAA,SAA0CzB,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAA9L,MAAA,UAAgCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,aAAA9L,MAAA,WAAqCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,mBAAA9L,MAAA,UAA0CmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,gBAAA9L,MAAA,SAAsCmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,SAAA9L,MAAA,QAA8BmK,EAAA3Z,GAAA,KAAAF,EAAA,mBAAoCia,OAAOuB,KAAA,UAAA9L,MAAA,SAA+B,wBAE/vV6M,oBCCjB,IAcAC,EAdyBxhB,EAAQ,OAcjCyhB,CACE7V,EACA+S,GATF,EAVA,SAAA+C,GACE1hB,EAAQ,SAaV,kBAEA,MAUe2hB,EAAA,QAAAH,EAAiB,8BCzBhC,IAAA9gB,EAAgBV,EAAQ,QACxBS,EAAeT,EAAQ,OAARA,CAAgB,YAC/B4hB,EAAAC,MAAAza,UAEAvH,EAAAC,QAAA,SAAAI,GACA,YAAAI,IAAAJ,IAAAQ,EAAAmhB,QAAA3hB,GAAA0hB,EAAAnhB,KAAAP,4BCNA,IAAAkD,EAAUpD,EAAQ,QAClBsC,EAAWtC,EAAQ,QACnB8hB,EAAkB9hB,EAAQ,QAC1B+hB,EAAe/hB,EAAQ,QACvBgiB,EAAehiB,EAAQ,QACvBiiB,EAAgBjiB,EAAQ,QACxBkiB,KACAC,MACAriB,EAAAD,EAAAC,QAAA,SAAAsI,EAAAga,EAAA1gB,EAAA2gB,EAAA5hB,GACA,IAGAsF,EAAAuc,EAAAC,EAAA/c,EAHAgd,EAAA/hB,EAAA,WAAuC,OAAA2H,GAAmB6Z,EAAA7Z,GAC1D/D,EAAAjB,EAAA1B,EAAA2gB,EAAAD,EAAA,KACA9Z,EAAA,EAEA,sBAAAka,EAAA,MAAAjiB,UAAA6H,EAAA,qBAEA,GAAA0Z,EAAAU,IAAA,IAAAzc,EAAAic,EAAA5Z,EAAArC,QAAmEA,EAAAuC,EAAgBA,IAEnF,IADA9C,EAAA4c,EAAA/d,EAAA0d,EAAAO,EAAAla,EAAAE,IAAA,GAAAga,EAAA,IAAAje,EAAA+D,EAAAE,OACA4Z,GAAA1c,IAAA2c,EAAA,OAAA3c,OACG,IAAA+c,EAAAC,EAAAlgB,KAAA8F,KAA4Cka,EAAAC,EAAA1gB,QAAA4gB,MAE/C,IADAjd,EAAAlD,EAAAigB,EAAAle,EAAAie,EAAArd,MAAAmd,MACAF,GAAA1c,IAAA2c,EAAA,OAAA3c,IAGA0c,QACApiB,EAAAqiB,sDCvBA,IAAAO,EAAU1iB,EAAQ,QAClB2iB,EAAU3iB,EAAQ,OAARA,CAAgB,eAE1B4iB,EAA+C,aAA/CF,EAAA,WAA2B,OAAAtY,UAA3B,IASAvK,EAAAC,QAAA,SAAAI,GACA,IAAA2iB,EAAAC,EAAAC,EACA,YAAAziB,IAAAJ,EAAA,mBAAAA,EAAA,OAEA,iBAAA4iB,EAVA,SAAA5iB,EAAAygB,GACA,IACA,OAAAzgB,EAAAygB,GACG,MAAA7e,KAOHkhB,CAAAH,EAAAI,OAAA/iB,GAAAyiB,IAAAG,EAEAF,EAAAF,EAAAG,GAEA,WAAAE,EAAAL,EAAAG,KAAA,mBAAAA,EAAAK,OAAA,YAAAH,wBCdA,SAAAniB,GACA,aAEA,IAEAN,EAFA6iB,EAAAF,OAAA7b,UACAgc,EAAAD,EAAAnZ,eAEAqZ,EAAA,mBAAAC,iBACAC,EAAAF,EAAAd,UAAA,aACAiB,EAAAH,EAAAI,eAAA,kBACAC,EAAAL,EAAAM,aAAA,gBAEAC,EAAA,iBAAA/jB,EACAgkB,EAAAjjB,EAAAkjB,mBACA,GAAAD,EACAD,IAGA/jB,EAAAC,QAAA+jB,OAJA,EAaAA,EAAAjjB,EAAAkjB,mBAAAF,EAAA/jB,EAAAC,YAcA2X,OAoBA,IAAAsM,EAAA,iBACAC,EAAA,iBACAC,EAAA,YACAC,EAAA,YAIAC,KAYAC,KACAA,EAAAb,GAAA,WACA,OAAA3c,MAGA,IAAAyd,EAAApB,OAAAqB,eACAC,EAAAF,OAAAhc,QACAkc,GACAA,IAAApB,GACAC,EAAA9gB,KAAAiiB,EAAAhB,KAGAa,EAAAG,GAGA,IAAAC,EAAAC,EAAArd,UACAsd,EAAAtd,UAAA6b,OAAA0B,OAAAP,GACAQ,EAAAxd,UAAAod,EAAAhgB,YAAAigB,EACAA,EAAAjgB,YAAAogB,EACAH,EAAAf,GACAkB,EAAAC,YAAA,oBAYAhB,EAAAiB,oBAAA,SAAAC,GACA,IAAAC,EAAA,mBAAAD,KAAAvgB,YACA,QAAAwgB,IACAA,IAAAJ,GAGA,uBAAAI,EAAAH,aAAAG,EAAA5kB,QAIAyjB,EAAAvM,KAAA,SAAAyN,GAUA,OATA9B,OAAAgC,eACAhC,OAAAgC,eAAAF,EAAAN,IAEAM,EAAAG,UAAAT,EACAf,KAAAqB,IACAA,EAAArB,GAAA,sBAGAqB,EAAA3d,UAAA6b,OAAA0B,OAAAH,GACAO,GAOAlB,EAAAsB,MAAA,SAAAC,GACA,OAAYC,QAAAD,IA8EZE,EAAAC,EAAAne,WACAme,EAAAne,UAAAoc,GAAA,WACA,OAAA5c,MAEAid,EAAA0B,gBAKA1B,EAAA2B,MAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA1d,EAAA,IAAAqd,EACA9N,EAAAgO,EAAAC,EAAAC,EAAAC,IAGA,OAAA/B,EAAAiB,oBAAAY,GACAxd,EACAA,EAAArG,OAAAQ,KAAA,SAAAmD,GACA,OAAAA,EAAAid,KAAAjd,EAAAP,MAAAiD,EAAArG,UAsKAyjB,EAAAd,GAEAA,EAAAd,GAAA,YAOAc,EAAAjB,GAAA,WACA,OAAA3c,MAGA4d,EAAAtG,SAAA,WACA,4BAkCA2F,EAAAgC,KAAA,SAAAC,GACA,IAAAD,KACA,QAAAlF,KAAAmF,EACAD,EAAAte,KAAAoZ,GAMA,OAJAkF,EAAAE,UAIA,SAAAlkB,IACA,KAAAgkB,EAAA9f,QAAA,CACA,IAAA4a,EAAAkF,EAAAxK,MACA,GAAAsF,KAAAmF,EAGA,OAFAjkB,EAAAoD,MAAA0b,EACA9e,EAAA4gB,MAAA,EACA5gB,EAQA,OADAA,EAAA4gB,MAAA,EACA5gB,IAsCAgiB,EAAAxb,SAMA2d,EAAA5e,WACA5C,YAAAwhB,EAEAC,MAAA,SAAAC,GAcA,GAbAtf,KAAA+Q,KAAA,EACA/Q,KAAA/E,KAAA,EAGA+E,KAAAuf,KAAAvf,KAAAwf,MAAA9lB,EACAsG,KAAA6b,MAAA,EACA7b,KAAAyf,SAAA,KAEAzf,KAAA0f,OAAA,OACA1f,KAAAwe,IAAA9kB,EAEAsG,KAAA2f,WAAAhX,QAAAiX,IAEAN,EACA,QAAA9lB,KAAAwG,KAEA,MAAAxG,EAAAqmB,OAAA,IACArD,EAAA9gB,KAAAsE,KAAAxG,KACAsmB,OAAAtmB,EAAA2G,MAAA,MACAH,KAAAxG,GAAAE,IAMAkY,KAAA,WACA5R,KAAA6b,MAAA,EAEA,IACAkE,EADA/f,KAAA2f,WAAA,GACAK,WACA,aAAAD,EAAAjT,KACA,MAAAiT,EAAAvB,IAGA,OAAAxe,KAAAigB,MAGAC,kBAAA,SAAAC,GACA,GAAAngB,KAAA6b,KACA,MAAAsE,EAGA,IAAAC,EAAApgB,KACA,SAAAqgB,EAAAC,EAAAC,GAYA,OAXAC,EAAA1T,KAAA,QACA0T,EAAAhC,IAAA2B,EACAC,EAAAnlB,KAAAqlB,EAEAC,IAGAH,EAAAV,OAAA,OACAU,EAAA5B,IAAA9kB,KAGA6mB,EAGA,QAAA9hB,EAAAuB,KAAA2f,WAAAxgB,OAAA,EAA8CV,GAAA,IAAQA,EAAA,CACtD,IAAAgiB,EAAAzgB,KAAA2f,WAAAlhB,GACA+hB,EAAAC,EAAAT,WAEA,YAAAS,EAAAC,OAIA,OAAAL,EAAA,OAGA,GAAAI,EAAAC,QAAA1gB,KAAA+Q,KAAA,CACA,IAAA4P,EAAAnE,EAAA9gB,KAAA+kB,EAAA,YACAG,EAAApE,EAAA9gB,KAAA+kB,EAAA,cAEA,GAAAE,GAAAC,EAAA,CACA,GAAA5gB,KAAA+Q,KAAA0P,EAAAI,SACA,OAAAR,EAAAI,EAAAI,UAAA,GACa,GAAA7gB,KAAA+Q,KAAA0P,EAAAK,WACb,OAAAT,EAAAI,EAAAK,iBAGW,GAAAH,GACX,GAAA3gB,KAAA+Q,KAAA0P,EAAAI,SACA,OAAAR,EAAAI,EAAAI,UAAA,OAGW,KAAAD,EAMX,UAAAG,MAAA,0CALA,GAAA/gB,KAAA+Q,KAAA0P,EAAAK,WACA,OAAAT,EAAAI,EAAAK,gBAUA7P,OAAA,SAAAnE,EAAA0R,GACA,QAAA/f,EAAAuB,KAAA2f,WAAAxgB,OAAA,EAA8CV,GAAA,IAAQA,EAAA,CACtD,IAAAgiB,EAAAzgB,KAAA2f,WAAAlhB,GACA,GAAAgiB,EAAAC,QAAA1gB,KAAA+Q,MACAyL,EAAA9gB,KAAA+kB,EAAA,eACAzgB,KAAA+Q,KAAA0P,EAAAK,WAAA,CACA,IAAAE,EAAAP,EACA,OAIAO,IACA,UAAAlU,GACA,aAAAA,IACAkU,EAAAN,QAAAlC,GACAA,GAAAwC,EAAAF,aAGAE,EAAA,MAGA,IAAAR,EAAAQ,IAAAhB,cAIA,OAHAQ,EAAA1T,OACA0T,EAAAhC,MAEAwC,GACAhhB,KAAA0f,OAAA,OACA1f,KAAA/E,KAAA+lB,EAAAF,WACAvD,GAGAvd,KAAAihB,SAAAT,IAGAS,SAAA,SAAAT,EAAAU,GACA,aAAAV,EAAA1T,KACA,MAAA0T,EAAAhC,IAcA,MAXA,UAAAgC,EAAA1T,MACA,aAAA0T,EAAA1T,KACA9M,KAAA/E,KAAAulB,EAAAhC,IACO,WAAAgC,EAAA1T,MACP9M,KAAAigB,KAAAjgB,KAAAwe,IAAAgC,EAAAhC,IACAxe,KAAA0f,OAAA,SACA1f,KAAA/E,KAAA,OACO,WAAAulB,EAAA1T,MAAAoU,IACPlhB,KAAA/E,KAAAimB,GAGA3D,GAGA4D,OAAA,SAAAL,GACA,QAAAriB,EAAAuB,KAAA2f,WAAAxgB,OAAA,EAA8CV,GAAA,IAAQA,EAAA,CACtD,IAAAgiB,EAAAzgB,KAAA2f,WAAAlhB,GACA,GAAAgiB,EAAAK,eAGA,OAFA9gB,KAAAihB,SAAAR,EAAAT,WAAAS,EAAAS,UACAtB,EAAAa,GACAlD,IAKA3c,MAAA,SAAA8f,GACA,QAAAjiB,EAAAuB,KAAA2f,WAAAxgB,OAAA,EAA8CV,GAAA,IAAQA,EAAA,CACtD,IAAAgiB,EAAAzgB,KAAA2f,WAAAlhB,GACA,GAAAgiB,EAAAC,WAAA,CACA,IAAAF,EAAAC,EAAAT,WACA,aAAAQ,EAAA1T,KAAA,CACA,IAAAsU,EAAAZ,EAAAhC,IACAoB,EAAAa,GAEA,OAAAW,GAMA,UAAAL,MAAA,0BAGAM,cAAA,SAAA7f,EAAA8f,EAAAC,GAaA,OAZAvhB,KAAAyf,UACA9D,SAAAla,EAAAD,GACA8f,aACAC,WAGA,SAAAvhB,KAAA0f,SAGA1f,KAAAwe,IAAA9kB,GAGA6jB,IA3qBA,SAAA1M,EAAAgO,EAAAC,EAAAC,EAAAC,GAEA,IAAAwC,EAAA1C,KAAAte,qBAAAsd,EAAAgB,EAAAhB,EACA2D,EAAApF,OAAA0B,OAAAyD,EAAAhhB,WACA4f,EAAA,IAAAhB,EAAAJ,OAMA,OAFAyC,EAAAC,QA0MA,SAAA7C,EAAAE,EAAAqB,GACA,IAAAuB,EAAAxE,EAEA,gBAAAuC,EAAAlB,GACA,GAAAmD,IAAAtE,EACA,UAAA0D,MAAA,gCAGA,GAAAY,IAAArE,EAAA,CACA,aAAAoC,EACA,MAAAlB,EAKA,OAAAoD,IAMA,IAHAxB,EAAAV,SACAU,EAAA5B,QAEA,CACA,IAAAiB,EAAAW,EAAAX,SACA,GAAAA,EAAA,CACA,IAAAoC,EAAAC,EAAArC,EAAAW,GACA,GAAAyB,EAAA,CACA,GAAAA,IAAAtE,EAAA,SACA,OAAAsE,GAIA,YAAAzB,EAAAV,OAGAU,EAAAb,KAAAa,EAAAZ,MAAAY,EAAA5B,SAES,aAAA4B,EAAAV,OAAA,CACT,GAAAiC,IAAAxE,EAEA,MADAwE,EAAArE,EACA8C,EAAA5B,IAGA4B,EAAAF,kBAAAE,EAAA5B,SAES,WAAA4B,EAAAV,QACTU,EAAAnP,OAAA,SAAAmP,EAAA5B,KAGAmD,EAAAtE,EAEA,IAAAmD,EAAAuB,EAAAlD,EAAAE,EAAAqB,GACA,cAAAI,EAAA1T,KAAA,CAOA,GAJA6U,EAAAvB,EAAAvE,KACAyB,EACAF,EAEAoD,EAAAhC,MAAAjB,EACA,SAGA,OACAlf,MAAAmiB,EAAAhC,IACA3C,KAAAuE,EAAAvE,MAGS,UAAA2E,EAAA1T,OACT6U,EAAArE,EAGA8C,EAAAV,OAAA,QACAU,EAAA5B,IAAAgC,EAAAhC,OAlRAwD,CAAAnD,EAAAE,EAAAqB,GAEAqB,EAcA,SAAAM,EAAAjnB,EAAA2S,EAAA+Q,GACA,IACA,OAAc1R,KAAA,SAAA0R,IAAA1jB,EAAAY,KAAA+R,EAAA+Q,IACT,MAAAje,GACL,OAAcuM,KAAA,QAAA0R,IAAAje,IAiBd,SAAAud,KACA,SAAAE,KACA,SAAAH,KA4BA,SAAAa,EAAAle,IACA,yBAAAmI,QAAA,SAAA+W,GACAlf,EAAAkf,GAAA,SAAAlB,GACA,OAAAxe,KAAA0hB,QAAAhC,EAAAlB,MAoCA,SAAAG,EAAA8C,GAwCA,IAAAQ,EAgCAjiB,KAAA0hB,QA9BA,SAAAhC,EAAAlB,GACA,SAAA0D,IACA,WAAA3nB,QAAA,SAAAgB,EAAAyD,IA3CA,SAAAwD,EAAAkd,EAAAlB,EAAAjjB,EAAAyD,GACA,IAAAwhB,EAAAuB,EAAAN,EAAA/B,GAAA+B,EAAAjD,GACA,aAAAgC,EAAA1T,KAEO,CACP,IAAAlO,EAAA4hB,EAAAhC,IACAngB,EAAAO,EAAAP,MACA,OAAAA,GACA,iBAAAA,GACAme,EAAA9gB,KAAA2C,EAAA,WACA9D,QAAAgB,QAAA8C,EAAAogB,SAAAhjB,KAAA,SAAA4C,GACAmE,EAAA,OAAAnE,EAAA9C,EAAAyD,IACW,SAAAuB,GACXiC,EAAA,QAAAjC,EAAAhF,EAAAyD,KAIAzE,QAAAgB,QAAA8C,GAAA5C,KAAA,SAAA0mB,GAgBAvjB,EAAAP,MAAA8jB,EACA5mB,EAAAqD,IACSI,GAhCTA,EAAAwhB,EAAAhC,KAyCAhc,CAAAkd,EAAAlB,EAAAjjB,EAAAyD,KAIA,OAAAijB,EAaAA,IAAAxmB,KACAymB,EAGAA,GACAA,KA+GA,SAAAJ,EAAArC,EAAAW,GACA,IAAAV,EAAAD,EAAA9D,SAAAyE,EAAAV,QACA,GAAAA,IAAAhmB,EAAA,CAKA,GAFA0mB,EAAAX,SAAA,KAEA,UAAAW,EAAAV,OAAA,CACA,GAAAD,EAAA9D,SAAAyG,SAGAhC,EAAAV,OAAA,SACAU,EAAA5B,IAAA9kB,EACAooB,EAAArC,EAAAW,GAEA,UAAAA,EAAAV,QAGA,OAAAnC,EAIA6C,EAAAV,OAAA,QACAU,EAAA5B,IAAA,IAAA7kB,UACA,kDAGA,OAAA4jB,EAGA,IAAAiD,EAAAuB,EAAArC,EAAAD,EAAA9D,SAAAyE,EAAA5B,KAEA,aAAAgC,EAAA1T,KAIA,OAHAsT,EAAAV,OAAA,QACAU,EAAA5B,IAAAgC,EAAAhC,IACA4B,EAAAX,SAAA,KACAlC,EAGA,IAAA8E,EAAA7B,EAAAhC,IAEA,OAAA6D,EAOAA,EAAAxG,MAGAuE,EAAAX,EAAA6B,YAAAe,EAAAhkB,MAGA+hB,EAAAnlB,KAAAwkB,EAAA8B,QAQA,WAAAnB,EAAAV,SACAU,EAAAV,OAAA,OACAU,EAAA5B,IAAA9kB,GAUA0mB,EAAAX,SAAA,KACAlC,GANA8E,GA3BAjC,EAAAV,OAAA,QACAU,EAAA5B,IAAA,IAAA7kB,UAAA,oCACAymB,EAAAX,SAAA,KACAlC,GAoDA,SAAA+E,EAAAC,GACA,IAAA9B,GAAiBC,OAAA6B,EAAA,IAEjB,KAAAA,IACA9B,EAAAI,SAAA0B,EAAA,IAGA,KAAAA,IACA9B,EAAAK,WAAAyB,EAAA,GACA9B,EAAAS,SAAAqB,EAAA,IAGAviB,KAAA2f,WAAAhf,KAAA8f,GAGA,SAAAb,EAAAa,GACA,IAAAD,EAAAC,EAAAT,eACAQ,EAAA1T,KAAA,gBACA0T,EAAAhC,IACAiC,EAAAT,WAAAQ,EAGA,SAAApB,EAAAJ,GAIAhf,KAAA2f,aAAwBe,OAAA,SACxB1B,EAAArW,QAAA2Z,EAAAtiB,MACAA,KAAAqf,OAAA,GA8BA,SAAA5d,EAAAD,GACA,GAAAA,EAAA,CACA,IAAAghB,EAAAhhB,EAAAmb,GACA,GAAA6F,EACA,OAAAA,EAAA9mB,KAAA8F,GAGA,sBAAAA,EAAAvG,KACA,OAAAuG,EAGA,IAAAse,MAAAte,EAAArC,QAAA,CACA,IAAAV,GAAA,EAAAxD,EAAA,SAAAA,IACA,OAAAwD,EAAA+C,EAAArC,QACA,GAAAqd,EAAA9gB,KAAA8F,EAAA/C,GAGA,OAFAxD,EAAAoD,MAAAmD,EAAA/C,GACAxD,EAAA4gB,MAAA,EACA5gB,EAOA,OAHAA,EAAAoD,MAAA3E,EACAuB,EAAA4gB,MAAA,EAEA5gB,GAGA,OAAAA,UAKA,OAAYA,KAAA2mB,GAIZ,SAAAA,IACA,OAAYvjB,MAAA3E,EAAAmiB,MAAA,IAhgBZ,CA8sBA,WAAe,OAAA7b,KAAf,IAA6ByD,SAAA,cAAAA,0BCrtB7BrK,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRA,EAAQ,QACRH,EAAAC,QAAiBE,EAAQ,QAAkBmB,8BCN3CtB,EAAAC,QAAiBE,EAAQ,2CCCzB,IAAAY,EAAaZ,EAAQ,QACrB2I,EAAW3I,EAAQ,QACnBqpB,EAASrpB,EAAQ,QACjBspB,EAAkBtpB,EAAQ,QAC1BupB,EAAcvpB,EAAQ,OAARA,CAAgB,WAE9BH,EAAAC,QAAA,SAAA0pB,GACA,IAAA/hB,EAAA,mBAAAkB,EAAA6gB,GAAA7gB,EAAA6gB,GAAA5oB,EAAA4oB,GACAF,GAAA7hB,MAAA8hB,IAAAF,EAAAhlB,EAAAoD,EAAA8hB,GACAE,cAAA,EACAC,IAAA,WAAsB,OAAA9iB,6BCXtB/G,EAAAC,QAAA,SAAA2E,GACA,IACA,OAAY3C,GAAA,EAAA2E,EAAAhC,KACT,MAAA3C,GACH,OAAYA,GAAA,EAAA2E,EAAA3E,2BCJZ,IAAArB,EAAeT,EAAQ,OAARA,CAAgB,YAC/B2pB,GAAA,EAEA,IACA,IAAAC,GAAA,GAAAnpB,KACAmpB,EAAA,kBAAiCD,GAAA,GAEjC9H,MAAAgI,KAAAD,EAAA,WAAiC,UAChC,MAAA9nB,IAEDjC,EAAAC,QAAA,SAAA2E,EAAAqlB,GACA,IAAAA,IAAAH,EAAA,SACA,IAAAI,GAAA,EACA,IACA,IAAAC,GAAA,GACA9hB,EAAA8hB,EAAAvpB,KACAyH,EAAArG,KAAA,WAA6B,OAAS4gB,KAAAsH,GAAA,IACtCC,EAAAvpB,GAAA,WAAiC,OAAAyH,GACjCzD,EAAAulB,GACG,MAAAloB,IACH,OAAAioB,sCClBAjqB,EAAAG,YAAA,EAEA,IAIAoU,EAJA4V,EAAejqB,EAAQ,QAEvBkqB,GAEA7V,EAFA4V,IAEsC5V,EAAApU,WAAAoU,GAAuCtU,QAAAsU,GAE7EvU,EAAAC,QAAA,SAAA2B,GACA,kBACA,IAAAyoB,EAAAzoB,EAAA0oB,MAAAxjB,KAAAwD,WACA,WAAA8f,EAAAnqB,QAAA,SAAAoC,EAAAyD,GAqBA,OApBA,SAAA0c,EAAA3B,EAAAyE,GACA,IACA,IAAA6D,EAAAkB,EAAAxJ,GAAAyE,GACAngB,EAAAgkB,EAAAhkB,MACS,MAAAsB,GAET,YADAX,EAAAW,GAIA,IAAA0iB,EAAAxG,KAGA,OAAAyH,EAAAnqB,QAAAoC,QAAA8C,GAAA5C,KAAA,SAAA4C,GACAqd,EAAA,OAAArd,IACW,SAAAkC,GACXmb,EAAA,QAAAnb,KALAhF,EAAA8C,GAUAqd,CAAA,kCClCA,IAAAP,EAAe/hB,EAAQ,QACvBsD,EAAetD,EAAQ,QACvBoE,EAA2BpE,EAAQ,QAEnCH,EAAAC,QAAA,SAAA2H,EAAAQ,GAEA,GADA8Z,EAAAta,GACAnE,EAAA2E,MAAAzD,cAAAiD,EAAA,OAAAQ,EACA,IAAAoiB,EAAAjmB,EAAAC,EAAAoD,GAGA,OADAtF,EADAkoB,EAAAloB,SACA8F,GACAoiB,EAAAjoB,+BCVA,IACAH,EADajC,EAAQ,QACrBiC,UAEApC,EAAAC,QAAAmC,KAAA6B,WAAA,wCCDA,IAAAT,EAAcrD,EAAQ,QACtBoE,EAA2BpE,EAAQ,QACnC6D,EAAc7D,EAAQ,QAEtBqD,IAAAwE,EAAA,WAA+ByiB,IAAA,SAAAC,GAC/B,IAAAF,EAAAjmB,EAAAC,EAAAuC,MACApB,EAAA3B,EAAA0mB,GAEA,OADA/kB,EAAA1D,EAAAuoB,EAAAzkB,OAAAykB,EAAAloB,SAAAqD,EAAAiB,GACA4jB,EAAAjoB,iCCDA,IAAAooB,EAAA,WAAqB,OAAA5jB,KAArB,IAAmCyD,SAAA,cAAAA,GAInCogB,EAAAD,EAAA1G,oBACAb,OAAAyH,oBAAAF,GAAA7lB,QAAA,yBAGAgmB,EAAAF,GAAAD,EAAA1G,mBAOA,GAJA0G,EAAA1G,wBAAAxjB,EAEAT,EAAAC,QAAiBE,EAAQ,QAEzByqB,EAEAD,EAAA1G,mBAAA6G,OAGA,WACAH,EAAA1G,mBACG,MAAAhiB,GACH0oB,EAAA1G,wBAAAxjB,uBC/BAT,EAAAC,QAAA,SAAA4B,EAAAyI,EAAAkY,GACA,IAAAuI,OAAAtqB,IAAA+hB,EACA,OAAAlY,EAAApE,QACA,cAAA6kB,EAAAlpB,IACAA,EAAAY,KAAA+f,GACA,cAAAuI,EAAAlpB,EAAAyI,EAAA,IACAzI,EAAAY,KAAA+f,EAAAlY,EAAA,IACA,cAAAygB,EAAAlpB,EAAAyI,EAAA,GAAAA,EAAA,IACAzI,EAAAY,KAAA+f,EAAAlY,EAAA,GAAAA,EAAA,IACA,cAAAygB,EAAAlpB,EAAAyI,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAzI,EAAAY,KAAA+f,EAAAlY,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,cAAAygB,EAAAlpB,EAAAyI,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAzI,EAAAY,KAAA+f,EAAAlY,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACG,OAAAzI,EAAA0oB,MAAA/H,EAAAlY,0BCbH,IAAA4X,EAAe/hB,EAAQ,QACvBH,EAAAC,QAAA,SAAAyiB,EAAA7gB,EAAAuD,EAAAmd,GACA,IACA,OAAAA,EAAA1gB,EAAAqgB,EAAA9c,GAAA,GAAAA,EAAA,IAAAvD,EAAAuD,GAEG,MAAAnD,GACH,IAAA+oB,EAAAtI,EAAA,OAEA,WADAjiB,IAAAuqB,GAAA9I,EAAA8I,EAAAvoB,KAAAigB,IACAzgB,0BCTAjC,EAAAC,SAAkBC,QAAYC,EAAQ,QAAmCC,YAAA,sCCEzE,IAAAsD,EAAgBvD,EAAQ,QAaxBH,EAAAC,QAAAuE,EAAA,SAAAoD,GACA,WAZA,SAAAA,GACA,IAAAtF,EAAAyD,EACAgB,KAAAxE,QAAA,IAAAqF,EAAA,SAAAqjB,EAAA9iB,GACA,QAAA1H,IAAA6B,QAAA7B,IAAAsF,EAAA,MAAArF,UAAA,2BACA4B,EAAA2oB,EACAllB,EAAAoC,IAEApB,KAAAzE,QAAAoB,EAAApB,GACAyE,KAAAhB,OAAArC,EAAAqC,GAIA,CAAA6B,0BChBA,IAAAkB,EAAW3I,EAAQ,QACnB+qB,EAAApiB,EAAAoR,OAAApR,EAAAoR,MAAuCiR,UAAAjR,KAAAiR,YACvCnrB,EAAAC,QAAA,SAAAI,GACA,OAAA6qB,EAAAC,UAAAZ,MAAAW,EAAA3gB,kCCFA,IAAA2X,EAAe/hB,EAAQ,QACvBuD,EAAgBvD,EAAQ,QACxBupB,EAAcvpB,EAAQ,OAARA,CAAgB,WAC9BH,EAAAC,QAAA,SAAA+iB,EAAAoI,GACA,IACApjB,EADAJ,EAAAsa,EAAAc,GAAAre,YAEA,YAAAlE,IAAAmH,QAAAnH,IAAAuH,EAAAka,EAAAta,GAAA8hB,IAAA0B,EAAA1nB,EAAAsE,0BCPA,IAAAqjB,GAAC,SAAAC,GACD;;;;;;;KAiBA,IAkFAC,EAAAC,EAAAC,EAlFAC,EAAA,KAIAC,EAAA,IAGAC,EAAA,mBAGAC,EAAA,qgCAGAC,EAAA,qgCAIAC,GAOAC,UAAA,GAiBAC,SAAA,EAeAC,OAAA,EAIAC,UAAA,EAIAC,SAAA,GAIAC,MAAAX,EAIAY,KAAAZ,EAGAa,QAAA,GAQAC,GAAA,EAEAC,EAAA,kBACAC,EAAAD,EAAA,qBACAE,EAAAF,EAAA,2BACAG,EAAAH,EAAA,qBACAI,EAAA,mBAEAC,EAAAC,KAAAC,MACAC,EAAAF,KAAAG,IAEAC,EAAA,6CACAC,EAAA,yDACAC,EAAA,gDACAC,EAAA,qCAEAC,EAAA,IACAC,EAAA,EAGAC,EAAA5B,EAAA3lB,OAAA,EACAwnB,EAAA5B,EAAA5lB,OAAA,EAGA6C,GAAS+a,YAAA+I,GA01ET,SAAAc,EAAAvV,GACA,IAAA5S,EAAAooB,EAAAC,EACAC,EAAA1V,EAAAlS,OAAA,EACA6nB,EAAA,GACAC,EAAA5V,EAAA,GAEA,GAAA0V,EAAA,GAEA,IADAC,GAAAC,EACAxoB,EAAA,EAAiBA,EAAAsoB,EAAqBtoB,IACtCqoB,EAAAzV,EAAA5S,GAAA,IACAooB,EAAAJ,EAAAK,EAAA3nB,UACA6nB,GAAAE,EAAAL,IACAG,GAAAF,EAGAG,EAAA5V,EAAA5S,IAEAooB,EAAAJ,GADAK,EAAAG,EAAA,IACA9nB,UACA6nB,GAAAE,EAAAL,SACK,OAAAI,EACL,UAIA,KAAUA,EAAA,OAAcA,GAAA,GAExB,OAAAD,EAAAC,EAIA,SAAAE,EAAA1oB,EAAA4Q,EAAAC,GACA,GAAA7Q,WAAA4Q,GAAA5Q,EAAA6Q,EACA,MAAAyR,MAAA4E,EAAAlnB,GAUA,SAAA2oB,EAAA/V,EAAA5S,EAAA4oB,EAAAC,GACA,IAAAC,EAAAV,EAAA3lB,EAAAsmB,EAGA,IAAAX,EAAAxV,EAAA,GAAkBwV,GAAA,GAASA,GAAA,KAAApoB,EAwC3B,QArCAA,EAAA,GACAA,GAAAgoB,EACAc,EAAA,IAEAA,EAAAvB,KAAAlP,MAAArY,EAAA,GAAAgoB,GACAhoB,GAAAgoB,GAMAI,EAAAX,EAAA,GAAAO,EAAAhoB,GACA+oB,EAAAnW,EAAAkW,GAAAV,EAAA,EAEA,MAAAS,EACA7oB,EAAA,GACA,GAAAA,EAAA+oB,IAAA,MACA,GAAA/oB,IAAA+oB,IAAA,MACAtmB,EAAAmmB,EAAA,UAAAG,GAAAH,EAAA,UAAAG,GAAA,KAAAA,GAAA,GAAAA,GAEAtmB,GAAAmmB,EAAA,GAAAG,EAAA,GAAAX,GAAAQ,EAAA,GAAAG,EAAA,GAAAX,EAAA,KACAxV,EAAAkW,EAAA,GAAAV,EAAA,QAAAX,EAAA,GAAAznB,EAAA,OACA+oB,GAAAX,EAAA,MAAAW,IAAA,IAAAnW,EAAAkW,EAAA,GAAAV,EAAA,OAGApoB,EAAA,GACA,GAAAA,EAAA+oB,IAAA,MACA,GAAA/oB,EAAA+oB,IAAA,MACA,GAAA/oB,IAAA+oB,IAAA,MACAtmB,GAAAomB,GAAAD,EAAA,UAAAG,IAAAF,GAAAD,EAAA,SAAAG,GAEAtmB,IAAAomB,GAAAD,EAAA,IAAAG,EAAA,GAAAX,IACAS,GAAAD,EAAA,GAAAG,EAAA,GAAAX,EAAA,KACAxV,EAAAkW,EAAA,GAAAV,EAAA,QAAAX,EAAA,GAAAznB,EAAA,KAIAyC,EAOA,SAAAumB,EAAAT,EAAAU,EAAAC,GAOA,IANA,IAAAC,EAEAC,EADAzE,GAAA,GAEA3kB,EAAA,EACAqpB,EAAAd,EAAA7nB,OAEUV,EAAAqpB,GAAU,CACpB,IAAAD,EAAAzE,EAAAjkB,OAA6B0oB,KAAQzE,EAAAyE,IAAAH,EAErC,IADAtE,EAAA,IAAAyB,EAAA9mB,QAAAipB,EAAAnH,OAAAphB,MACAmpB,EAAA,EAAiBA,EAAAxE,EAAAjkB,OAAgByoB,IACjCxE,EAAAwE,GAAAD,EAAA,SACA,IAAAvE,EAAAwE,EAAA,KAAAxE,EAAAwE,EAAA,MACAxE,EAAAwE,EAAA,IAAAxE,EAAAwE,GAAAD,EAAA,EACAvE,EAAAwE,IAAAD,GAKA,OAAAvE,EAAAjE,UAh4EAnd,EAAA+lB,cAAA/lB,EAAAgmB,IAAA,WACA,IAAA3mB,EAAA,IAAArB,KAAApC,YAAAoC,MAEA,OADAqB,EAAA4T,EAAA,IAAA5T,EAAA4T,EAAA,GACAgT,EAAA5mB,IASAW,EAAA8U,KAAA,WACA,OAAAmR,EAAA,IAAAjoB,KAAApC,YAAAoC,WAAA9E,EAAA,MAYA8G,EAAAkmB,UAAAlmB,EAAAmmB,MAAA,SAAA9Y,EAAAC,GACA,IACAjO,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAGA,GAFAyR,EAAA,IAAA+Y,EAAA/Y,GACAC,EAAA,IAAA8Y,EAAA9Y,IACAD,EAAA4F,IAAA3F,EAAA2F,EAAA,WAAAmT,EAAAC,KACA,GAAAhZ,EAAAnF,GAAAoF,GAAA,MAAAyR,MAAA4E,EAAArW,GAEA,OADAjO,EAAAinB,IAAAjZ,GACA,EAAAA,EAAAhO,EAAAinB,IAAAhZ,GAAA,EAAAA,EAAA,IAAA8Y,EAAA/mB,IAYAW,EAAAmS,WAAAnS,EAAAsmB,IAAA,SAAAC,GACA,IAAA9pB,EAAAmpB,EAAAY,EAAAC,EACApnB,EAAArB,KACA0oB,EAAArnB,EAAAgQ,EACAsX,GAAAJ,EAAA,IAAAlnB,EAAAzD,YAAA2qB,IAAAlX,EACAuX,EAAAvnB,EAAA4T,EACA4T,EAAAN,EAAAtT,EAGA,IAAAyT,IAAAC,EACA,OAAAC,GAAAC,EAAAD,IAAAC,EAAAD,EAAAF,IAAAC,EAAA,GAAAD,EAAAE,EAAA,OAAAP,IAIA,IAAAK,EAAA,KAAAC,EAAA,UAAAD,EAAA,GAAAE,EAAAD,EAAA,IAAAE,EAAA,EAGA,GAAAD,IAAAC,EAAA,OAAAD,EAGA,GAAAvnB,EAAAnG,IAAAqtB,EAAArtB,EAAA,OAAAmG,EAAAnG,EAAAqtB,EAAArtB,EAAA0tB,EAAA,OAMA,IAAAnqB,EAAA,EAAAmpB,GAJAY,EAAAE,EAAAvpB,SACAspB,EAAAE,EAAAxpB,QAGAqpB,EAAAC,EAA0ChqB,EAAAmpB,IAAOnpB,EACjD,GAAAiqB,EAAAjqB,KAAAkqB,EAAAlqB,GAAA,OAAAiqB,EAAAjqB,GAAAkqB,EAAAlqB,GAAAmqB,EAAA,OAIA,OAAAJ,IAAAC,EAAA,EAAAD,EAAAC,EAAAG,EAAA,QAiBA5mB,EAAA8mB,OAAA9mB,EAAA+mB,IAAA,WACA,IAAAC,EAAA3B,EACAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAAgQ,EAGAhQ,EAAAgQ,EAAA,IAEA2X,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAAhD,KAAA1W,IAAAjO,EAAAnG,EAAAmG,EAAA4nB,MAAAxC,EACA2B,EAAAlD,SAAA,EAEA7jB,EA4xEA,SAAA+mB,EAAA/mB,GACA,IAAAwlB,EAAAqC,EAAAX,EAEA,GAAAlnB,EAAA8nB,SAAA,OAAA9nB,GAMA6nB,EAAA7nB,EAAAgQ,EAAAlS,QACA,IACA0nB,EAAAb,KAAAlP,KAAAoS,EAAA,GACAX,GAAA,EAAAa,EAAA,EAAAvC,IAAAvP,aAEAuP,EAAA,GACA0B,EAAA,gCAGAH,EAAAnD,WAAA4B,EAEAxlB,EAAAgoB,EAAAjB,EAAA,EAAA/mB,EAAAioB,MAAAf,GAAA,IAAAH,EAAA,IAGA,QAAA3pB,EAAAooB,EAAmBpoB,KAAK,CACxB,IAAA8qB,EAAAloB,EAAAioB,MAAAjoB,GACAA,EAAAkoB,EAAAD,MAAAC,GAAAC,MAAAD,GAAAD,MAAA,GAAAG,KAAA,GAKA,OAFArB,EAAAnD,WAAA4B,EAEAxlB,EA1zEAynB,CAAAV,EAAAsB,EAAAtB,EAAA/mB,IAEA+mB,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAY,EAAA,GAAAvD,GAAA,GAAAA,EAAArjB,EAAAsoB,MAAAtoB,EAAA2nB,EAAA3B,GAAA,IAZA,IAAAe,EAAA,GAHA,IAAAA,EAAAC,MAmCArmB,EAAA4nB,SAAA5nB,EAAA6nB,KAAA,WACA,IAAA3uB,EAAA4uB,EAAAC,EAAA7oB,EAAA8oB,EAAA/U,EAAAgU,EAAA5V,EAAA4W,EAAAC,EACA7oB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,IAAAyD,EAAA8oB,YAAA9oB,EAAA8nB,SAAA,WAAAf,EAAA/mB,GAoCA,IAnCAokB,GAAA,GAGAxQ,EAAA5T,EAAA4T,EAAAiR,EAAA7kB,EAAA4T,EAAA5T,EAAA,OAIA2kB,KAAAgC,IAAA/S,IAAA,IAqBA/T,EAAA,IAAAknB,EAAAnT,EAAAqC,aApBAyS,EAAAnD,EAAAvlB,EAAAgQ,IAIA4D,IAHA/Z,EAAAmG,EAAAnG,GAGA6uB,EAAA5qB,OAAA,QAAA4qB,GAAA,GAAA9U,IAAA,GAAAA,EAAA,UACAA,EAAAiR,EAAA6D,EAAA,KAGA7uB,EAAA6qB,GAAA7qB,EAAA,OAAAA,EAAA,IAAAA,EAAA,UASAgG,EAAA,IAAAknB,EANA2B,EADA9U,GAAA,IACA,KAAA/Z,GAEA6uB,EAAA9U,EAAAmV,iBACAjqB,MAAA,EAAA4pB,EAAAhsB,QAAA,QAAA7C,IAIA+Z,EAAA5T,EAAA4T,GAKAgU,GAAA/tB,EAAAktB,EAAAnD,WAAA,IAWA,GAJAiF,GADAD,GADA5W,EAAAnS,GACAooB,MAAAjW,GAAAiW,MAAAjW,IACAoW,KAAApoB,GACAH,EAAAmpB,EAAAH,EAAAT,KAAApoB,GAAAioB,MAAAjW,GAAA6W,EAAAT,KAAAQ,GAAAhB,EAAA,KAGArC,EAAAvT,EAAAhC,GAAAlR,MAAA,EAAA8oB,MAAAc,EAAAnD,EAAA1lB,EAAAmQ,IAAAlR,MAAA,EAAA8oB,GAAA,CAKA,YAJAc,IAAA5pB,MAAA8oB,EAAA,EAAAA,EAAA,MAIAe,GAAA,QAAAD,GAeS,EAITA,OAAA5pB,MAAA,SAAA4pB,EAAAlK,OAAA,MAGAoI,EAAA/mB,EAAAhG,EAAA,KACA4uB,GAAA5oB,EAAAooB,MAAApoB,GAAAooB,MAAApoB,GAAA2S,GAAAxS,IAGA,MAtBA,IAAA2oB,IACA/B,EAAA5U,EAAAnY,EAAA,KAEAmY,EAAAiW,MAAAjW,GAAAiW,MAAAjW,GAAAQ,GAAAxS,IAAA,CACAH,EAAAmS,EACA,MAIA4V,GAAA,EACAe,EAAA,EAmBA,OAFAvE,GAAA,EAEAwC,EAAA/mB,EAAAhG,EAAAktB,EAAAlD,SAAA4E,IAQA9nB,EAAAsoB,cAAAtoB,EAAAuoB,GAAA,WACA,IAAAtD,EACA5V,EAAArR,KAAAqR,EACA0Y,EAAA1B,IAEA,GAAAhX,EAAA,CAMA,GAJA0Y,IADA9C,EAAA5V,EAAAlS,OAAA,GACA4mB,EAAA/lB,KAAA9E,EAAAurB,MAGAQ,EAAA5V,EAAA4V,GACA,KAAmBA,EAAA,MAAaA,GAAA,GAAA8C,IAChCA,EAAA,IAAAA,EAAA,GAGA,OAAAA,GAyBA/nB,EAAAwoB,UAAAxoB,EAAA4U,IAAA,SAAA2R,GACA,OAAA8B,EAAArqB,KAAA,IAAAA,KAAApC,YAAA2qB,KASAvmB,EAAAyoB,mBAAAzoB,EAAA0oB,SAAA,SAAAnC,GACA,IACAH,EADApoB,KACApC,YACA,OAAAqqB,EAAAoC,EAFArqB,KAEA,IAAAooB,EAAAG,GAAA,OAAAH,EAAAnD,UAAAmD,EAAAlD,WAQAljB,EAAA2oB,OAAA3oB,EAAA6R,GAAA,SAAA0U,GACA,WAAAvoB,KAAAsoB,IAAAC,IASAvmB,EAAAikB,MAAA,WACA,OAAAgC,EAAA,IAAAjoB,KAAApC,YAAAoC,WAAA9E,EAAA,MASA8G,EAAA4oB,YAAA5oB,EAAAkI,GAAA,SAAAqe,GACA,OAAAvoB,KAAAsoB,IAAAC,GAAA,GASAvmB,EAAA6oB,qBAAA7oB,EAAA8oB,IAAA,SAAAvC,GACA,IAAA1B,EAAA7mB,KAAAsoB,IAAAC,GACA,UAAA1B,GAAA,IAAAA,GA6BA7kB,EAAA+oB,iBAAA/oB,EAAAgpB,KAAA,WACA,IAAAnE,EAAAkD,EAAAf,EAAA3B,EAAA6B,EACA7nB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YACAqtB,EAAA,IAAA7C,EAAA,GAEA,IAAA/mB,EAAA8oB,WAAA,WAAA/B,EAAA/mB,EAAA4T,EAAA,IAAAoT,KACA,GAAAhnB,EAAA8nB,SAAA,OAAA8B,EAEAjC,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAAhD,KAAA1W,IAAAjO,EAAAnG,EAAAmG,EAAA4nB,MAAA,EACAb,EAAAlD,SAAA,GACAgE,EAAA7nB,EAAAgQ,EAAAlS,QAOA,GAEA4qB,GAAA,EAAAX,EAAA,EADAvC,EAAAb,KAAAlP,KAAAoS,EAAA,KACA5R,YAEAuP,EAAA,GACAkD,EAAA,gCAGA1oB,EAAAgoB,EAAAjB,EAAA,EAAA/mB,EAAAioB,MAAAS,GAAA,IAAA3B,EAAA,OAMA,IAHA,IAAA8C,EACAzsB,EAAAooB,EACAsE,EAAA,IAAA/C,EAAA,GACU3pB,KACVysB,EAAA7pB,EAAAioB,MAAAjoB,GACAA,EAAA4pB,EAAAzB,MAAA0B,EAAA5B,MAAA6B,EAAA3B,MAAA0B,EAAA5B,MAAA6B,MAGA,OAAAlD,EAAA5mB,EAAA+mB,EAAAnD,UAAA+D,EAAAZ,EAAAlD,SAAAmC,GAAA,IAkCArlB,EAAAopB,eAAAppB,EAAAqpB,KAAA,WACA,IAAAxE,EAAAmC,EAAA3B,EAAA6B,EACA7nB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,IAAAyD,EAAA8oB,YAAA9oB,EAAA8nB,SAAA,WAAAf,EAAA/mB,GAQA,GANA2nB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAAhD,KAAA1W,IAAAjO,EAAAnG,EAAAmG,EAAA4nB,MAAA,EACAb,EAAAlD,SAAA,GACAgE,EAAA7nB,EAAAgQ,EAAAlS,QAEA,EACAkC,EAAAgoB,EAAAjB,EAAA,EAAA/mB,KAAA,OACK,CAYLwlB,GADAA,EAAA,IAAAb,KAAAsF,KAAApC,IACA,QAAArC,EAGAxlB,EAAAgoB,EAAAjB,EAAA,EADA/mB,IAAAioB,MAAA,EAAAF,EAAA,EAAAvC,IACAxlB,GAAA,GAOA,IAJA,IAAAkqB,EACAC,EAAA,IAAApD,EAAA,GACAqD,EAAA,IAAArD,EAAA,IACAsD,EAAA,IAAAtD,EAAA,IACYvB,KACZ0E,EAAAlqB,EAAAioB,MAAAjoB,GACAA,IAAAioB,MAAAkC,EAAA/B,KAAA8B,EAAAjC,MAAAmC,EAAAnC,MAAAiC,GAAA9B,KAAAiC,MAOA,OAHAtD,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAY,EAAA5mB,EAAA2nB,EAAA3B,GAAA,IAoBArlB,EAAA2pB,kBAAA3pB,EAAA4pB,KAAA,WACA,IAAA5C,EAAA3B,EACAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAA8oB,WACA9oB,EAAA8nB,SAAA,IAAAf,EAAA/mB,IAEA2nB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAA,EACAZ,EAAAlD,SAAA,EAEAmF,EAAAhpB,EAAAgqB,OAAAhqB,EAAA2pB,OAAA5C,EAAAnD,UAAA+D,EAAAZ,EAAAlD,SAAAmC,IARA,IAAAe,EAAA/mB,EAAA4T,IA+BAjT,EAAA6pB,cAAA7pB,EAAA8pB,KAAA,WACA,IAAAC,EACA1qB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YACAipB,EAAAxlB,EAAA2mB,MAAAM,IAAA,GACAU,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SAEA,WAAA2B,EACA,IAAAA,EAEAxlB,EAAA2qB,QAAAC,EAAA7D,EAAAY,EAAA3B,GAAA,IAAAe,EAAA,GAEA,IAAAA,EAAAC,KAGAhnB,EAAA8nB,SAAA8C,EAAA7D,EAAAY,EAAA,EAAA3B,GAAAiC,MAAA,KAIAlB,EAAAnD,UAAA+D,EAAA,EACAZ,EAAAlD,SAAA,EAEA7jB,IAAA6qB,OACAH,EAAAE,EAAA7D,EAAAY,EAAA,EAAA3B,GAAAiC,MAAA,IAEAlB,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEA0E,EAAAvC,MAAAnoB,KAuBAW,EAAAmqB,wBAAAnqB,EAAAoqB,MAAA,WACA,IAAApD,EAAA3B,EACAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAAgrB,IAAA,OAAAjE,EAAA/mB,EAAAwS,GAAA,KAAAwU,KACAhnB,EAAA8oB,YAEAnB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAAhD,KAAA1W,IAAA0W,KAAAgC,IAAA3mB,EAAAnG,GAAAmG,EAAA4nB,MAAA,EACAb,EAAAlD,SAAA,EACAO,GAAA,EAEApkB,IAAAioB,MAAAjoB,GAAAmoB,MAAA,GAAA8B,OAAA7B,KAAApoB,GAEAokB,GAAA,EACA2C,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAhmB,EAAAirB,MAdA,IAAAlE,EAAA/mB,IAkCAW,EAAAuqB,sBAAAvqB,EAAAwqB,MAAA,WACA,IAAAxD,EAAA3B,EACAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAA8oB,YAAA9oB,EAAA8nB,SAAA,IAAAf,EAAA/mB,IAEA2nB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAA,EAAAhD,KAAA1W,IAAA0W,KAAAgC,IAAA3mB,EAAAnG,GAAAmG,EAAA4nB,MAAA,EACAb,EAAAlD,SAAA,EACAO,GAAA,EAEApkB,IAAAioB,MAAAjoB,GAAAooB,KAAA,GAAA6B,OAAA7B,KAAApoB,GAEAokB,GAAA,EACA2C,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAhmB,EAAAirB,OAuBAtqB,EAAAyqB,yBAAAzqB,EAAA0qB,MAAA,WACA,IAAA1D,EAAA3B,EAAAsF,EAAAC,EACAvrB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAA8oB,WACA9oB,EAAAnG,GAAA,MAAAktB,EAAA/mB,EAAA2mB,MAAAnU,GAAA,GAAAxS,EAAA4T,EAAA,EAAA5T,EAAA8nB,SAAA9nB,EAAAgnB,MAEAW,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACA0H,EAAAvrB,EAAA4nB,KAEAjD,KAAA1W,IAAAsd,EAAA5D,GAAA,GAAA3nB,EAAAnG,EAAA,EAAA+sB,EAAA,IAAAG,EAAA/mB,GAAA2nB,EAAA3B,GAAA,IAEAe,EAAAnD,UAAA0H,EAAAC,EAAAvrB,EAAAnG,EAEAmG,EAAAgpB,EAAAhpB,EAAAooB,KAAA,OAAArB,EAAA,GAAAoB,MAAAnoB,GAAAsrB,EAAA3D,EAAA,GAEAZ,EAAAnD,UAAA+D,EAAA,EACAZ,EAAAlD,SAAA,EAEA7jB,IAAAirB,KAEAlE,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAhmB,EAAAioB,MAAA,MArBA,IAAAlB,EAAAC,MA8CArmB,EAAA6qB,YAAA7qB,EAAAkqB,KAAA,WACA,IAAAH,EAAAlF,EACAmC,EAAA3B,EACAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAA8nB,SAAA,IAAAf,EAAA/mB,IAEAwlB,EAAAxlB,EAAA2mB,MAAAM,IAAA,GACAU,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,UAEA,IAAA2B,EAGA,IAAAA,IACAkF,EAAAE,EAAA7D,EAAAY,EAAA,EAAA3B,GAAAiC,MAAA,KACArU,EAAA5T,EAAA4T,EACA8W,GAIA,IAAA3D,EAAAC,MAKAD,EAAAnD,UAAA+D,EAAA,EACAZ,EAAAlD,SAAA,EAEA7jB,IAAAuV,IAAA,IAAAwR,EAAA,GAAAoB,MAAAnoB,EAAAioB,MAAAjoB,IAAAiqB,OAAA7B,KAAA,IAAAqD,OAEA1E,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAhmB,EAAAioB,MAAA,MAsBAtnB,EAAA+qB,eAAA/qB,EAAA8qB,KAAA,WACA,IAAAruB,EAAAmpB,EAAAf,EAAAkD,EAAAiD,EAAA3Z,EAAAnS,EAAAyrB,EAAAM,EACA5rB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YACAorB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SAEA,GAAA7jB,EAAA8oB,WAOK,IAAA9oB,EAAA8nB,SACL,WAAAf,EAAA/mB,GACK,GAAAA,EAAA2mB,MAAAnU,GAAA,IAAAmV,EAAA,GAAArC,EAGL,OAFAzlB,EAAA+qB,EAAA7D,EAAAY,EAAA,EAAA3B,GAAAiC,MAAA,MACArU,EAAA5T,EAAA4T,EACA/T,MAZA,CACA,IAAAG,EAAA4T,EAAA,WAAAmT,EAAAC,KACA,GAAAW,EAAA,GAAArC,EAGA,OAFAzlB,EAAA+qB,EAAA7D,EAAAY,EAAA,EAAA3B,GAAAiC,MAAA,KACArU,EAAA5T,EAAA4T,EACA/T,EAqBA,IAXAknB,EAAAnD,UAAA0H,EAAA3D,EAAA,GACAZ,EAAAlD,SAAA,EAUAzmB,EAFAooB,EAAAb,KAAA3W,IAAA,GAAAsd,EAAAlG,EAAA,KAEehoB,IAAGA,EAAA4C,IAAAuV,IAAAvV,EAAAioB,MAAAjoB,GAAAooB,KAAA,GAAA6B,OAAA7B,KAAA,IAWlB,IATAhE,GAAA,EAEAmC,EAAA5B,KAAAlP,KAAA6V,EAAAlG,GACAsD,EAAA,EACAkD,EAAA5rB,EAAAioB,MAAAjoB,GACAH,EAAA,IAAAknB,EAAA/mB,GACA2rB,EAAA3rB,GAGU,IAAA5C,GAOV,GANAuuB,IAAA1D,MAAA2D,GACA5Z,EAAAnS,EAAAsoB,MAAAwD,EAAApW,IAAAmT,GAAA,IAEAiD,IAAA1D,MAAA2D,QAGA,KAFA/rB,EAAAmS,EAAAoW,KAAAuD,EAAApW,IAAAmT,GAAA,KAEA1Y,EAAAuW,GAAA,IAAAnpB,EAAAmpB,EAAwC1mB,EAAAmQ,EAAA5S,KAAA4U,EAAAhC,EAAA5S,UAOxC,OAJAooB,IAAA3lB,IAAAooB,MAAA,GAAAzC,EAAA,IAEApB,GAAA,EAEAwC,EAAA/mB,EAAAknB,EAAAnD,UAAA+D,EAAAZ,EAAAlD,SAAAmC,GAAA,IAQArlB,EAAAmoB,SAAA,WACA,QAAAnqB,KAAAqR,GAQArP,EAAAkrB,UAAAlrB,EAAAmrB,MAAA,WACA,QAAAntB,KAAAqR,GAAA0U,EAAA/lB,KAAA9E,EAAAurB,GAAAzmB,KAAAqR,EAAAlS,OAAA,GAQA6C,EAAA8d,MAAA,WACA,OAAA9f,KAAAiV,GAQAjT,EAAAorB,WAAAprB,EAAAgqB,MAAA,WACA,OAAAhsB,KAAAiV,EAAA,GAQAjT,EAAAqrB,WAAArrB,EAAAsrB,MAAA,WACA,OAAAttB,KAAAiV,EAAA,GAQAjT,EAAAmnB,OAAA,WACA,QAAAnpB,KAAAqR,GAAA,IAAArR,KAAAqR,EAAA,IAQArP,EAAAurB,SAAAvrB,EAAAwrB,GAAA,SAAAjF,GACA,OAAAvoB,KAAAsoB,IAAAC,GAAA,GAQAvmB,EAAAyrB,kBAAAzrB,EAAAqqB,IAAA,SAAA9D,GACA,OAAAvoB,KAAAsoB,IAAAC,GAAA,GAkCAvmB,EAAA0rB,UAAA1rB,EAAA6F,IAAA,SAAA8lB,GACA,IAAAC,EAAAvc,EAAAwc,EAAAhH,EAAAiH,EAAAC,EAAA9E,EAAA/nB,EAEAknB,EADApoB,KACApC,YACAorB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SAIA,SAAAyI,EACAA,EAAA,IAAAvF,EAAA,IACAwF,GAAA,MACK,CAKL,GAHAvc,GADAsc,EAAA,IAAAvF,EAAAuF,IACAtc,EAGAsc,EAAA1Y,EAAA,IAAA5D,MAAA,IAAAsc,EAAA9Z,GAAA,cAAAuU,EAAAC,KAEAuF,EAAAD,EAAA9Z,GAAA,IAMA,GAHAxC,EApBArR,KAoBAqR,EApBArR,KAuBAiV,EAAA,IAAA5D,MAAA,IAvBArR,KAuBA6T,GAAA,GACA,WAAAuU,EAAA/W,MAAA,WAxBArR,KAwBAiV,EAAAoT,IAAAhX,EAAA,OAKA,GAAAuc,EACA,GAAAvc,EAAAlS,OAAA,EACA2uB,GAAA,MACO,CACP,IAAAjH,EAAAxV,EAAA,GAAsBwV,EAAA,OAAcA,GAAA,GACpCiH,EAAA,IAAAjH,EA0BA,GAtBApB,GAAA,EAEAsI,EAAAC,EAxCAhuB,KAuCAipB,EAAAD,EAnCA,GAqCA6E,EAAAD,EAAAK,EAAA7F,EAAAa,EAAA,IAAA+E,EAAAL,EAAA1E,GAmBA7B,GAhBAlmB,EAAAmpB,EAAA0D,EAAAF,EAAA5E,EAAA,IAgBA5X,EAAAwV,EAAAmC,EAAA3B,GAEA,GAMA,GAJA0G,EAAAC,EAhEAhuB,KA+DAipB,GAAA,IAEA4E,EAAAD,EAAAK,EAAA7F,EAAAa,EAAA,IAAA+E,EAAAL,EAAA1E,GACA/nB,EAAAmpB,EAAA0D,EAAAF,EAAA5E,EAAA,IAEA6E,EAAA,EAGAlH,EAAA1lB,EAAAmQ,GAAAlR,MAAA0mB,EAAA,EAAAA,EAAA,cACA3lB,EAAA+mB,EAAA/mB,EAAA8nB,EAAA,MAGA,aAEO5B,EAAAlmB,EAAAmQ,EAAAwV,GAAA,GAAAQ,IAKP,OAFA5B,GAAA,EAEAwC,EAAA/mB,EAAA8nB,EAAA3B,IAiDArlB,EAAAwnB,MAAAxnB,EAAAksB,IAAA,SAAA3F,GACA,IAAAlX,EAAAnW,EAAAuD,EAAAmpB,EAAAf,EAAAqC,EAAAF,EAAA3B,EAAAqB,EAAAyF,EAAAC,EAAAzF,EACAtnB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAKA,GAHA2qB,EAAA,IAAAH,EAAAG,IAGAlnB,EAAAgQ,IAAAkX,EAAAlX,EAaA,OAVAhQ,EAAA4T,GAAAsT,EAAAtT,EAGA5T,EAAAgQ,EAAAkX,EAAAtT,GAAAsT,EAAAtT,EAKAsT,EAAA,IAAAH,EAAAG,EAAAlX,GAAAhQ,EAAA4T,IAAAsT,EAAAtT,EAAA5T,EAAAgnB,KARAE,EAAA,IAAAH,EAAAC,KAUAE,EAIA,GAAAlnB,EAAA4T,GAAAsT,EAAAtT,EAEA,OADAsT,EAAAtT,GAAAsT,EAAAtT,EACA5T,EAAAooB,KAAAlB,GASA,GANAG,EAAArnB,EAAAgQ,EACAsX,EAAAJ,EAAAlX,EACA2X,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,UAGAwD,EAAA,KAAAC,EAAA,IAGA,GAAAA,EAAA,GAAAJ,EAAAtT,GAAAsT,EAAAtT,MAGA,KAAAyT,EAAA,GAIA,WAAAN,EAAA,IAAAf,GAAA,KAJAkB,EAAA,IAAAH,EAAA/mB,GAMA,OAAAokB,EAAAwC,EAAAM,EAAAS,EAAA3B,GAAAkB,EAaA,GAPArtB,EAAA6qB,EAAAwC,EAAArtB,EAAAurB,GACA0H,EAAApI,EAAA1kB,EAAAnG,EAAAurB,GAEAiC,IAAAvoB,QACA0mB,EAAAsH,EAAAjzB,EAGA,CAyBA,KAxBAkzB,EAAAvH,EAAA,IAGAxV,EAAAqX,EACA7B,KACAqC,EAAAP,EAAAxpB,SAEAkS,EAAAsX,EACAztB,EAAAizB,EACAjF,EAAAR,EAAAvpB,QAQA0nB,GAFApoB,EAAAunB,KAAA1W,IAAA0W,KAAAlP,KAAAkS,EAAAvC,GAAAyC,GAAA,KAGArC,EAAApoB,EACA4S,EAAAlS,OAAA,GAIAkS,EAAA8N,UACA1gB,EAAAooB,EAAiBpoB,KAAK4S,EAAA1Q,KAAA,GACtB0Q,EAAA8N,cAGK,CASL,KAHAiP,GAFA3vB,EAAAiqB,EAAAvpB,SACA+pB,EAAAP,EAAAxpB,WAEA+pB,EAAAzqB,GAEAA,EAAA,EAAiBA,EAAAyqB,EAASzqB,IAC1B,GAAAiqB,EAAAjqB,IAAAkqB,EAAAlqB,GAAA,CACA2vB,EAAA1F,EAAAjqB,GAAAkqB,EAAAlqB,GACA,MAIAooB,EAAA,EAcA,IAXAuH,IACA/c,EAAAqX,EACAA,EAAAC,EACAA,EAAAtX,EACAkX,EAAAtT,GAAAsT,EAAAtT,GAGAiU,EAAAR,EAAAvpB,OAIAV,EAAAkqB,EAAAxpB,OAAA+pB,EAA6BzqB,EAAA,IAAOA,EAAAiqB,EAAAQ,KAAA,EAGpC,IAAAzqB,EAAAkqB,EAAAxpB,OAAuBV,EAAAooB,GAAO,CAE9B,GAAA6B,IAAAjqB,GAAAkqB,EAAAlqB,GAAA,CACA,IAAAmpB,EAAAnpB,EAAmBmpB,GAAA,IAAAc,IAAAd,IAAoBc,EAAAd,GAAApB,EAAA,IACvCkC,EAAAd,GACAc,EAAAjqB,IAAA+nB,EAGAkC,EAAAjqB,IAAAkqB,EAAAlqB,GAIA,KAAU,IAAAiqB,IAAAQ,IAAiBR,EAAAjU,MAG3B,KAAU,IAAAiU,EAAA,GAAaA,EAAA2F,UAAAnzB,EAGvB,OAAAwtB,EAAA,IAEAH,EAAAlX,EAAAqX,EACAH,EAAArtB,EAAAozB,EAAA5F,EAAAxtB,GAEAuqB,EAAAwC,EAAAM,EAAAS,EAAA3B,GAAAkB,GALA,IAAAH,EAAA,IAAAf,GAAA,MAiCArlB,EAAAmjB,OAAAnjB,EAAAusB,IAAA,SAAAhG,GACA,IAAAte,EACA5I,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAKA,OAHA2qB,EAAA,IAAAH,EAAAG,IAGAlnB,EAAAgQ,IAAAkX,EAAAtT,GAAAsT,EAAAlX,IAAAkX,EAAAlX,EAAA,OAAA+W,EAAAC,MAGAE,EAAAlX,GAAAhQ,EAAAgQ,IAAAhQ,EAAAgQ,EAAA,GACA4W,EAAA,IAAAG,EAAA/mB,GAAA+mB,EAAAnD,UAAAmD,EAAAlD,WAIAO,GAAA,EAEA,GAAA2C,EAAAjD,QAIAlb,EAAAogB,EAAAhpB,EAAAknB,EAAAP,MAAA,QACA/S,GAAAsT,EAAAtT,EAEAhL,EAAAogB,EAAAhpB,EAAAknB,EAAA,EAAAH,EAAAjD,OAAA,GAGAlb,IAAAqf,MAAAf,GAEA9C,GAAA,EAEApkB,EAAAmoB,MAAAvf,KAUAjI,EAAAwsB,mBAAAxsB,EAAAysB,IAAA,WACA,OAAAD,EAAAxuB,OASAgC,EAAAgsB,iBAAAhsB,EAAAsqB,GAAA,WACA,OAAA0B,EAAAhuB,OASAgC,EAAA0sB,QAAA1sB,EAAA2nB,IAAA,WACA,IAAAtoB,EAAA,IAAArB,KAAApC,YAAAoC,MAEA,OADAqB,EAAA4T,GAAA5T,EAAA4T,EACAgT,EAAA5mB,IAyBAW,EAAAynB,KAAAznB,EAAA2sB,IAAA,SAAApG,GACA,IAAAqG,EAAAvd,EAAAnW,EAAAuD,EAAAooB,EAAAqC,EAAAF,EAAA3B,EAAAqB,EAAAC,EACAtnB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAKA,GAHA2qB,EAAA,IAAAH,EAAAG,IAGAlnB,EAAAgQ,IAAAkX,EAAAlX,EAWA,OARAhQ,EAAA4T,GAAAsT,EAAAtT,EAMA5T,EAAAgQ,IAAAkX,EAAA,IAAAH,EAAAG,EAAAlX,GAAAhQ,EAAA4T,IAAAsT,EAAAtT,EAAA5T,EAAAgnB,MANAE,EAAA,IAAAH,EAAAC,KAQAE,EAIA,GAAAlnB,EAAA4T,GAAAsT,EAAAtT,EAEA,OADAsT,EAAAtT,GAAAsT,EAAAtT,EACA5T,EAAAmoB,MAAAjB,GASA,GANAG,EAAArnB,EAAAgQ,EACAsX,EAAAJ,EAAAlX,EACA2X,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,UAGAwD,EAAA,KAAAC,EAAA,GAMA,OAFAA,EAAA,KAAAJ,EAAA,IAAAH,EAAA/mB,IAEAokB,EAAAwC,EAAAM,EAAAS,EAAA3B,GAAAkB,EAaA,GAPA1B,EAAAd,EAAA1kB,EAAAnG,EAAAurB,GACAvrB,EAAA6qB,EAAAwC,EAAArtB,EAAAurB,GAEAiC,IAAAvoB,QACA1B,EAAAooB,EAAA3rB,EAGA,CAuBA,IArBAuD,EAAA,GACA4S,EAAAqX,EACAjqB,KACAyqB,EAAAP,EAAAxpB,SAEAkS,EAAAsX,EACAztB,EAAA2rB,EACAqC,EAAAR,EAAAvpB,QAOAV,GAFAyqB,GADArC,EAAAb,KAAAlP,KAAAkS,EAAAvC,IACAyC,EAAArC,EAAA,EAAAqC,EAAA,KAGAzqB,EAAAyqB,EACA7X,EAAAlS,OAAA,GAIAkS,EAAA8N,UACY1gB,KAAK4S,EAAA1Q,KAAA,GACjB0Q,EAAA8N,UAeA,KAZA+J,EAAAR,EAAAvpB,SACAV,EAAAkqB,EAAAxpB,QAGA,IACAV,EAAAyqB,EACA7X,EAAAsX,EACAA,EAAAD,EACAA,EAAArX,GAIAud,EAAA,EAAmBnwB,GACnBmwB,GAAAlG,IAAAjqB,GAAAiqB,EAAAjqB,GAAAkqB,EAAAlqB,GAAAmwB,GAAApI,EAAA,EACAkC,EAAAjqB,IAAA+nB,EAUA,IAPAoI,IACAlG,EAAAlU,QAAAoa,KACA1zB,GAKAguB,EAAAR,EAAAvpB,OAAyB,GAAAupB,IAAAQ,IAAgBR,EAAAjU,MAKzC,OAHA8T,EAAAlX,EAAAqX,EACAH,EAAArtB,EAAAozB,EAAA5F,EAAAxtB,GAEAuqB,EAAAwC,EAAAM,EAAAS,EAAA3B,GAAAkB,GAUAvmB,EAAAijB,UAAAjjB,EAAAinB,GAAA,SAAA1Z,GACA,IAAAsX,EACAxlB,EAAArB,KAEA,YAAAuP,YAAA,IAAAA,GAAA,IAAAA,EAAA,MAAAwR,MAAA4E,EAAApW,GASA,OAPAlO,EAAAgQ,GACAwV,EAAAgI,EAAAxtB,EAAAgQ,GACA9B,GAAAlO,EAAAnG,EAAA,EAAA2rB,MAAAxlB,EAAAnG,EAAA,IAEA2rB,EAAAwB,IAGAxB,GASA7kB,EAAAuY,MAAA,WACA,IAAAlZ,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAqqB,EAAA,IAAAG,EAAA/mB,KAAAnG,EAAA,EAAAktB,EAAAlD,WAmBAljB,EAAA8sB,KAAA9sB,EAAA+sB,IAAA,WACA,IAAA/F,EAAA3B,EACAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAA8oB,WACA9oB,EAAA8nB,SAAA,IAAAf,EAAA/mB,IAEA2nB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAAhD,KAAA1W,IAAAjO,EAAAnG,EAAAmG,EAAA4nB,MAAAxC,EACA2B,EAAAlD,SAAA,EAEA7jB,EAs7DA,SAAA+mB,EAAA/mB,GACA,IAAAwlB,EACAqC,EAAA7nB,EAAAgQ,EAAAlS,OAEA,GAAA+pB,EAAA,EACA,OAAA7nB,EAAA8nB,SAAA9nB,EAAAgoB,EAAAjB,EAAA,EAAA/mB,KASAwlB,GADAA,EAAA,IAAAb,KAAAsF,KAAApC,IACA,QAAArC,EAEAxlB,IAAAioB,MAAA,EAAAF,EAAA,EAAAvC,IACAxlB,EAAAgoB,EAAAjB,EAAA,EAAA/mB,KAOA,IAJA,IAAA2tB,EACAxD,EAAA,IAAApD,EAAA,GACAqD,EAAA,IAAArD,EAAA,IACAsD,EAAA,IAAAtD,EAAA,IACUvB,KACVmI,EAAA3tB,EAAAioB,MAAAjoB,GACAA,IAAAioB,MAAAkC,EAAA/B,KAAAuF,EAAA1F,MAAAmC,EAAAnC,MAAA0F,GAAAxF,MAAAkC,MAGA,OAAArqB,EAn9DAytB,CAAA1G,EAAAsB,EAAAtB,EAAA/mB,IAEA+mB,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAY,EAAAvD,EAAA,EAAArjB,EAAAsoB,MAAAtoB,EAAA2nB,EAAA3B,GAAA,IAbA,IAAAe,EAAAC,MA6BArmB,EAAAitB,WAAAjtB,EAAAspB,KAAA,WACA,IAAAxB,EAAAC,EAAAd,EAAA/nB,EAAA8oB,EAAA3W,EACAhS,EAAArB,KACAqR,EAAAhQ,EAAAgQ,EACAnW,EAAAmG,EAAAnG,EACA+Z,EAAA5T,EAAA4T,EACAmT,EAAA/mB,EAAAzD,YAGA,OAAAqX,IAAA5D,MAAA,GACA,WAAA+W,GAAAnT,KAAA,KAAA5D,KAAA,IAAAgX,IAAAhX,EAAAhQ,EAAA,KAgCA,IA7BAokB,GAAA,EAOA,IAJAxQ,EAAA+Q,KAAAsF,MAAAjqB,KAIA4T,GAAA,OACA8U,EAAAnD,EAAAvV,IAEAlS,OAAAjE,GAAA,OAAA6uB,GAAA,KACA9U,EAAA+Q,KAAAsF,KAAAvB,GACA7uB,EAAA6qB,GAAA7qB,EAAA,OAAAA,EAAA,GAAAA,EAAA,GASAgG,EAAA,IAAAknB,EANA2B,EADA9U,GAAA,IACA,KAAA/Z,GAEA6uB,EAAA9U,EAAAmV,iBACAjqB,MAAA,EAAA4pB,EAAAhsB,QAAA,QAAA7C,IAKAgG,EAAA,IAAAknB,EAAAnT,EAAAqC,YAGA2R,GAAA/tB,EAAAktB,EAAAnD,WAAA,IAQA,GAHA/jB,GADAmS,EAAAnS,GACAuoB,KAAAY,EAAAhpB,EAAAgS,EAAA4V,EAAA,MAAAK,MAAA,IAGA1C,EAAAvT,EAAAhC,GAAAlR,MAAA,EAAA8oB,MAAAc,EAAAnD,EAAA1lB,EAAAmQ,IAAAlR,MAAA,EAAA8oB,GAAA,CAKA,YAJAc,IAAA5pB,MAAA8oB,EAAA,EAAAA,EAAA,MAIAe,GAAA,QAAAD,GAeS,EAITA,OAAA5pB,MAAA,SAAA4pB,EAAAlK,OAAA,MAGAoI,EAAA/mB,EAAAhG,EAAA,KACA4uB,GAAA5oB,EAAAooB,MAAApoB,GAAA2S,GAAAxS,IAGA,MAtBA,IAAA2oB,IACA/B,EAAA5U,EAAAnY,EAAA,KAEAmY,EAAAiW,MAAAjW,GAAAQ,GAAAxS,IAAA,CACAH,EAAAmS,EACA,MAIA4V,GAAA,EACAe,EAAA,EAmBA,OAFAvE,GAAA,EAEAwC,EAAA/mB,EAAAhG,EAAAktB,EAAAlD,SAAA4E,IAiBA9nB,EAAAktB,QAAAltB,EAAAmtB,IAAA,WACA,IAAAnG,EAAA3B,EACAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAEA,OAAAyD,EAAA8oB,WACA9oB,EAAA8nB,SAAA,IAAAf,EAAA/mB,IAEA2nB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SACAkD,EAAAnD,UAAA+D,EAAA,GACAZ,EAAAlD,SAAA,GAEA7jB,IAAA0tB,OACA9Z,EAAA,EACA5T,EAAAgpB,EAAAhpB,EAAA,IAAA+mB,EAAA,GAAAoB,MAAAnoB,EAAAioB,MAAAjoB,IAAAiqB,OAAAtC,EAAA,MAEAZ,EAAAnD,UAAA+D,EACAZ,EAAAlD,SAAAmC,EAEAY,EAAA,GAAAvD,GAAA,GAAAA,EAAArjB,EAAAsoB,MAAAtoB,EAAA2nB,EAAA3B,GAAA,IAfA,IAAAe,EAAAC,MAwCArmB,EAAAsnB,MAAAtnB,EAAA6U,IAAA,SAAA0R,GACA,IAAAqG,EAAA1zB,EAAAuD,EAAAooB,EAAA3lB,EAAAkuB,EAAA/b,EAAAmV,EAAAC,EACApnB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YACA8qB,EAAArnB,EAAAgQ,EACAsX,GAAAJ,EAAA,IAAAH,EAAAG,IAAAlX,EAKA,GAHAkX,EAAAtT,GAAA5T,EAAA4T,IAGAyT,KAAA,IAAAC,KAAA,IAEA,WAAAP,GAAAG,EAAAtT,GAAAyT,MAAA,KAAAC,SAAA,KAAAD,EAIAL,IAIAK,GAAAC,EAAA,EAAAJ,EAAAtT,EAAAsT,EAAAtT,EAAA,GAoBA,IAjBA/Z,EAAA6qB,EAAA1kB,EAAAnG,EAAAurB,GAAAV,EAAAwC,EAAArtB,EAAAurB,IACA+B,EAAAE,EAAAvpB,SACAspB,EAAAE,EAAAxpB,UAIA+B,EAAAwnB,EACAA,EAAAC,EACAA,EAAAznB,EACAkuB,EAAA5G,EACAA,EAAAC,EACAA,EAAA2G,GAIAluB,KAEAzC,EADA2wB,EAAA5G,EAAAC,EACgBhqB,KAAKyC,EAAAP,KAAA,GAGrB,IAAAlC,EAAAgqB,IAAiBhqB,GAAA,GAAU,CAE3B,IADAmwB,EAAA,EACA/H,EAAA2B,EAAA/pB,EAAuBooB,EAAApoB,GACvB4U,EAAAnS,EAAA2lB,GAAA8B,EAAAlqB,GAAAiqB,EAAA7B,EAAApoB,EAAA,GAAAmwB,EACA1tB,EAAA2lB,KAAAxT,EAAAmT,EAAA,EACAoI,EAAAvb,EAAAmT,EAAA,EAGAtlB,EAAA2lB,IAAA3lB,EAAA2lB,GAAA+H,GAAApI,EAAA,EAIA,MAAUtlB,IAAAkuB,IAAUluB,EAAAuT,MAQpB,OANAma,IAAA1zB,EACAgG,EAAAmtB,QAEA9F,EAAAlX,EAAAnQ,EACAqnB,EAAArtB,EAAAozB,EAAAptB,EAAAhG,GAEAuqB,EAAAwC,EAAAM,EAAAH,EAAAnD,UAAAmD,EAAAlD,UAAAqD,GAcAvmB,EAAAqtB,SAAA,SAAApG,EAAA5B,GACA,OAAAiI,GAAAtvB,KAAA,EAAAipB,EAAA5B,IAcArlB,EAAAutB,gBAAAvtB,EAAAwtB,KAAA,SAAAjF,EAAAlD,GACA,IAAAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAGA,OADAyD,EAAA,IAAA+mB,EAAA/mB,QACA,IAAAkpB,EAAAlpB,GAEA8lB,EAAAoD,EAAA,EAAA3F,QAEA,IAAAyC,IAAAe,EAAAlD,SACAiC,EAAAE,EAAA,KAEAY,EAAA5mB,EAAAkpB,EAAAlpB,EAAAnG,EAAA,EAAAmsB,KAYArlB,EAAAooB,cAAA,SAAAG,EAAAlD,GACA,IAAAL,EACA3lB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAcA,YAZA,IAAA2sB,EACAvD,EAAAyI,EAAApuB,GAAA,IAEA8lB,EAAAoD,EAAA,EAAA3F,QAEA,IAAAyC,IAAAe,EAAAlD,SACAiC,EAAAE,EAAA,KAGAL,EAAAyI,EADApuB,EAAA4mB,EAAA,IAAAG,EAAA/mB,GAAAkpB,EAAA,EAAAlD,IACA,EAAAkD,EAAA,IAGAlpB,EAAA2qB,UAAA3qB,EAAA8nB,SAAA,IAAAnC,KAoBAhlB,EAAA+U,QAAA,SAAAwT,EAAAlD,GACA,IAAAL,EAAAuB,EACAlnB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAgBA,YAdA,IAAA2sB,EACAvD,EAAAyI,EAAApuB,IAEA8lB,EAAAoD,EAAA,EAAA3F,QAEA,IAAAyC,IAAAe,EAAAlD,SACAiC,EAAAE,EAAA,KAGAL,EAAAyI,EADAlH,EAAAN,EAAA,IAAAG,EAAA/mB,GAAAkpB,EAAAlpB,EAAAnG,EAAA,EAAAmsB,IACA,EAAAkD,EAAAhC,EAAArtB,EAAA,IAKAmG,EAAA2qB,UAAA3qB,EAAA8nB,SAAA,IAAAnC,KAeAhlB,EAAA0tB,WAAA,SAAAC,GACA,IAAAte,EAAAue,EAAAC,EAAAC,EAAA50B,EAAA2rB,EAAAkD,EAAAgG,EAAAC,EAAAhH,EAAA/e,EAAA/I,EACAG,EAAArB,KACA0oB,EAAArnB,EAAAgQ,EACA+W,EAAA/mB,EAAAzD,YAEA,IAAA8qB,EAAA,WAAAN,EAAA/mB,GAUA,GARA2uB,EAAAJ,EAAA,IAAAxH,EAAA,GAKAvB,GADA3rB,GADAmW,EAAA,IAAA+W,EAFAyH,EAAAE,EAAA,IAAA3H,EAAA,KAGAltB,EAAA2zB,EAAAnG,GAAArnB,EAAAnG,EAAA,GACAurB,EACApV,IAAA,GAAA6U,EAAA,GAAAW,EAAA,EAAAJ,EAAAI,KAEA,MAAA8I,EAGAA,EAAAz0B,EAAA,EAAAmW,EAAA2e,MACK,CAEL,KADAjG,EAAA,IAAA3B,EAAAuH,IACAxC,SAAApD,EAAAyD,GAAAwC,GAAA,MAAAjP,MAAA4E,EAAAoE,GACA4F,EAAA5F,EAAA7f,GAAAmH,GAAAnW,EAAA,EAAAmW,EAAA2e,EAAAjG,EAQA,IALAtE,GAAA,EACAsE,EAAA,IAAA3B,EAAAxB,EAAA8B,IACAM,EAAAZ,EAAAnD,UACAmD,EAAAnD,UAAA/pB,EAAAwtB,EAAAvpB,OAAAsnB,EAAA,EAGAxc,EAAAogB,EAAAN,EAAA1Y,EAAA,OAEA,IADAye,EAAAF,EAAAnG,KAAAxf,EAAAqf,MAAAuG,KACAvH,IAAAqH,IACAC,EAAAC,EACAA,EAAAC,EACAA,EAAAE,EACAA,EAAAD,EAAAtG,KAAAxf,EAAAqf,MAAAwG,IACAC,EAAAD,EACAA,EAAAze,EACAA,EAAA0Y,EAAAP,MAAAvf,EAAAqf,MAAAwG,IACA/F,EAAA+F,EAeA,OAZAA,EAAAzF,EAAAsF,EAAAnG,MAAAoG,GAAAC,EAAA,OACAE,IAAAtG,KAAAqG,EAAAxG,MAAA0G,IACAJ,IAAAnG,KAAAqG,EAAAxG,MAAAuG,IACAE,EAAA9a,EAAA+a,EAAA/a,EAAA5T,EAAA4T,EAGA/T,EAAAmpB,EAAA2F,EAAAH,EAAA30B,EAAA,GAAAsuB,MAAAnoB,GAAA2mB,MAAAM,IAAA+B,EAAA0F,EAAAH,EAAA10B,EAAA,GAAAsuB,MAAAnoB,GAAA2mB,OAAA,GACAgI,EAAAH,IAAAE,EAAAH,GAEAxH,EAAAnD,UAAA+D,EACAvD,GAAA,EAEAvkB,GAcAc,EAAAiuB,cAAAjuB,EAAAkuB,MAAA,SAAAjH,EAAA5B,GACA,OAAAiI,GAAAtvB,KAAA,GAAAipB,EAAA5B,IAoBArlB,EAAAmuB,UAAA,SAAA5H,EAAAlB,GACA,IAAAhmB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAIA,GAFAyD,EAAA,IAAA+mB,EAAA/mB,GAEA,MAAAknB,EAAA,CAGA,IAAAlnB,EAAAgQ,EAAA,OAAAhQ,EAEAknB,EAAA,IAAAH,EAAA,GACAf,EAAAe,EAAAlD,aACK,CASL,GARAqD,EAAA,IAAAH,EAAAG,QACA,IAAAlB,EACAA,EAAAe,EAAAlD,SAEAiC,EAAAE,EAAA,MAIAhmB,EAAAgQ,EAAA,OAAAkX,EAAAtT,EAAA5T,EAAAknB,EAGA,IAAAA,EAAAlX,EAEA,OADAkX,EAAAtT,IAAAsT,EAAAtT,EAAA5T,EAAA4T,GACAsT,EAiBA,OAZAA,EAAAlX,EAAA,IACAoU,GAAA,EACApkB,EAAAgpB,EAAAhpB,EAAAknB,EAAA,EAAAlB,EAAA,GAAAiC,MAAAf,GACA9C,GAAA,EACAwC,EAAA5mB,KAIAknB,EAAAtT,EAAA5T,EAAA4T,EACA5T,EAAAknB,GAGAlnB,GASAW,EAAAouB,SAAA,WACA,OAAApwB,MAcAgC,EAAAquB,QAAA,SAAApH,EAAA5B,GACA,OAAAiI,GAAAtvB,KAAA,EAAAipB,EAAA5B,IA+CArlB,EAAAsuB,QAAAtuB,EAAAmkB,IAAA,SAAAoC,GACA,IAAArtB,EAAA2rB,EAAAmC,EAAA9nB,EAAAmmB,EAAApS,EACA5T,EAAArB,KACAooB,EAAA/mB,EAAAzD,YACA2yB,IAAAhI,EAAA,IAAAH,EAAAG,IAGA,KAAAlnB,EAAAgQ,GAAAkX,EAAAlX,GAAAhQ,EAAAgQ,EAAA,IAAAkX,EAAAlX,EAAA,eAAA+W,EAAAlC,GAAA7kB,EAAAkvB,IAIA,IAFAlvB,EAAA,IAAA+mB,EAAA/mB,IAEAwS,GAAA,UAAAxS,EAKA,GAHA2nB,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,SAEAqD,EAAA1U,GAAA,UAAAoU,EAAA5mB,EAAA2nB,EAAA3B,GAMA,IAHAnsB,EAAA6qB,EAAAwC,EAAArtB,EAAAurB,KAGA8B,EAAAlX,EAAAlS,OAAA,IAAA0nB,EAAA0J,EAAA,GAAAA,MA1nEA,iBA4nEA,OADArvB,EAAAsvB,EAAApI,EAAA/mB,EAAAwlB,EAAAmC,GACAT,EAAAtT,EAAA,MAAAmT,EAAA,GAAAxR,IAAA1V,GAAA+mB,EAAA/mB,EAAA8nB,EAAA3B,GAMA,IAHApS,EAAA5T,EAAA4T,GAGA,GAGA,GAAA/Z,EAAAqtB,EAAAlX,EAAAlS,OAAA,aAAAipB,EAAAC,KAMA,GAHA,MAAAE,EAAAlX,EAAAnW,MAAA+Z,EAAA,GAGA,GAAA5T,EAAAnG,GAAA,GAAAmG,EAAAgQ,EAAA,OAAAhQ,EAAAgQ,EAAAlS,OAEA,OADAkC,EAAA4T,IACA5T,EAgBA,OAPAnG,EAAA,IADA2rB,EAAAX,GAAA7kB,EAAAkvB,KACApG,SAAAtD,GAEA,IAAAuB,EAAAvB,EAAA,IAAA3rB,EADA6qB,EAAAwK,GAAAvK,KAAAne,IAAA,KAAA+e,EAAAvlB,EAAAgQ,IAAA2U,KAAAlB,KAAAzjB,EAAAnG,EAAA,KAMAktB,EAAA7C,KAAA,GAAArqB,EAAAktB,EAAA9C,KAAA,MAAA8C,EAAAltB,EAAA,EAAA+Z,EAAA,MAEAwQ,GAAA,EACA2C,EAAAlD,SAAA7jB,EAAA4T,EAAA,EAMA4R,EAAAb,KAAA3W,IAAA,IAAAnU,EAAA,IAAAiE,SAGA+B,EAAAstB,EAAAjG,EAAAe,MAAA0E,EAAA3sB,EAAA2nB,EAAAnC,IAAAmC,IAGA3X,GAOA+V,GAJAlmB,EAAA+mB,EAAA/mB,EAAA8nB,EAAA,MAIA3X,EAAA2X,EAAA3B,KACAnsB,EAAA8tB,EAAA,IAMApC,GAHA1lB,EAAA+mB,EAAAuG,EAAAjG,EAAAe,MAAA0E,EAAA3sB,EAAAnG,EAAA2rB,IAAA3rB,KAAA,MAGAmW,GAAAlR,MAAA6oB,EAAA,EAAAA,EAAA,cACA9nB,EAAA+mB,EAAA/mB,EAAA8nB,EAAA,OAKA9nB,EAAA+T,IACAwQ,GAAA,EACA2C,EAAAlD,SAAAmC,EAEAY,EAAA/mB,EAAA8nB,EAAA3B,KAeArlB,EAAAyuB,YAAA,SAAAxH,EAAA5B,GACA,IAAAL,EACA3lB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YAcA,YAZA,IAAAqrB,EACAjC,EAAAyI,EAAApuB,IAAAnG,GAAAktB,EAAAhD,UAAA/jB,EAAAnG,GAAAktB,EAAA/C,WAEA8B,EAAA8B,EAAA,EAAArE,QAEA,IAAAyC,IAAAe,EAAAlD,SACAiC,EAAAE,EAAA,KAGAL,EAAAyI,EADApuB,EAAA4mB,EAAA,IAAAG,EAAA/mB,GAAA4nB,EAAA5B,GACA4B,GAAA5nB,EAAAnG,GAAAmG,EAAAnG,GAAAktB,EAAAhD,SAAA6D,IAGA5nB,EAAA2qB,UAAA3qB,EAAA8nB,SAAA,IAAAnC,KAkBAhlB,EAAA0uB,oBAAA1uB,EAAA2uB,KAAA,SAAA1H,EAAA5B,GACA,IACAe,EADApoB,KACApC,YAYA,YAVA,IAAAqrB,GACAA,EAAAb,EAAAnD,UACAoC,EAAAe,EAAAlD,WAEAiC,EAAA8B,EAAA,EAAArE,QAEA,IAAAyC,IAAAe,EAAAlD,SACAiC,EAAAE,EAAA,MAGAY,EAAA,IAAAG,EAbApoB,MAaAipB,EAAA5B,IAWArlB,EAAAsV,SAAA,WACA,IAAAjW,EAAArB,KACAooB,EAAA/mB,EAAAzD,YACAopB,EAAAyI,EAAApuB,IAAAnG,GAAAktB,EAAAhD,UAAA/jB,EAAAnG,GAAAktB,EAAA/C,UAEA,OAAAhkB,EAAA2qB,UAAA3qB,EAAA8nB,SAAA,IAAAnC,KAQAhlB,EAAA4uB,UAAA5uB,EAAA6uB,MAAA,WACA,OAAA5I,EAAA,IAAAjoB,KAAApC,YAAAoC,WAAA9E,EAAA,MASA8G,EAAA8uB,QAAA9uB,EAAA+uB,OAAA,WACA,IAAA1vB,EAAArB,KACAooB,EAAA/mB,EAAAzD,YACAopB,EAAAyI,EAAApuB,IAAAnG,GAAAktB,EAAAhD,UAAA/jB,EAAAnG,GAAAktB,EAAA/C,UAEA,OAAAhkB,EAAA2qB,QAAA,IAAAhF,KAmNA,IAAAqD,EAAA,WAGA,SAAA2G,EAAA3vB,EAAAwlB,EAAA8G,GACA,IAAAsD,EACArC,EAAA,EACAnwB,EAAA4C,EAAAlC,OAEA,IAAAkC,IAAAlB,QAAyB1B,KACzBwyB,EAAA5vB,EAAA5C,GAAAooB,EAAA+H,EACAvtB,EAAA5C,GAAAwyB,EAAAtD,EAAA,EACAiB,EAAAqC,EAAAtD,EAAA,EAKA,OAFAiB,GAAAvtB,EAAAmT,QAAAoa,GAEAvtB,EAGA,SAAA6vB,EAAAzgB,EAAA4D,EAAA8c,EAAAC,GACA,IAAA3yB,EAAAyC,EAEA,GAAAiwB,GAAAC,EACAlwB,EAAAiwB,EAAAC,EAAA,UAEA,IAAA3yB,EAAAyC,EAAA,EAAuBzC,EAAA0yB,EAAQ1yB,IAC/B,GAAAgS,EAAAhS,IAAA4V,EAAA5V,GAAA,CACAyC,EAAAuP,EAAAhS,GAAA4V,EAAA5V,GAAA,KACA,MAKA,OAAAyC,EAGA,SAAAmwB,EAAA5gB,EAAA4D,EAAA8c,EAAAxD,GAIA,IAHA,IAAAlvB,EAAA,EAGY0yB,KACZ1gB,EAAA0gB,IAAA1yB,EACAA,EAAAgS,EAAA0gB,GAAA9c,EAAA8c,GAAA,IACA1gB,EAAA0gB,GAAA1yB,EAAAkvB,EAAAld,EAAA0gB,GAAA9c,EAAA8c,GAIA,MAAY1gB,EAAA,IAAAA,EAAAtR,OAAA,GAAuBsR,EAAA4d,QAGnC,gBAAAhtB,EAAAknB,EAAAS,EAAA3B,EAAAkD,EAAAoD,GACA,IAAArF,EAAAptB,EAAAuD,EAAAooB,EAAAyK,EAAAC,EAAAC,EAAAC,EAAAxnB,EAAAynB,EAAAC,EAAAC,EAAAC,EAAA5I,EAAA5V,EAAAye,EAAAC,EAAAC,EACAC,EAAAC,EACA9J,EAAA/mB,EAAAzD,YACAu0B,EAAA9wB,EAAA4T,GAAAsT,EAAAtT,EAAA,KACAyT,EAAArnB,EAAAgQ,EACAsX,EAAAJ,EAAAlX,EAGA,KAAAqX,KAAA,IAAAC,KAAA,IAEA,WAAAP,EACA/mB,EAAA4T,GAAAsT,EAAAtT,IAAAyT,GAAAC,GAAAD,EAAA,IAAAC,EAAA,GAAAA,GAGAD,GAAA,GAAAA,EAAA,KAAAC,EAAA,EAAAwJ,IAAA,EAHA9J,KAsBA,IAhBAsF,GACA2D,EAAA,EACAp2B,EAAAmG,EAAAnG,EAAAqtB,EAAArtB,IAEAyyB,EAAAnH,EACA8K,EAAA7K,EACAvrB,EAAA6qB,EAAA1kB,EAAAnG,EAAAo2B,GAAAvL,EAAAwC,EAAArtB,EAAAo2B,IAGAW,EAAAtJ,EAAAxpB,OACA4yB,EAAArJ,EAAAvpB,OAEAuyB,GADAznB,EAAA,IAAAme,EAAA+J,IACA9gB,KAIA5S,EAAA,EAAiBkqB,EAAAlqB,KAAAiqB,EAAAjqB,IAAA,GAAuBA,KAaxC,GAXAkqB,EAAAlqB,IAAAiqB,EAAAjqB,IAAA,IAAAvD,IAEA,MAAA8tB,GACAC,EAAAD,EAAAZ,EAAAnD,UACAoC,EAAAe,EAAAlD,UAEA+D,EADOsB,EACPvB,GAAA3nB,EAAAnG,EAAAqtB,EAAArtB,GAAA,EAEA8tB,EAGAC,EAAA,EACAyI,EAAA/wB,KAAA,GACA4wB,GAAA,MACO,CAOP,GAJAtI,IAAAqI,EAAA,IACA7yB,EAAA,EAGA,GAAAwzB,EAAA,CAMA,IALApL,EAAA,EACA8B,IAAA,GACAM,KAGgBxqB,EAAAszB,GAAAlL,IAAAoC,IAAuBxqB,IACvC4U,EAAAwT,EAAA8G,GAAAjF,EAAAjqB,IAAA,GACAizB,EAAAjzB,GAAA4U,EAAAsV,EAAA,EACA9B,EAAAxT,EAAAsV,EAAA,EAGA4I,EAAA1K,GAAApoB,EAAAszB,MAGS,CAiBT,KAdAlL,EAAA8G,GAAAhF,EAAA,SAEA,IACAA,EAAAqI,EAAArI,EAAA9B,EAAA8G,GACAjF,EAAAsI,EAAAtI,EAAA7B,EAAA8G,GACAsE,EAAAtJ,EAAAxpB,OACA4yB,EAAArJ,EAAAvpB,QAGA2yB,EAAAG,EAEAL,GADAD,EAAAjJ,EAAAvoB,MAAA,EAAA8xB,IACA9yB,OAGgByyB,EAAAK,GAAWN,EAAAC,KAAA,GAE3BM,EAAAvJ,EAAAxoB,SACAqU,QAAA,GACAwd,EAAArJ,EAAA,GAEAA,EAAA,IAAAgF,EAAA,KAAAqE,EAEA,GACAnL,EAAA,GAGAyB,EAAA4I,EAAAvI,EAAAgJ,EAAAM,EAAAL,IAGA,GAGAC,EAAAF,EAAA,GACAM,GAAAL,IAAAC,IAAAlE,GAAAgE,EAAA,SAGA9K,EAAAgL,EAAAG,EAAA,GAUA,GACAnL,GAAA8G,IAAA9G,EAAA8G,EAAA,GAWA,IAHArF,EAAA4I,EALAM,EAAAR,EAAArI,EAAA9B,EAAA8G,GAKAgE,EAJAF,EAAAD,EAAAryB,OACAyyB,EAAAD,EAAAxyB,WAOA0nB,IAGAwK,EAAAG,EAAAS,EAAAR,EAAAS,EAAAvJ,EAAA8I,EAAA9D,MAOA,GAAA9G,IAAAyB,EAAAzB,EAAA,GACA2K,EAAA7I,EAAAxoB,UAGAsxB,EAAAD,EAAAryB,QACAyyB,GAAAJ,EAAAhd,QAAA,GAGA6c,EAAAM,EAAAH,EAAAI,EAAAjE,IAGA,GAAArF,IAIAA,EAAA4I,EAAAvI,EAAAgJ,EAAAM,EAHAL,EAAAD,EAAAxyB,SAMA,IACA0nB,IAGAwK,EAAAM,EAAAM,EAAAL,EAAAM,EAAAvJ,EAAAiJ,EAAAjE,IAIAiE,EAAAD,EAAAxyB,QACa,IAAAmpB,IACbzB,IACA8K,GAAA,IAIAD,EAAAjzB,KAAAooB,EAGAyB,GAAAqJ,EAAA,GACAA,EAAAC,KAAAlJ,EAAAoJ,IAAA,GAEAH,GAAAjJ,EAAAoJ,IACAF,EAAA,UAGWE,IAAAC,QAAA,IAAAJ,EAAA,KAAA1I,KAEXsI,OAAA,IAAAI,EAAA,GAIAD,EAAA,IAAAA,EAAArD,QAIA,MAAAiD,EACArnB,EAAA/O,IACAupB,EAAA8M,MACO,CAGP,IAAA9yB,EAAA,EAAAooB,EAAA6K,EAAA,GAA8B7K,GAAA,GAASA,GAAA,GAAApoB,IACvCwL,EAAA/O,EAAAuD,EAAAvD,EAAAo2B,EAAA,EAEArJ,EAAAhe,EAAAsgB,EAAAvB,EAAA/e,EAAA/O,EAAA,EAAA8tB,EAAA3B,EAAAkK,GAGA,OAAAtnB,GAnQA,GA4QA,SAAAge,EAAA5mB,EAAA4nB,EAAA5B,EAAA+K,GACA,IAAAC,EAAA5zB,EAAAmpB,EAAAf,EAAAW,EAAA8K,EAAArL,EAAAyB,EAAA6J,EACAnK,EAAA/mB,EAAAzD,YAGA40B,EAAA,SAAAvJ,EAAA,CAIA,KAHAP,EAAArnB,EAAAgQ,GAGA,OAAAhQ,EAWA,IAAAgxB,EAAA,EAAAxL,EAAA6B,EAAA,GAAiC7B,GAAA,GAASA,GAAA,GAAAwL,IAI1C,IAHA5zB,EAAAwqB,EAAAoJ,GAGA,EACA5zB,GAAAgoB,EACAmB,EAAAqB,EAIAzB,GAHAP,EAAAyB,EAAA6J,EAAA,IAGArM,EAAA,GAAAmM,EAAAzK,EAAA,aAIA,IAFA2K,EAAAvM,KAAAlP,MAAArY,EAAA,GAAAgoB,MACAI,EAAA6B,EAAAvpB,QACA,CACA,IAAAizB,EASA,MAAAI,EANA,KAAkB3L,KAAA0L,GAAY7J,EAAA/nB,KAAA,GAC9BsmB,EAAAO,EAAA,EACA6K,EAAA,EAEAzK,GADAnpB,GAAAgoB,GACAA,EAAA,MAIS,CAIT,IAHAQ,EAAAJ,EAAA6B,EAAA6J,GAGAF,EAAA,EAA0BxL,GAAA,GAASA,GAAA,GAAAwL,IAUnC7K,GAHAI,GAJAnpB,GAAAgoB,GAIAA,EAAA4L,GAGA,IAAApL,EAAAf,EAAA,GAAAmM,EAAAzK,EAAA,QAoBA,GAfAwK,KAAAnJ,EAAA,QACA,IAAAP,EAAA6J,EAAA,KAAA3K,EAAA,EAAAX,IAAAf,EAAA,GAAAmM,EAAAzK,EAAA,IAMA0K,EAAAjL,EAAA,GACAG,GAAA4K,KAAA,GAAA/K,OAAAhmB,EAAA4T,EAAA,QACAuS,EAAA,MAAAA,IAAA,GAAAH,GAAA+K,GAAA,GAAA/K,IAGA5oB,EAAA,EAAAmpB,EAAA,EAAAX,EAAAf,EAAA,GAAAmM,EAAAzK,GAAA,EAAAc,EAAA6J,EAAA,UACAlL,IAAAhmB,EAAA4T,EAAA,QAEAgU,EAAA,IAAAP,EAAA,GAgBA,OAfAA,EAAAvpB,OAAA,EACAmzB,GAGArJ,GAAA5nB,EAAAnG,EAAA,EAGAwtB,EAAA,GAAAxC,EAAA,IAAAO,EAAAwC,EAAAxC,MACAplB,EAAAnG,GAAA+tB,GAAA,GAIAP,EAAA,GAAArnB,EAAAnG,EAAA,EAGAmG,EAiBA,GAbA,GAAA5C,GACAiqB,EAAAvpB,OAAAozB,EACA1L,EAAA,EACA0L,MAEA7J,EAAAvpB,OAAAozB,EAAA,EACA1L,EAAAX,EAAA,GAAAO,EAAAhoB,GAIAiqB,EAAA6J,GAAA3K,EAAA,GAAAX,EAAAf,EAAA,GAAAmM,EAAAzK,GAAA1B,EAAA,GAAA0B,GAAA,GAAAf,EAAA,GAGAyL,EACA,OAAe,CAGf,MAAAC,EAAA,CAGA,IAAA9zB,EAAA,EAAAmpB,EAAAc,EAAA,GAAkCd,GAAA,GAASA,GAAA,GAAAnpB,IAE3C,IADAmpB,EAAAc,EAAA,IAAA7B,EACAA,EAAA,EAAuBe,GAAA,GAASA,GAAA,GAAAf,IAGhCpoB,GAAAooB,IACAxlB,EAAAnG,IACAwtB,EAAA,IAAAlC,IAAAkC,EAAA,OAGA,MAGA,GADAA,EAAA6J,IAAA1L,EACA6B,EAAA6J,IAAA/L,EAAA,MACAkC,EAAA6J,KAAA,EACA1L,EAAA,EAMA,IAAApoB,EAAAiqB,EAAAvpB,OAAyB,IAAAupB,IAAAjqB,IAAeiqB,EAAAjU,MAsBxC,OAnBAgR,IAGApkB,EAAAnG,EAAAktB,EAAA7C,MAGAlkB,EAAAgQ,EAAA,KACAhQ,EAAAnG,EAAAmtB,KAGOhnB,EAAAnG,EAAAktB,EAAA9C,OAGPjkB,EAAAnG,EAAA,EACAmG,EAAAgQ,GAAA,KAKAhQ,EAIA,SAAAouB,EAAApuB,EAAAoxB,EAAAxJ,GACA,IAAA5nB,EAAA8oB,WAAA,OAAAuI,EAAArxB,GACA,IAAAwlB,EACA3rB,EAAAmG,EAAAnG,EACA8rB,EAAAJ,EAAAvlB,EAAAgQ,GACA6X,EAAAlC,EAAA7nB,OAwBA,OAtBAszB,GACAxJ,IAAApC,EAAAoC,EAAAC,GAAA,EACAlC,IAAAnH,OAAA,OAAAmH,EAAA7mB,MAAA,GAAA+mB,EAAAL,GACOqC,EAAA,IACPlC,IAAAnH,OAAA,OAAAmH,EAAA7mB,MAAA,IAGA6mB,KAAA3lB,EAAAnG,EAAA,YAAAmG,EAAAnG,GACKA,EAAA,GACL8rB,EAAA,KAAAE,GAAAhsB,EAAA,GAAA8rB,EACAiC,IAAApC,EAAAoC,EAAAC,GAAA,IAAAlC,GAAAE,EAAAL,KACK3rB,GAAAguB,GACLlC,GAAAE,EAAAhsB,EAAA,EAAAguB,GACAD,IAAApC,EAAAoC,EAAA/tB,EAAA,OAAA8rB,IAAA,IAAAE,EAAAL,OAEAA,EAAA3rB,EAAA,GAAAguB,IAAAlC,IAAA7mB,MAAA,EAAA0mB,GAAA,IAAAG,EAAA7mB,MAAA0mB,IACAoC,IAAApC,EAAAoC,EAAAC,GAAA,IACAhuB,EAAA,IAAAguB,IAAAlC,GAAA,KACAA,GAAAE,EAAAL,KAIAG,EAKA,SAAAsH,EAAA+D,EAAAn3B,GACA,IAAA+rB,EAAAoL,EAAA,GAGA,IAAAn3B,GAAAurB,EAAwBQ,GAAA,GAASA,GAAA,GAAA/rB,IACjC,OAAAA,EAIA,SAAA+yB,EAAA7F,EAAAa,EAAAD,GACA,GAAAC,EAAAvC,EAKA,MAFAjB,GAAA,EACAuD,IAAAZ,EAAAnD,UAAA+D,GACAjI,MAAA6E,GAEA,OAAAqC,EAAA,IAAAG,EAAAtD,GAAAmE,EAAA,MAIA,SAAAgD,EAAA7D,EAAAa,EAAA5B,GACA,GAAA4B,EAAAtC,EAAA,MAAA5F,MAAA6E,GACA,OAAAqC,EAAA,IAAAG,EAAArD,GAAAkE,EAAA5B,GAAA,GAIA,SAAAwH,EAAAwD,GACA,IAAApL,EAAAoL,EAAAlzB,OAAA,EACA+pB,EAAAjC,EAAAR,EAAA,EAKA,GAHAQ,EAAAoL,EAAApL,GAGA,CAGA,KAAYA,EAAA,MAAaA,GAAA,GAAAiC,IAGzB,IAAAjC,EAAAoL,EAAA,GAAyBpL,GAAA,GAASA,GAAA,GAAAiC,IAGlC,OAAAA,EAIA,SAAAhC,EAAAL,GAEA,IADA,IAAA8L,EAAA,GACU9L,KAAK8L,GAAA,IACf,OAAAA,EAWA,SAAAnC,EAAApI,EAAA/mB,EAAA0oB,EAAAf,GACA,IAAAoJ,EACAlxB,EAAA,IAAAknB,EAAA,GAIAvB,EAAAb,KAAAlP,KAAAkS,EAAAvC,EAAA,GAIA,IAFAhB,GAAA,IAEW,CAOX,GANAsE,EAAA,GAEA6I,IADA1xB,IAAAooB,MAAAjoB,IACAgQ,EAAAwV,KAAAuL,GAAA,GAIA,KADArI,EAAAhE,EAAAgE,EAAA,IACA,CAGAA,EAAA7oB,EAAAmQ,EAAAlS,OAAA,EACAizB,GAAA,IAAAlxB,EAAAmQ,EAAA0Y,MAAA7oB,EAAAmQ,EAAA0Y,GACA,MAIA6I,IADAvxB,IAAAioB,MAAAjoB,IACAgQ,EAAAwV,GAKA,OAFApB,GAAA,EAEAvkB,EAIA,SAAA2xB,EAAA9I,GACA,SAAAA,EAAA1Y,EAAA0Y,EAAA1Y,EAAAlS,OAAA,GAOA,SAAA2zB,EAAA1K,EAAA7kB,EAAAwvB,GAKA,IAJA,IAAAxK,EACAlnB,EAAA,IAAA+mB,EAAA7kB,EAAA,IACA9E,EAAA,IAEUA,EAAA8E,EAAApE,QAAmB,CAE7B,KADAopB,EAAA,IAAAH,EAAA7kB,EAAA9E,KACAwW,EAAA,CACA5T,EAAAknB,EACA,MACOlnB,EAAA0xB,GAAAxK,KACPlnB,EAAAknB,GAIA,OAAAlnB,EAmCA,SAAAmtB,EAAAntB,EAAA4nB,GACA,IAAA4E,EAAAmF,EAAApL,EAAAzB,EAAA8M,EAAA5f,EAAAsZ,EACA3C,EAAA,EACAvrB,EAAA,EACAooB,EAAA,EACAuB,EAAA/mB,EAAAzD,YACAypB,EAAAe,EAAAlD,SACA8D,EAAAZ,EAAAnD,UAGA,IAAA5jB,EAAAgQ,IAAAhQ,EAAAgQ,EAAA,IAAAhQ,EAAAnG,EAAA,GAEA,WAAAktB,EAAA/mB,EAAAgQ,EACAhQ,EAAAgQ,EAAA,GAAAhQ,EAAA4T,EAAA,UACA5T,EAAA4T,EAAA5T,EAAA4T,EAAA,IAAA5T,EAAA,KAaA,IAVA,MAAA4nB,GACAxD,GAAA,EACAkH,EAAA3D,GAEA2D,EAAA1D,EAGA5V,EAAA,IAAA+U,EAAA,QAGA/mB,EAAAnG,GAAA,GAGAmG,IAAAioB,MAAAjW,GACAwT,GAAA,EAUA,IAJA8F,GADAqG,EAAAhN,KAAAne,IAAAqe,EAAA,EAAAW,IAAAb,KAAAlB,KAAA,MAEA+I,EAAA1H,EAAA8M,EAAA,IAAA7K,EAAA,GACAA,EAAAnD,UAAA0H,IAEW,CAKX,GAJAxG,EAAA8B,EAAA9B,EAAAmD,MAAAjoB,GAAAsrB,EAAA,GACAkB,IAAAvE,QAAA7qB,GAGAmoB,GAFAvT,EAAA4f,EAAAxJ,KAAAY,EAAAlE,EAAA0H,EAAAlB,EAAA,KAEAtb,GAAAlR,MAAA,EAAAwsB,KAAA/F,EAAAqM,EAAA5hB,GAAAlR,MAAA,EAAAwsB,GAAA,CAEA,IADA/E,EAAAf,EACAe,KAAAqL,EAAAhL,EAAAgL,EAAA3J,MAAA2J,GAAAtG,EAAA,GAOA,SAAA1D,EAYA,OADAb,EAAAnD,UAAA+D,EACAiK,EAVA,KAAAjJ,EAAA,GAAA5C,EAAA6L,EAAA5hB,EAAAsb,EAAAqG,EAAA3L,EAAA2C,IAMA,OAAA/B,EAAAgL,EAAA7K,EAAAnD,UAAA+D,EAAA3B,EAAA5B,GAAA,GALA2C,EAAAnD,UAAA0H,GAAA,GACAkB,EAAA1H,EAAA9S,EAAA,IAAA+U,EAAA,GACA3pB,EAAA,EACAurB,IAUAiJ,EAAA5f,GAoBA,SAAA2a,EAAAzF,EAAAU,GACA,IAAApU,EAAAqe,EAAArF,EAAA3yB,EAAAi4B,EAAAnJ,EAAAiJ,EAAA5f,EAAAsZ,EAAAyG,EAAAnG,EACAlD,EAAA,EAEA1oB,EAAAknB,EACAG,EAAArnB,EAAAgQ,EACA+W,EAAA/mB,EAAAzD,YACAypB,EAAAe,EAAAlD,SACA8D,EAAAZ,EAAAnD,UAGA,GAAA5jB,EAAA4T,EAAA,IAAAyT,MAAA,KAAArnB,EAAAnG,GAAA,GAAAwtB,EAAA,OAAAA,EAAAvpB,OACA,WAAAipB,EAAAM,MAAA,WAAArnB,EAAA4T,EAAAoT,IAAAK,EAAA,EAAArnB,GAcA,GAXA,MAAA4nB,GACAxD,GAAA,EACAkH,EAAA3D,GAEA2D,EAAA1D,EAGAb,EAAAnD,UAAA0H,GAnBA,GAqBAuG,GADAre,EAAA+R,EAAA8B,IACA7I,OAAA,KAEAmG,KAAAgC,IAAA9sB,EAAAmG,EAAAnG,GAAA,OAqCA,OAJAmY,EAAA4a,EAAA7F,EAAAuE,EAAA,EAAA3D,GAAAM,MAAApuB,EAAA,IACAmG,EAAA2sB,EAAA,IAAA5F,EAAA8K,EAAA,IAAAre,EAAA1U,MAAA,IAAAwsB,EAzDA,IAyDAlD,KAAApW,GACA+U,EAAAnD,UAAA+D,EAEA,MAAAC,EAAAhB,EAAA5mB,EAAA2nB,EAAA3B,EAAA5B,GAAA,GAAApkB,EAxBA,KAAA6xB,EAAA,MAAAA,GAAA,GAAAA,GAAAre,EAAAgL,OAAA,MAGAqT,GADAre,EAAA+R,GADAvlB,IAAAioB,MAAAf,IACAlX,IACAwO,OAAA,GACAkK,IAiCA,IA9BA7uB,EAAAmG,EAAAnG,EAEAg4B,EAAA,GACA7xB,EAAA,IAAA+mB,EAAA,KAAAvT,GACA3Z,KAEAmG,EAAA,IAAA+mB,EAAA8K,EAAA,IAAAre,EAAA1U,MAAA,IAeAizB,EAAA/xB,EAKA4xB,EAAAE,EAAA9xB,EAAAgpB,EAAAhpB,EAAAmoB,MAAA,GAAAnoB,EAAAooB,KAAA,GAAAkD,EAAA,GACAM,EAAAhF,EAAA5mB,EAAAioB,MAAAjoB,GAAAsrB,EAAA,GACAkB,EAAA,IAEW,CAIX,GAHAsF,EAAAlL,EAAAkL,EAAA7J,MAAA2D,GAAAN,EAAA,GAGA/F,GAFAvT,EAAA4f,EAAAxJ,KAAAY,EAAA8I,EAAA,IAAA/K,EAAAyF,GAAAlB,EAAA,KAEAtb,GAAAlR,MAAA,EAAAwsB,KAAA/F,EAAAqM,EAAA5hB,GAAAlR,MAAA,EAAAwsB,GAAA,CAcA,GAbAsG,IAAA3J,MAAA,GAIA,IAAApuB,IAAA+3B,IAAAxJ,KAAAwE,EAAA7F,EAAAuE,EAAA,EAAA3D,GAAAM,MAAApuB,EAAA,MACA+3B,EAAA5I,EAAA4I,EAAA,IAAA7K,EAAA2B,GAAA4C,EAAA,GAQA,MAAA1D,EAWA,OADAb,EAAAnD,UAAA+D,EACAiK,EAVA,IAAA7L,EAAA6L,EAAA5hB,EAAAsb,EA5FA,GA4FAtF,EAAA2C,GAMA,OAAA/B,EAAAgL,EAAA7K,EAAAnD,UAAA+D,EAAA3B,EAAA5B,GAAA,GALA2C,EAAAnD,UAAA0H,GA7FA,GA8FAtZ,EAAA8f,EAAA9xB,EAAAgpB,EAAA+I,EAAA5J,MAAA,GAAA4J,EAAA3J,KAAA,GAAAkD,EAAA,GACAM,EAAAhF,EAAA5mB,EAAAioB,MAAAjoB,GAAAsrB,EAAA,GACAkB,EAAA7D,EAAA,EAUAiJ,EAAA5f,EACAwa,GAAA,GAMA,SAAA6E,EAAArxB,GAEA,OAAAgyB,OAAAhyB,EAAA4T,EAAA5T,EAAA4T,EAAA,GAOA,SAAAqe,EAAAjyB,EAAA2lB,GACA,IAAA9rB,EAAAuD,EAAAyqB,EAmBA,KAhBAhuB,EAAA8rB,EAAAjpB,QAAA,WAAAipB,IAAAuM,QAAA,UAGA90B,EAAAuoB,EAAAwM,OAAA,UAGAt4B,EAAA,IAAAA,EAAAuD,GACAvD,IAAA8rB,EAAA7mB,MAAA1B,EAAA,GACAuoB,IAAAyM,UAAA,EAAAh1B,IACKvD,EAAA,IAGLA,EAAA8rB,EAAA7nB,QAIAV,EAAA,EAAe,KAAAuoB,EAAA0M,WAAAj1B,GAA0BA,KAGzC,IAAAyqB,EAAAlC,EAAA7nB,OAA0B,KAAA6nB,EAAA0M,WAAAxK,EAAA,KAAgCA,GAG1D,GAFAlC,IAAA7mB,MAAA1B,EAAAyqB,GAEA,CAYA,GAXAA,GAAAzqB,EACA4C,EAAAnG,MAAAuD,EAAA,EACA4C,EAAAgQ,KAMA5S,GAAAvD,EAAA,GAAAurB,EACAvrB,EAAA,IAAAuD,GAAAgoB,GAEAhoB,EAAAyqB,EAAA,CAEA,IADAzqB,GAAA4C,EAAAgQ,EAAA1Q,MAAAqmB,EAAA7mB,MAAA,EAAA1B,IACAyqB,GAAAzC,EAA6BhoB,EAAAyqB,GAAS7nB,EAAAgQ,EAAA1Q,MAAAqmB,EAAA7mB,MAAA1B,KAAAgoB,IACtCO,IAAA7mB,MAAA1B,GACAA,EAAAgoB,EAAAO,EAAA7nB,YAEAV,GAAAyqB,EAGA,KAAYzqB,KAAKuoB,GAAA,IACjB3lB,EAAAgQ,EAAA1Q,MAAAqmB,GAEAvB,IAGApkB,EAAAnG,EAAAmG,EAAAzD,YAAA2nB,MAGAlkB,EAAAgQ,EAAA,KACAhQ,EAAAnG,EAAAmtB,KAGShnB,EAAAnG,EAAAmG,EAAAzD,YAAA0nB,OAGTjkB,EAAAnG,EAAA,EACAmG,EAAAgQ,GAAA,UAOAhQ,EAAAnG,EAAA,EACAmG,EAAAgQ,GAAA,GAGA,OAAAhQ,EAOA,SAAAsyB,EAAAtyB,EAAA2lB,GACA,IAAA2G,EAAAvF,EAAAwL,EAAAn1B,EAAAo1B,EAAA3K,EAAA3V,EAAAmV,EAAAyF,EAEA,GAAAnH,EAAAjpB,QAAA,SAEA,GADAipB,IAAAuM,QAAA,qBACAhN,EAAAuN,KAAA9M,GAAA,OAAAsM,EAAAjyB,EAAA2lB,QACK,gBAAAA,GAAA,QAAAA,EAIL,OAHAA,IAAA3lB,EAAA4T,EAAAoT,KACAhnB,EAAAnG,EAAAmtB,IACAhnB,EAAAgQ,EAAA,KACAhQ,EAGA,GAAAglB,EAAAyN,KAAA9M,GACA2G,EAAA,GACA3G,IAAA+M,mBACK,GAAA3N,EAAA0N,KAAA9M,GACL2G,EAAA,MACK,KAAArH,EAAAwN,KAAA9M,GAGL,MAAAjG,MAAA4E,EAAAqB,GAFA2G,EAAA,EAkCA,KA5BAlvB,EAAAuoB,EAAAwM,OAAA,OAEA,GACAjgB,GAAAyT,EAAA7mB,MAAA1B,EAAA,GACAuoB,IAAAyM,UAAA,EAAAh1B,IAEAuoB,IAAA7mB,MAAA,GAMA0zB,GADAp1B,EAAAuoB,EAAAjpB,QAAA,OACA,EACAqqB,EAAA/mB,EAAAzD,YAEAi2B,IAGAp1B,GADAyqB,GADAlC,IAAAuM,QAAA,SACAp0B,QACAV,EAGAm1B,EAAApD,EAAApI,EAAA,IAAAA,EAAAuF,GAAAlvB,EAAA,EAAAA,IAOAA,EAHA0vB,GADAzF,EAAAjB,EAAAT,EAAA2G,EAAAnH,IACArnB,OAAA,EAGgB,IAAAupB,EAAAjqB,KAAaA,EAAAiqB,EAAAjU,MAC7B,OAAAhW,EAAA,MAAA2pB,EAAA,EAAA/mB,EAAA4T,IACA5T,EAAAnG,EAAAozB,EAAA5F,EAAAyF,GACA9sB,EAAAgQ,EAAAqX,EACAjD,GAAA,EAQAoO,IAAAxyB,EAAAgpB,EAAAhpB,EAAAuyB,EAAA,EAAA1K,IAGA3V,IAAAlS,IAAAioB,MAAAtD,KAAAgC,IAAAzU,GAAA,GAAA2S,EAAA,EAAA3S,GAAAiR,EAAA2B,IAAA,EAAA5S,KACAkS,GAAA,EAEApkB,GA2CA,SAAAgoB,EAAAjB,EAAA2B,EAAA1oB,EAAAknB,EAAAyL,GACA,IAAApM,EAAAvU,EAAAiC,EAAA2X,EAEAjE,EAAAZ,EAAAnD,UACA4B,EAAAb,KAAAlP,KAAAkS,EAAAvC,GAMA,IAJAhB,GAAA,EACAwH,EAAA5rB,EAAAioB,MAAAjoB,GACAiU,EAAA,IAAA8S,EAAAG,KAEW,CAMX,GALAlV,EAAAgX,EAAA/U,EAAAgU,MAAA2D,GAAA,IAAA7E,EAAA2B,SAAAf,EAAA,GACA1T,EAAA0e,EAAAzL,EAAAkB,KAAApW,GAAAkV,EAAAiB,MAAAnW,GACAkV,EAAA8B,EAAAhX,EAAAiW,MAAA2D,GAAA,IAAA7E,EAAA2B,SAAAf,EAAA,QAGA,KAFA3V,EAAAiC,EAAAmU,KAAAlB,IAEAlX,EAAAwV,GAAA,CACA,IAAAe,EAAAf,EAAmBxT,EAAAhC,EAAAuW,KAAAtS,EAAAjE,EAAAuW,UACnB,OAAAA,EAAA,MAGAA,EAAAtS,EACAA,EAAAiT,EACAA,EAAAlV,EACAA,EAAAuU,EACAnpB,EAMA,OAHAgnB,GAAA,EACApS,EAAAhC,EAAAlS,OAAA0nB,EAAA,EAEAxT,EAKA,SAAA+V,EAAA/U,EAAAnZ,GAEA,IADA,IAAA6uB,EAAA1V,IACAnZ,GAAA6uB,GAAA1V,EACA,OAAA0V,EAKA,SAAAL,EAAAtB,EAAA/mB,GACA,IAAAgS,EACA2Y,EAAA3qB,EAAA4T,EAAA,EACAgf,EAAAhI,EAAA7D,IAAAnD,UAAA,GACA8G,EAAAkI,EAAA3K,MAAA,IAIA,IAFAjoB,IAAA2mB,OAEAqE,IAAAN,GAEA,OADArH,EAAAsH,EAAA,IACA3qB,EAKA,IAFAgS,EAAAhS,EAAAqpB,SAAAuJ,IAEA9K,SACAzE,EAAAsH,EAAA,QACK,CAIL,IAHA3qB,IAAAmoB,MAAAnW,EAAAiW,MAAA2K,KAGA5H,IAAAN,GAEA,OADArH,EAAAmO,EAAAxf,GAAA2Y,EAAA,IAAAA,EAAA,IACA3qB,EAGAqjB,EAAAmO,EAAAxf,GAAA2Y,EAAA,IAAAA,EAAA,IAGA,OAAA3qB,EAAAmoB,MAAAyK,GAAAjM,MASA,SAAAsH,GAAAjuB,EAAAsmB,EAAAsB,EAAA5B,GACA,IAAAsG,EAAAzyB,EAAAuD,EAAAooB,EAAAqC,EAAAoJ,EAAAtL,EAAA0B,EAAAH,EACAH,EAAA/mB,EAAAzD,YACA60B,OAAA,IAAAxJ,EAWA,GATAwJ,GACAtL,EAAA8B,EAAA,EAAArE,QACA,IAAAyC,IAAAe,EAAAlD,SACAiC,EAAAE,EAAA,OAEA4B,EAAAb,EAAAnD,UACAoC,EAAAe,EAAAlD,UAGA7jB,EAAA8oB,WAEK,CAoCL,IAlCA1rB,GADAuoB,EAAAyI,EAAApuB,IACAtD,QAAA,KAOA00B,GACA9E,EAAA,EACA,IAAAhG,EACAsB,EAAA,EAAAA,EAAA,EACS,GAAAtB,IACTsB,EAAA,EAAAA,EAAA,IAGA0E,EAAAhG,EAOAlpB,GAAA,IACAuoB,IAAAuM,QAAA,SACAhL,EAAA,IAAAH,EAAA,IACAltB,EAAA8rB,EAAA7nB,OAAAV,EACA8pB,EAAAlX,EAAAoW,EAAAgI,EAAAlH,GAAA,GAAAoF,GACApF,EAAArtB,EAAAqtB,EAAAlX,EAAAlS,QAIAjE,EAAAguB,GADAR,EAAAjB,EAAAT,EAAA,GAAA2G,IACAxuB,OAGY,GAAAupB,IAAAQ,IAAgBR,EAAAjU,MAE5B,GAAAiU,EAAA,GAEO,CAyBP,GAxBAjqB,EAAA,EACAvD,MAEAmG,EAAA,IAAA+mB,EAAA/mB,IACAgQ,EAAAqX,EACArnB,EAAAnG,IAEAwtB,GADArnB,EAAAgpB,EAAAhpB,EAAAknB,EAAAU,EAAA5B,EAAA,EAAAsG,IACAtc,EACAnW,EAAAmG,EAAAnG,EACAo3B,EAAA7N,GAIAhmB,EAAAiqB,EAAAO,GACApC,EAAA8G,EAAA,EACA2E,UAAA,IAAA5J,EAAAO,EAAA,GAEAqJ,EAAAjL,EAAA,QACA,IAAA5oB,GAAA6zB,KAAA,IAAAjL,QAAAhmB,EAAA4T,EAAA,QACAxW,EAAAooB,GAAApoB,IAAAooB,IAAA,IAAAQ,GAAAiL,GAAA,IAAAjL,GAAA,EAAAqB,EAAAO,EAAA,IACA5B,KAAAhmB,EAAA4T,EAAA,QAEAyT,EAAAvpB,OAAA8pB,EAEAqJ,EAGA,OAAgB5J,IAAAO,GAAA0E,EAAA,GAChBjF,EAAAO,GAAA,EACAA,MACA/tB,EACAwtB,EAAAlU,QAAA,IAMA,IAAA0U,EAAAR,EAAAvpB,QAA6BupB,EAAAQ,EAAA,KAAcA,GAG3C,IAAAzqB,EAAA,EAAAuoB,EAAA,GAA6BvoB,EAAAyqB,EAASzqB,IAAAuoB,GAAAnC,EAAAhF,OAAA6I,EAAAjqB,IAGtC,GAAAg0B,EAAA,CACA,GAAAvJ,EAAA,EACA,OAAAvB,GAAA,GAAAA,EAAA,CAEA,IADAlpB,EAAA,IAAAkpB,EAAA,MACAuB,EAAyBA,EAAAzqB,EAASyqB,IAAAlC,GAAA,IAElC,IAAAkC,GADAR,EAAAjB,EAAAT,EAAA2G,EAAAhG,IACAxoB,QAAmCupB,EAAAQ,EAAA,KAAcA,GAGjD,IAAAzqB,EAAA,EAAAuoB,EAAA,KAAqCvoB,EAAAyqB,EAASzqB,IAAAuoB,GAAAnC,EAAAhF,OAAA6I,EAAAjqB,SAE9CuoB,IAAAnH,OAAA,OAAAmH,EAAA7mB,MAAA,GAIA6mB,KAAA9rB,EAAA,YAAAA,OACS,GAAAA,EAAA,GACT,OAAgBA,GAAK8rB,EAAA,IAAAA,EACrBA,EAAA,KAAAA,OAEA,KAAA9rB,EAAAguB,EAAA,IAAAhuB,GAAAguB,EAAuChuB,KAAM8rB,GAAA,SAC7C9rB,EAAAguB,IAAAlC,IAAA7mB,MAAA,EAAAjF,GAAA,IAAA8rB,EAAA7mB,MAAAjF,SAlEA8rB,EAAAyL,EAAA,WAsEAzL,GAAA,IAAAW,EAAA,QAAAA,EAAA,QAAAA,EAAA,SAAAX,OA9GAA,EAAA0L,EAAArxB,GAiHA,OAAAA,EAAA4T,EAAA,MAAA+R,IAKA,SAAA4L,GAAAxP,EAAA8F,GACA,GAAA9F,EAAAjkB,OAAA+pB,EAEA,OADA9F,EAAAjkB,OAAA+pB,GACA,EA2DA,SAAAlB,GAAA3mB,GACA,WAAArB,KAAAqB,GAAA2mB,MAUA,SAAA8D,GAAAzqB,GACA,WAAArB,KAAAqB,GAAAyqB,OAWA,SAAAM,GAAA/qB,GACA,WAAArB,KAAAqB,GAAA+qB,QAYA,SAAAuC,GAAAttB,EAAAknB,GACA,WAAAvoB,KAAAqB,GAAAooB,KAAAlB,GAWA,SAAA2D,GAAA7qB,GACA,WAAArB,KAAAqB,GAAA6qB,OAWA,SAAAM,GAAAnrB,GACA,WAAArB,KAAAqB,GAAAmrB,QAWA,SAAAM,GAAAzrB,GACA,WAAArB,KAAAqB,GAAAyrB,OAWA,SAAAJ,GAAArrB,GACA,WAAArB,KAAAqB,GAAAqrB,QA6BA,SAAAwH,GAAA3L,EAAAlnB,GACAknB,EAAA,IAAAvoB,KAAAuoB,GACAlnB,EAAA,IAAArB,KAAAqB,GACA,IAAAH,EACA8nB,EAAAhpB,KAAAilB,UACAoC,EAAArnB,KAAAklB,SACAyH,EAAA3D,EAAA,EAkCA,OA/BAT,EAAAtT,GAAA5T,EAAA4T,EAIKsT,EAAAlX,GAAAhQ,EAAAgQ,GAKAhQ,EAAAgQ,GAAAkX,EAAAY,UACLjoB,EAAAG,EAAA4T,EAAA,EAAAgX,EAAAjsB,KAAAgpB,EAAA3B,GAAA,IAAArnB,KAAA,IACAiV,EAAAsT,EAAAtT,GAGKsT,EAAAlX,GAAAhQ,EAAA8nB,UACLjoB,EAAA+qB,EAAAjsB,KAAA2sB,EAAA,GAAArD,MAAA,KACArU,EAAAsT,EAAAtT,EAGK5T,EAAA4T,EAAA,GACLjV,KAAAilB,UAAA0H,EACA3sB,KAAAklB,SAAA,EACAhkB,EAAAlB,KAAA8sB,KAAAzC,EAAA9B,EAAAlnB,EAAAsrB,EAAA,IACAtrB,EAAA4qB,EAAAjsB,KAAA2sB,EAAA,GACA3sB,KAAAilB,UAAA+D,EACAhpB,KAAAklB,SAAAmC,EACAnmB,EAAAqnB,EAAAtT,EAAA,EAAA/T,EAAAsoB,MAAAnoB,GAAAH,EAAAuoB,KAAApoB,IAEAH,EAAAlB,KAAA8sB,KAAAzC,EAAA9B,EAAAlnB,EAAAsrB,EAAA,KAvBAzrB,EAAA+qB,EAAAjsB,KAAA2sB,EAAA,GAAArD,MAAAjoB,EAAA4T,EAAA,YACAA,EAAAsT,EAAAtT,EALA/T,EAAA,IAAAlB,KAAAqoB,KA8BAnnB,EAWA,SAAA2oB,GAAAxoB,GACA,WAAArB,KAAAqB,GAAAwoB,OAUA,SAAA/S,GAAAzV,GACA,OAAA4mB,EAAA5mB,EAAA,IAAArB,KAAAqB,KAAAnG,EAAA,KAYA,SAAAitB,GAAA9mB,EAAAgO,EAAAC,GACA,WAAAtP,KAAAqB,GAAA8mB,MAAA9Y,EAAAC,GAsBA,SAAA6kB,GAAA1mB,GACA,IAAAA,GAAA,iBAAAA,EAAA,MAAAsT,MAAA2E,EAAA,mBACA,IAAAjnB,EAAA8U,EAAA1T,EACAu0B,GAAA,IAAA3mB,EAAA4mB,SACAC,GACA,cAAA1P,EACA,eACA,YAAAD,EAAA,EACA,aAAAA,EACA,SAAAA,EACA,QAAAA,EAAA,EACA,cAGA,IAAAlmB,EAAA,EAAeA,EAAA61B,EAAAn1B,OAAeV,GAAA,EAE9B,GADA8U,EAAA+gB,EAAA71B,GAAA21B,IAAAp0B,KAAAuT,GAAAyR,EAAAzR,SACA,KAAA1T,EAAA4N,EAAA8F,IAAA,CACA,KAAAwS,EAAAlmB,WAAAy0B,EAAA71B,EAAA,IAAAoB,GAAAy0B,EAAA71B,EAAA,IACA,MAAAsiB,MAAA4E,EAAApS,EAAA,KAAA1T,GADAG,KAAAuT,GAAA1T,EAMA,GADA0T,EAAA,SAAA6gB,IAAAp0B,KAAAuT,GAAAyR,EAAAzR,SACA,KAAA1T,EAAA4N,EAAA8F,IAAA,CACA,QAAA1T,IAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,EAYA,MAAAkhB,MAAA4E,EAAApS,EAAA,KAAA1T,GAXA,GAAAA,EAAA,CACA,uBAAA2lB,kBACAA,OAAA+O,kBAAA/O,OAAAgP,YAGA,MAAAzT,MAAA8E,GAFA7lB,KAAAuT,IAAA,OAKAvT,KAAAuT,IAAA,EAOA,OAAAvT,KAWA,SAAA+oB,GAAA1nB,GACA,WAAArB,KAAAqB,GAAA0nB,MAWA,SAAAiC,GAAA3pB,GACA,WAAArB,KAAAqB,GAAA2pB,OAyMA,SAAApU,GAAAvV,EAAAknB,GACA,WAAAvoB,KAAAqB,GAAAuV,IAAA2R,GAWA,SAAAkG,GAAAptB,GACA,WAAArB,KAAAqB,GAAAotB,MAUA,SAAAxI,GAAA5kB,GACA,OAAA4mB,EAAA5mB,EAAA,IAAArB,KAAAqB,KAAAnG,EAAA,KAaA,SAAAu5B,KACA,IAAAh2B,EAAAsrB,EACA1W,EAAA,IAAArT,KAAA,GAIA,IAFAylB,GAAA,EAEAhnB,EAAA,EAAeA,EAAA+E,UAAArE,QAEf,IADA4qB,EAAA,IAAA/pB,KAAAwD,UAAA/E,OACA4S,EAMOgC,EAAAhC,IACPgC,IAAAoW,KAAAM,EAAAT,MAAAS,SAPA,CACA,GAAAA,EAAA9U,EAEA,OADAwQ,GAAA,EACA,IAAAzlB,KAAA,KAEAqT,EAAA0W,EAQA,OAFAtE,GAAA,EAEApS,EAAAiY,OASA,SAAAoJ,GAAAjnB,GACA,OAAAA,aAAA+W,GAAA/W,KAAAsP,cAAA+I,IAAA,EAWA,SAAAwG,GAAAjrB,GACA,WAAArB,KAAAqB,GAAAirB,KAcA,SAAAzkB,GAAAxG,EAAAknB,GACA,WAAAvoB,KAAAqB,GAAAwG,IAAA0gB,GAWA,SAAAoM,GAAAtzB,GACA,WAAArB,KAAAqB,GAAAwG,IAAA,GAWA,SAAA+sB,GAAAvzB,GACA,WAAArB,KAAAqB,GAAAwG,IAAA,IAUA,SAAAyH,KACA,OAAAwjB,EAAA9yB,KAAAwD,UAAA,MAUA,SAAA6L,KACA,OAAAyjB,EAAA9yB,KAAAwD,UAAA,MAYA,SAAA+qB,GAAAltB,EAAAknB,GACA,WAAAvoB,KAAAqB,GAAAktB,IAAAhG,GAYA,SAAA1R,GAAAxV,EAAAknB,GACA,WAAAvoB,KAAAqB,GAAAwV,IAAA0R,GAYA,SAAApC,GAAA9kB,EAAAknB,GACA,WAAAvoB,KAAAqB,GAAA8kB,IAAAoC,GAYA,SAAAsM,GAAA5L,GACA,IAAA5X,EAAAnW,EAAA2rB,EAAAkD,EACAtrB,EAAA,EACAyC,EAAA,IAAAlB,KAAA,GACAwnB,KAOA,QALA,IAAAyB,IAAAjpB,KAAAilB,UACAkC,EAAA8B,EAAA,EAAArE,GAEAiC,EAAAb,KAAAlP,KAAAmS,EAAAxC,GAEAzmB,KAAAwlB,OAIK,GAAAA,OAAA+O,gBAGL,IAFAljB,EAAAmU,OAAA+O,gBAAA,IAAAO,YAAAjO,IAEYpoB,EAAAooB,IACZkD,EAAA1Y,EAAA5S,KAIA,MACA4S,EAAA5S,GAAA+mB,OAAA+O,gBAAA,IAAAO,YAAA,OAKAtN,EAAA/oB,KAAAsrB,EAAA,QAKK,KAAAvE,OAAAgP,YAwBL,MAAAzT,MAAA8E,GAnBA,IAFAxU,EAAAmU,OAAAgP,YAAA3N,GAAA,GAEYpoB,EAAAooB,IAGZkD,EAAA1Y,EAAA5S,IAAA4S,EAAA5S,EAAA,QAAA4S,EAAA5S,EAAA,cAAA4S,EAAA5S,EAAA,WAGA,MACA+mB,OAAAgP,YAAA,GAAAO,KAAA1jB,EAAA5S,IAKA+oB,EAAA7mB,KAAAopB,EAAA,KACAtrB,GAAA,GAIAA,EAAAooB,EAAA,OA5CA,KAAYpoB,EAAAooB,GAAOW,EAAA/oB,KAAA,IAAAunB,KAAA6O,SAAA,EA2DnB,IAVAhO,EAAAW,IAAA/oB,GACAwqB,GAAAxC,EAGAI,GAAAoC,IACAc,EAAA7D,EAAA,GAAAO,EAAAwC,GACAzB,EAAA/oB,IAAAooB,EAAAkD,EAAA,GAAAA,GAIU,IAAAvC,EAAA/oB,GAAaA,IAAA+oB,EAAA/S,MAGvB,GAAAhW,EAAA,EACAvD,EAAA,EACAssB,GAAA,OACK,CAIL,IAHAtsB,GAAA,EAGY,IAAAssB,EAAA,GAAatsB,GAAAurB,EAAAe,EAAA6G,QAGzB,IAAAxH,EAAA,EAAAkD,EAAAvC,EAAA,GAA4BuC,GAAA,GAASA,GAAA,GAAAlD,IAGrCA,EAAAJ,IAAAvrB,GAAAurB,EAAAI,GAMA,OAHA3lB,EAAAhG,IACAgG,EAAAmQ,EAAAmW,EAEAtmB,EAYA,SAAAqZ,GAAAlZ,GACA,OAAA4mB,EAAA5mB,EAAA,IAAArB,KAAAqB,KAAAnG,EAAA,EAAA8E,KAAAklB,UAeA,SAAAiN,GAAA9wB,GAEA,OADAA,EAAA,IAAArB,KAAAqB,IACAgQ,EAAAhQ,EAAAgQ,EAAA,GAAAhQ,EAAA4T,EAAA,EAAA5T,EAAA4T,EAAA5T,EAAA4T,GAAAoT,IAWA,SAAA0G,GAAA1tB,GACA,WAAArB,KAAAqB,GAAA0tB,MAWA,SAAA1D,GAAAhqB,GACA,WAAArB,KAAAqB,GAAAgqB,OAWA,SAAAC,GAAAjqB,GACA,WAAArB,KAAAqB,GAAAiqB,OAYA,SAAA4C,GAAA7sB,EAAAknB,GACA,WAAAvoB,KAAAqB,GAAA6sB,IAAA3F,GAaA,SAAA0K,KACA,IAAAx0B,EAAA,EACA8E,EAAAC,UACAnC,EAAA,IAAArB,KAAAuD,EAAA9E,IAGA,IADAgnB,GAAA,EACUpkB,EAAA4T,KAAAxW,EAAA8E,EAAApE,QAA0BkC,IAAAooB,KAAAlmB,EAAA9E,IAGpC,OAFAgnB,GAAA,EAEAwC,EAAA5mB,EAAArB,KAAAilB,UAAAjlB,KAAAklB,UAWA,SAAAiK,GAAA9tB,GACA,WAAArB,KAAAqB,GAAA8tB,MAWA,SAAAvD,GAAAvqB,GACA,WAAArB,KAAAqB,GAAAuqB,OAUA,SAAAiF,GAAAxvB,GACA,OAAA4mB,EAAA5mB,EAAA,IAAArB,KAAAqB,KAAAnG,EAAA,MAKAspB,EA1mBA,SAAAwQ,EAAAvnB,GACA,IAAAhP,EAAA8U,EAAA+gB,EASA,SAAA9P,EAAA3kB,GACA,IAAA3E,EAAAuD,EAAA4U,EACAhS,EAAArB,KAGA,KAAAqB,aAAAmjB,GAAA,WAAAA,EAAA3kB,GAOA,GAHAwB,EAAAzD,YAAA4mB,EAGAkQ,GAAA70B,GAuBA,OAtBAwB,EAAA4T,EAAApV,EAAAoV,OAEAwQ,GACA5lB,EAAAwR,GAAAxR,EAAA3E,EAAAspB,EAAAe,MAGAlkB,EAAAnG,EAAAmtB,IACAhnB,EAAAgQ,EAAA,MACWxR,EAAA3E,EAAAspB,EAAAc,MAGXjkB,EAAAnG,EAAA,EACAmG,EAAAgQ,GAAA,KAEAhQ,EAAAnG,EAAA2E,EAAA3E,EACAmG,EAAAgQ,EAAAxR,EAAAwR,EAAAlR,UAGAkB,EAAAnG,EAAA2E,EAAA3E,EACAmG,EAAAgQ,EAAAxR,EAAAwR,EAAAxR,EAAAwR,EAAAlR,QAAAN,EAAAwR,IAQA,cAFAgC,SAAAxT,GAEA,CACA,OAAAA,EAIA,OAHAwB,EAAA4T,EAAA,EAAApV,EAAA,OACAwB,EAAAnG,EAAA,OACAmG,EAAAgQ,GAAA,IAYA,GARAxR,EAAA,GACAA,KACAwB,EAAA4T,GAAA,GAEA5T,EAAA4T,EAAA,EAIApV,WAAA,KACA,IAAA3E,EAAA,EAAAuD,EAAAoB,EAA4BpB,GAAA,GAASA,GAAA,GAAAvD,IAkBrC,YAhBAuqB,EACAvqB,EAAAspB,EAAAe,MACAlkB,EAAAnG,EAAAmtB,IACAhnB,EAAAgQ,EAAA,MACanW,EAAAspB,EAAAc,MACbjkB,EAAAnG,EAAA,EACAmG,EAAAgQ,GAAA,KAEAhQ,EAAAnG,IACAmG,EAAAgQ,GAAAxR,KAGAwB,EAAAnG,IACAmG,EAAAgQ,GAAAxR,KAMS,SAAAA,GAAA,GACTA,IAAAwB,EAAA4T,EAAAoT,KACAhnB,EAAAnG,EAAAmtB,SACAhnB,EAAAgQ,EAAA,OAIAiiB,EAAAjyB,EAAAxB,EAAAyX,YAEO,cAAAjE,EACP,MAAA0N,MAAA4E,EAAA9lB,GAaA,OATA,MAAApB,EAAAoB,EAAA6zB,WAAA,KACA7zB,IAAAM,MAAA,GACAkB,EAAA4T,GAAA,IAGA,KAAAxW,IAAAoB,IAAAM,MAAA,IACAkB,EAAA4T,EAAA,GAGAsR,EAAAuN,KAAAj0B,GAAAyzB,EAAAjyB,EAAAxB,GAAA8zB,EAAAtyB,EAAAxB,GA4DA,GAzDA2kB,EAAAhkB,UAAAwB,EAEAwiB,EAAAyQ,SAAA,EACAzQ,EAAA0Q,WAAA,EACA1Q,EAAAxN,WAAA,EACAwN,EAAA2Q,YAAA,EACA3Q,EAAA4Q,cAAA,EACA5Q,EAAA6Q,gBAAA,EACA7Q,EAAA8Q,gBAAA,EACA9Q,EAAA+Q,gBAAA,EACA/Q,EAAAgR,iBAAA,EACAhR,EAAAiR,OAAA,EAEAjR,EAAA2P,OAAA3P,EAAAtqB,IAAAi6B,GACA3P,EAAAwQ,QACAxQ,EAAA+B,UAAAmO,GAEAlQ,EAAAwD,OACAxD,EAAAsH,QACAtH,EAAA4H,SACA5H,EAAAmK,OACAnK,EAAA0H,QACA1H,EAAAgI,SACAhI,EAAAsI,QACAtI,EAAAkI,SACAlI,EAAA0P,SACA1P,EAAAqF,QACArF,EAAA1N,QACA0N,EAAA2D,SACA3D,EAAAuE,OACAvE,EAAAwG,QACAxG,EAAA5N,OACA4N,EAAAiK,OACAjK,EAAAyB,SACAzB,EAAAiQ,SACAjQ,EAAA8H,MACA9H,EAAA3c,OACA2c,EAAAoQ,SACApQ,EAAAmQ,QACAnQ,EAAAlV,OACAkV,EAAAnV,OACAmV,EAAA+J,OACA/J,EAAA3N,OACA2N,EAAA2B,OACA3B,EAAAqQ,UACArQ,EAAAjK,SACAiK,EAAA2N,QACA3N,EAAAuK,OACAvK,EAAA6G,QACA7G,EAAA8G,QACA9G,EAAA0J,OACA1J,EAAAyO,OACAzO,EAAA2K,OACA3K,EAAAoH,QACApH,EAAAqM,cAEA,IAAApjB,UACAA,IACA,IAAAA,EAAA4mB,SAEA,IADAC,GAAA,8EACA71B,EAAA,EAAmBA,EAAA61B,EAAAn1B,QAAesO,EAAArK,eAAAmQ,EAAA+gB,EAAA71B,QAAAgP,EAAA8F,GAAAvT,KAAAuT,IAMlC,OAFAiR,EAAA2P,OAAA1mB,GAEA+W,EAsbAwQ,CAAAhQ,IACAxkB,UAAA5C,YAAA4mB,EACAA,EAAA,QAAAA,YAGAM,EAAA,IAAAN,EAAAM,GACAC,EAAA,IAAAP,EAAAO,QAUKrrB,KAFD4qB,EAAA,WACJ,OAAAE,GACK9oB,KAAAxC,EAAAE,EAAAF,EAAAD,QAAAC,QAAAorB,GA5yJJ,2BCAD,IAAAoR,EAAWt8B,EAAQ,QACnBH,EAAAC,QAAA,SAAAy8B,EAAAC,EAAAzS,GACA,QAAApJ,KAAA6b,EACAzS,GAAAwS,EAAA5b,GAAA4b,EAAA5b,GAAA6b,EAAA7b,GACA2b,EAAAC,EAAA5b,EAAA6b,EAAA7b,IACG,OAAA4b","file":"static/js/0.7b818b0d7bed2d7933b9.js","sourcesContent":["module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/promise.js\n// module id = //Fk\n// module chunks = 0","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-instance.js\n// module id = 2KxR\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 3fs2\n// module chunks = 0","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_microtask.js\n// module id = 82Mu\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.promise.js\n// module id = CXw9\n// module chunks = 0","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.finally.js\n// module id = EqBC\n// module chunks = 0","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_task.js\n// module id = L42u\n// module chunks = 0","\n\nfunction castTimeStamp(timestamp){\n  const date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n  const Y = date.getFullYear() + '-';\n  const M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n  const D = (date.getDate()  < 10 ? '0' + date.getDate() : date.getDate())  + ' ';\n  const h = (date.getHours()  < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n  const m = (date.getMinutes()  < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n  const s = (date.getSeconds()  < 10 ? '0' + date.getSeconds() : date.getSeconds());\n  return Y+M+D+h+m+s;\n}\nfunction castTimeStamp2Time(timestamp){\n  const date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n  const h = (date.getHours()  < 10 ? '0' + date.getHours() : date.getHours()) + ':';\n  const m = (date.getMinutes()  < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\n  const s = (date.getSeconds()  < 10 ? '0' + date.getSeconds() : date.getSeconds());\n  return h+m+s;\n}\nexport {castTimeStamp,castTimeStamp2Time}\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/utils.js","<template>\n  <div class=\"height100\">\n\n    <div>\n      <el-dialog title=\"登录\" :visible.sync=\"showLoginDialogForm\">\n        <el-form :model=\"loginForm\">\n          <el-form-item label=\"用户名\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"loginForm.username\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"密码\" :label-width=\"formLabelWidth\">\n            <el-input v-model=\"loginForm.password\" autocomplete=\"off\"></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"showLoginDialogForm = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitLoginForm()\">确 定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n\n    <el-row :gutter=\"5\">\n      <el-col :span=\"4\">\n        <el-card class=\"box-card\" shadow=\"never\" style=\"margin-bottom: 400px;\">\n          <div slot=\"header\" class=\"clearfix\" style=\"float: left\">市场</div>\n          <el-table\n            :data=\"tickerList\"\n            :cell-style=\"tickerListStyle\"\n            style=\"width: 100%\">\n            <el-table-column\n              prop=\"symbol\"\n              width='100'\n              label=\"交易对\"\n            >\n            </el-table-column>\n            <el-table-column\n              prop=\"last_price\"\n              width='100'\n              label=\"价格\"\n            >\n            </el-table-column>\n            <el-table-column\n              prop=\"price_range\"\n              width='90'\n              label=\"涨跌幅\">\n              <template slot-scope=\"scope\">\n                  {{ scope.row.price_range }}%\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n        <el-card class=\"box-card\" shadow=\"never\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span style=\"float: left;\">资产</span>\n          </div>\n          <el-table\n            :data=\"asset_data\"\n            style=\"width: 100%\">\n            <el-table-column\n              prop=\"coin_name\"\n              label=\"币种\">\n            </el-table-column>\n            <el-table-column\n              prop=\"available_qty\"\n              label=\"可用\">\n            </el-table-column>\n            <el-table-column\n              prop=\"frozen_qty\"\n              label=\"冻结\">\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card shadow=\"never\">\n          <div className=\"Echarts\">\n            <el-row>\n              <el-radio-group  v-model=\"kline_type\" text-color=\"#F2F2F2\" @input=\"reload\">\n                <el-radio-button label=\"1分钟\"></el-radio-button>\n                <el-radio-button label=\"5分钟\"></el-radio-button>\n                <el-radio-button label=\"10分钟\"></el-radio-button>\n                <el-radio-button label=\"15分钟\"></el-radio-button>\n                <el-radio-button label=\"30分钟\"></el-radio-button>\n                <el-radio-button label=\"1小时\"></el-radio-button>\n                <el-radio-button label=\"4小时\"></el-radio-button>\n                <el-radio-button label=\"1天\"></el-radio-button>\n                <el-radio-button label=\"1周\"></el-radio-button>\n                <el-radio-button label=\"1月\"></el-radio-button>\n              </el-radio-group>\n            </el-row>\n            <div id=\"kline\" style=\"width: 100%;height:600px;\"></div>\n          </div>\n        </el-card>\n        <el-card class=\"box-card\" shadow=\"never\">\n          <div style=\"height: 200px;\">\n            <el-tabs   v-model=\"currentEntrustForm\" @tab-click=\"switchEntrustForm\">\n              <el-tab-pane label=\"限价委托\" name=\"lo\">\n                <div>\n                  <el-row>\n                    <el-col :span=\"12\">\n                      <el-form label-width=\"80px\" ref=\"loBuyForm\"  :model=\"loBuyForm\">\n                        <el-form-item prop=\"price\">\n                          <el-input placeholder=\"价格\" v-model=\"loBuyForm.price\"></el-input>\n                        </el-form-item>\n                        <el-form-item prop=\"qty\">\n                          <el-input placeholder=\"数量\"   v-model=\"loBuyForm.qty\"></el-input>\n                        </el-form-item>\n                        <el-form-item>\n                          <el-button @click=\"buyLoOrderOrLogin('loBuyForm')\" type=\"primary\" style=\"width: 80%;\">\n                            {{ loBuyButtonName }}\n                          </el-button>\n                        </el-form-item>\n                      </el-form>\n                    </el-col>\n                    <el-col :span=\"12\">\n                      <el-form ref=\"loSellForm\" label-width=\"80px\" :model=\"loSellForm\">\n                        <el-form-item prop=\"price\">\n                          <el-input placeholder=\"价格\" v-model=\"loSellForm.price\"></el-input>\n                        </el-form-item>\n                        <el-form-item prop=\"qty\">\n                          <el-input placeholder=\"数量\" v-model=\"loSellForm.qty\"></el-input>\n                        </el-form-item>\n                        <el-button @click=\"sellLoOrderOrLogin('loSellForm')\" round type=\"warning\" style=\"width: 80%;\">\n                          {{ loSellButtonName }}\n                        </el-button>\n                      </el-form>\n                    </el-col>\n                  </el-row>\n                </div>\n              </el-tab-pane>\n              <el-tab-pane label=\"市价委托\" name=\"mo\">\n                <div>\n                  <el-row>\n                    <el-col :span=\"12\">\n                      <el-form  ref=\"moBuyForm\" label-width=\"80px\" :model=\"moBuyForm\">\n                        <el-form-item  prop=\"amount\">\n                          <el-input placeholder=\"金额\" v-model=\"moBuyForm.amount\"></el-input>\n                        </el-form-item>\n                        <el-button round type=\"primary\" style=\"width: 80%;\"  @click=\"buyMoOrderOrLogin('moBuyForm')\" >买入</el-button>\n                      </el-form>\n                    </el-col>\n                    <el-col :span=\"12\">\n                      <el-form label-width=\"80px\"  ref=\"moSellForm\"  :model=\"moSellForm\">\n                        <el-form-item prop=\"qty\" >\n                          <el-input placeholder=\"数量\" v-model=\"moSellForm.qty\"></el-input>\n                        </el-form-item>\n                        <el-button round type=\"warning\" style=\"width: 80%;\" @click=\"sellMoOrderOrLogin('moSellForm')\">卖出</el-button>\n                      </el-form>\n                    </el-col>\n                  </el-row>\n                </div>\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-card class=\"box-card\" shadow=\"never\">\n\n          <div slot=\"header\" class=\"clearfix\">\n            <span>订单簿</span>\n          </div>\n          <div class=\"askListTable\">\n            <el-table\n              :data=\"askList\"\n              :cell-style=\"askListCell\"\n              :row-style=\"askListRow\"\n            >\n              <el-table-column\n                prop=\"price\"\n                width='100'\n                label=\"价格(usdt)\"\n              >\n              </el-table-column>\n              <el-table-column\n                prop=\"qty\"\n                label=\"数量\"\n                width='90'>\n              </el-table-column>\n              <el-table-column\n                prop=\"amount\"\n                min-width=\"100\"\n                label=\"金额\">\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n        <el-card class=\"box-card\" shadow=\"never\">\n          <div>price {{ last_price }}</div>\n        </el-card>\n        <el-card class=\"box-card\" shadow=\"never\">\n          <el-table\n            :data=\"bidList\"\n            :cell-style=\"bidListCell\"\n            :row-style=\"bidListRow\"\n          >\n            <el-table-column\n              prop=\"price\"\n              width='100'\n              label=\"价格(usdt)\"\n            >\n            </el-table-column>\n            <el-table-column\n              prop=\"qty\"\n              label=\"数量\"\n              width='90'>\n            </el-table-column>\n            <el-table-column\n              prop=\"amount\"\n              width='123'\n              label=\"金额\">\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-card class=\"box-card\" shadow=\"never\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span>实时成交</span>\n          </div>\n          <div class=\"filledOrder\">\n            <el-table\n              :data=\"filledOrderList\"\n              :row-class-name=\"filledOrderListClassName\"\n              style=\"width: 100%\"\n              :cell-style=\"filledOrderCell\"\n            >\n              <el-table-column\n                prop=\"price\"\n                label=\"价格(usdt)\">\n              </el-table-column>\n              <el-table-column\n                prop=\"qty\"\n                label=\"数量(btc)\">\n              </el-table-column>\n              <el-table-column\n                prop=\"filled_time\"\n                label=\"时间\">\n              </el-table-column>\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row>\n      <el-col :span=\"24\">\n        <el-tabs v-model=\"entrustCard\" @tab-click=\"switchOrderListCard\">\n          <el-tab-pane label=\"当前委托\" name=\"current\">\n            <el-table\n              :data=\"currentOrderList\"\n              style=\"width: 100%\">\n              <el-table-column\n                prop=\"date\"\n                label=\"时间\"\n                width=\"150\">\n              </el-table-column>\n              <el-table-column\n                prop=\"symbol\"\n                label=\"交易对\"\n                width=\"180\">\n              </el-table-column>\n              <el-table-column\n                prop=\"side\"\n                label=\"方向\">\n              </el-table-column>\n              <el-table-column\n                prop=price\n                label=\"委托价\"\n                width=\"180\">\n              </el-table-column>\n              <el-table-column\n                prop=\"qty\"\n                label=\"委托量\"\n                width=\"180\">\n              </el-table-column>\n              <el-table-column\n                prop=\"amount\"\n                label=\"委托总额\">\n              </el-table-column>\n              <el-table-column\n                prop=\"filledUnfilled\"\n                label=\"已成交数量/未成交数量\">\n              </el-table-column>\n              <el-table-column\n                prop=\"status\"\n                label=\"操作\"\n\n              >\n                <template slot-scope=\"scope\">\n                  <el-button\n                    size=\"mini\"\n                    type=\"danger\"\n                    @click=\"cancelOrder(scope.$index, scope.row)\">取消订单\n                  </el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-tab-pane>\n          <el-tab-pane label=\"历史委托\" name=\"history\">\n            <el-table\n              :data=\"historyOrderList\"\n              style=\"width: 100%\">\n              <el-table-column\n                prop=\"date\"\n                label=\"时间\"\n                width=\"180\">\n              </el-table-column>\n              <el-table-column\n                prop=\"symbol\"\n                label=\"交易对\"\n                width=\"180\">\n              </el-table-column>\n              <el-table-column\n                prop=\"side\"\n                label=\"方向\">\n              </el-table-column>\n              <el-table-column\n                prop=\"order_type\"\n                label=\"类型\">\n              </el-table-column>\n              <el-table-column\n                prop=price\n                label=\"委托价\"\n                width=\"180\">\n              </el-table-column>\n              <el-table-column\n                prop=\"qty\"\n                label=\"委托量\"\n                width=\"180\">\n              </el-table-column>\n              <el-table-column\n                prop=\"amount\"\n                label=\"委托总额\">\n              </el-table-column>\n              <el-table-column\n                prop=\"filled_qty\"\n                label=\"已成交数量\">\n              </el-table-column>\n              <el-table-column\n                prop=\"filled_avg_price\"\n                label=\"成交均价\">\n              </el-table-column>\n              <el-table-column\n                prop=\"filled_amount\"\n                label=\"成交额\">\n              </el-table-column>\n              <el-table-column\n                prop=\"status\"\n                label=\"状态\">\n              </el-table-column>\n              <el-table-column\n                prop=\"operate\"\n                label=\"操作\">\n              </el-table-column>\n            </el-table>\n          </el-tab-pane>\n        </el-tabs>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {castTimeStamp, castTimeStamp2Time} from \"../../assets/js/utils\";\nimport {Decimal} from 'decimal.js'\nimport * as echarts from \"echarts\";\n\nexport default {\n  data() {\n    return {\n      currentEntrustForm: 'lo',\n      loBuyButtonName: '登录',\n      loSellButtonName: '登录',\n      isLogin: false,\n      showLoginDialogForm: false,\n      formLabelWidth: '120px',\n      asset_data: [],\n      last_price: '',\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      entrustCard: 'current',\n      loBuyForm: {\n        price: '',\n        qty: '',\n        side: 1,\n        symbol_name: 'BTC_USDT',\n        symbol_id: 1,\n        order_type: 2,\n        amount: ''\n      },\n      loSellForm: {\n        price: '',\n        qty: '',\n        side: 2,\n        symbol_name: 'BTC_USDT',\n        symbol_id: 1,\n        order_type: 2,\n        amount: ''\n      },\n      moBuyForm: {\n        price: '0',\n        qty: '0',\n        side: 1,\n        symbol_name: 'BTC_USDT',\n        symbol_id: 1,\n        order_type: 1,\n        amount: ''\n      },\n      moSellForm: {\n        price: '0',\n        qty: '',\n        side: 2,\n        symbol_name: 'BTC_USDT',\n        symbol_id: 1,\n        order_type: 1,\n        amount: '0'\n      },\n      //深度\n      askList: [],\n      bidList: [],\n      askMaxQty: new Decimal(0),\n      bidMaxQty: new Decimal(0),\n      currentVersion: 0,\n\n      currentOrderList: [],\n      historyOrderList:[],\n      filledOrderList: [],\n      tickerList: [],\n      WebSocketConn: WebSocket,\n      latest_kline:{},\n      kline_type: '1分钟',\n\n      kline_data: [],\n      echartDom:{},\n      klineData:[],\n      klineOption:{},\n\n    }\n  },\n\n  methods: {\n    switchEntrustForm(tab, event) {\n      console.log(tab, event);\n    },\n    switchOrderListCard(tab, event) {\n      if (this.entrustCard === 'history') {\n        this.$myHttp.post(\"/order/v1/get_order_list\", {'symbol_name': 'BTC_USDT', 'status_list': [3, 4]}).then(resp => {\n          if (resp.status !== 200) {\n            this.$message.error('内部错误')\n            return\n          }\n          if (resp.data.code !== 0) {\n            this.$message.error(resp.data.msg)\n            localStorage.removeItem('gexToken')\n            return\n          }\n          resp.data.data.order_list.forEach(el => {\n            el.side = el.side ===1 ? '买' :'卖'\n            el.symbol = el.symbol_name\n            el.date = castTimeStamp(el.created_at)\n            el.order_type= el.order_type ===1?'市价单':'限价单'\n            el.status= el.status ===3?'全部成交':'订单取消'\n          })\n          this.historyOrderList = resp.data.data.order_list\n        })\n      }else{\n         this.getCurrentUserOrder()\n      }\n    },\n    validateToken() {\n      return localStorage.getItem('gexToken')\n    },\n    submitLoginForm() {\n      this.$myHttp.post(\"/account/v1/login\", this.loginForm).then(loginResp => {\n        if (loginResp.status !== 200) {\n          this.$message.error('内部错误')\n        }\n        if (loginResp.data.code !== 0) {\n          this.$message.error(loginResp.data.msg)\n        }\n        this.$message.success('登录成功!')\n        localStorage.setItem('gexToken', loginResp.data.data.token)\n        this.showLoginDialogForm = false\n      }).catch(el=>{\n        console.log(el)\n      })\n    },\n    getUserAsset() {\n      this.$myHttp.post(\"/account/v1/get_user_asset_list\").then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        this.asset_data = resp.data.data.asset_list\n      })\n    },\n    //盘口深度\n    getDepthList() {\n      this.$myHttp.post(\"/quotes/v1/get_depth_list\",\n        {'symbol': 'BTC_USDT', 'level': 200}).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        this.askList = resp.data.data.asks\n        this.bidList = resp.data.data.bids\n        this.currentVersion = resp.data.version\n        this.askList.forEach((data) => {\n          let q = new Decimal(data.qty)\n          if (q.gt(this.askMaxQty)) {\n            this.askMaxQty = q\n          }\n        })\n        this.bidList.forEach((data) => {\n          let q = new Decimal(data.qty)\n          if (q.gt(this.bidMaxQty)) {\n            this.bidMaxQty = q\n          }\n        })\n      })\n    },\n    //获取实时成交\n    getTickList() {\n      this.$myHttp.post(\"/quotes/v1/get_tick_list\",\n        {'symbol': 'BTC_USDT', 'limit': 20}).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n\n        resp.data.data.tick_list.forEach(data => {\n\n          data.filled_time = castTimeStamp2Time(data.timestamp)\n\n        })\n        this.filledOrderList = resp.data.data.tick_list\n      })\n    },\n    filledOrderListClassName({row, rowIndex}) {\n      if (row.taker_is_buyer) {\n        return 'filledOrderBuy'\n      }\n      return 'filledOrderSell'\n    },\n    //下单或登录\n    buyLoOrderOrLogin(formName) {\n      //没有登录则触发登录\n      if (!this.isLogin) {\n        this.showLoginDialogForm = true\n        return\n      }\n      //下单\n      this.$myHttp.post(\"/order/v1/create_order\", this.loBuyForm).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        this.$message.success('下单成功')\n      })\n      this.$refs[formName].resetFields()\n\n    },\n    sellLoOrderOrLogin(formName) {\n      //没有登录则触发登录\n      if (!this.isLogin) {\n        this.showLoginDialogForm = true\n        return\n      }\n      //下单\n      this.$myHttp.post(\"/order/v1/create_order\", this.loSellForm).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        this.$message.success('下单成功')\n      })\n      this.$refs[formName].resetFields();\n\n    },\n    buyMoOrderOrLogin(formName) {\n      //没有登录则触发登录\n      if (!this.isLogin) {\n        this.showLoginDialogForm = true\n        return\n      }\n      //下单\n      this.$myHttp.post(\"/order/v1/create_order\", this.moBuyForm).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        this.$message.success('下单成功')\n      })\n      this.$refs[formName].resetFields();\n\n    },\n    sellMoOrderOrLogin(formName) {\n      //没有登录则触发登录\n      if (!this.isLogin) {\n        this.showLoginDialogForm = true\n        return\n      }\n      //下单\n      this.$myHttp.post(\"/order/v1/create_order\", this.moSellForm).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        this.$message.success('下单成功')\n      })\n      this.$refs[formName].resetFields();\n\n    },\n    //获取用户订单\n    getCurrentUserOrder() {\n      this.$myHttp.post(\"/order/v1/get_order_list\", {'symbol_name': 'BTC_USDT', 'status_list': [1, 2]}).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          localStorage.removeItem('gexToken')\n          return\n        }\n        resp.data.data.order_list.forEach(el => {\n          el.side = el.side ===1 ? '买' :'卖'\n          el.symbol = el.symbol_name\n          el.date = castTimeStamp(el.created_at)\n          el.filledUnfilled = el.filled_qty + '/' + el.qty\n        })\n        this.currentOrderList = resp.data.data.order_list\n      })\n    },\n    reload(){\n      this.getKlineData().then(()=>{\n        let klineType = ''\n        switch (this.kline_type){\n          case '1分钟':\n\n            klineType ='Min1'\n            break\n          case '5分钟':\n\n            klineType ='Min5'\n            break\n          case '10分钟':\n\n            klineType ='Min10'\n            break\n          case '15分钟':\n\n            klineType ='Min15'\n            break\n          case '30分钟':\n\n            klineType ='Min30'\n            break\n          case '1小时':\n\n            klineType ='Hour1'\n            break\n          case '4小时':\n\n            klineType ='Hour4'\n            break\n          case '1天':\n\n            klineType ='Day1'\n            break\n          case '1周':\n\n            klineType ='Week1'\n            break\n          case '1月':\n            klineType ='Month1'\n\n            break\n        }\n        let wdData =   {'code': 1, 'topic': 'kline@BTC_USDT@'+klineType}\n        //this.webSocketConn.send(JSON.stringify(wdData))\n        this.myEcharts()\n      })\n    },\n    splitData(rawData) {\n      let categoryData = [];\n      let values = [];\n      let volumes = [];\n      for (let i = 0; i < rawData.length; i++) {\n        categoryData.push(rawData[i].splice(0, 1)[0]);\n        values.push(rawData[i]);\n        volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]);\n      }\n      return {\n        categoryData: categoryData,\n        values: values,\n        volumes: volumes\n      };\n    },\n    myEcharts() {\n      const chartDom = document.getElementById('kline');\n      this.echartDom = echarts.init(chartDom);\n      let data = this.splitData(this.kline_data)\n      console.log(data)\n      this.klineOption = {\n          animation: false,\n          legend: {\n            bottom: 10,\n            left: 'center',\n            data: ['Dow-Jones index']\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'cross'\n            },\n            borderWidth: 1,\n            borderColor: '#ccc',\n            padding: 10,\n            textStyle: {\n              color: '#000'\n            },\n            position: function (pos, params, el, elRect, size) {\n              const obj = {\n                top: 10\n              };\n              obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 30;\n              return obj;\n            }\n            // extraCssText: 'width: 170px'\n          },\n          axisPointer: {\n            link: [\n              {\n                xAxisIndex: 'all'\n              }\n            ],\n            label: {\n              backgroundColor: '#777'\n            }\n          },\n          toolbox: {\n            feature: {\n              dataZoom: {\n                yAxisIndex: false\n              },\n              brush: {\n                type: ['lineX', 'clear']\n              }\n            }\n          },\n          brush: {\n            xAxisIndex: 'all',\n            brushLink: 'all',\n            outOfBrush: {\n              colorAlpha: 0.1\n            }\n          },\n          visualMap: {\n            show: false,\n            seriesIndex: 5,\n            dimension: 2,\n            pieces: [\n              {\n                value: 1,\n                color: '#ec0000'\n              },\n              {\n                value: -1,\n                color: '#00da3c'\n              }\n            ]\n          },\n          grid: [\n            {\n              left: '10%',\n              right: '8%',\n              height: '50%'\n            },\n            {\n              left: '10%',\n              right: '8%',\n              top: '63%',\n              height: '16%'\n            }\n          ],\n          xAxis: [\n            {\n              type: 'category',\n              data: data.categoryData,\n              boundaryGap: false,\n              axisLine: { onZero: false },\n              splitLine: { show: false },\n              min: 'dataMin',\n              max: 'dataMax',\n              axisPointer: {\n                z: 100\n              }\n            },\n            {\n              type: 'category',\n              gridIndex: 1,\n              data: data.categoryData,\n              boundaryGap: false,\n              axisLine: { onZero: false },\n              axisTick: { show: false },\n              splitLine: { show: false },\n              axisLabel: { show: false },\n              min: 'dataMin',\n              max: 'dataMax'\n            }\n          ],\n          yAxis: [\n            {\n              scale: true,\n              splitArea: {\n                show: true\n              }\n            },\n            {\n              scale: true,\n              gridIndex: 1,\n              splitNumber: 2,\n              axisLabel: { show: false },\n              axisLine: { show: false },\n              axisTick: { show: false },\n              splitLine: { show: false }\n            }\n          ],\n          dataZoom: [\n            {\n              type: 'inside',\n              xAxisIndex: [0, 1],\n              start: 90,\n              end: 100\n            },\n            {\n              show: true,\n              xAxisIndex: [0, 1],\n              type: 'slider',\n              top: '85%',\n              start: 98,\n              end: 100\n            }\n          ],\n          series: [\n            {\n              name: 'Dow-Jones index',\n              type: 'candlestick',\n              data: data.values,\n              itemStyle: {\n                color: '#00da3c',\n                color0: '#ec0000',\n                borderColor: undefined,\n                borderColor0: undefined\n              }\n            },\n            {\n              name: 'Volume',\n              type: 'bar',\n              xAxisIndex: 1,\n              yAxisIndex: 1,\n              data: data.volumes\n            }\n          ]\n        }\n      this.echartDom.setOption(this.klineOption);\n\n    },\n    async getKlineData() {\n      let st = 0\n      let kline_type=0\n      switch (this.kline_type){\n        case '1分钟':\n          st=1\n          kline_type ='Min1'\n          break\n        case '5分钟':\n          st=2\n          kline_type ='Min5'\n          break\n        case '10分钟':\n          st=3\n          kline_type ='Min10'\n          break\n        case '15分钟':\n          st=4\n          kline_type ='Min15'\n          break\n        case '30分钟':\n          st=5\n          kline_type ='Min30'\n          break\n        case '1小时':\n          st=6\n          kline_type ='Hour1'\n          break\n        case '4小时':\n          st=7\n          kline_type ='Hour4'\n          break\n        case '1天':\n          st=8\n          kline_type ='Day1'\n          break\n        case '1周':\n          st=9\n          kline_type ='Week1'\n          break\n        case '1月':\n          kline_type ='Month1'\n          st=10\n          break\n      }\n      this.kline_data=[]\n      await this.$myHttp.post(\"/quotes/v1/get_kline_list\",\n        {\n          \"start_time\": 0,\n          \"end_time\": 1479374820143,\n          \"kline_type\": st,\n          \"symbol\": \"BTC_USDT\"\n        }).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        resp.data.data.kine_list.forEach(\n          d => {\n            let item = [castTimeStamp(d.start_time),d.open,d.close,d.low,d.high,d.volume]\n            this.kline_data.push(item)\n          })\n      })\n\n    },\n    getTicker() {\n      this.$myHttp.post(\"/quotes/v1/get_ticker_list\", {'symbol': 'BTC_USDT'}).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n          return\n        }\n        this.last_price = resp.data.data.ticker_list[0].last_price\n        this.tickerList = resp.data.data.ticker_list\n\n      })\n    },\n    cancelOrder(index, row) {\n      this.$myHttp.post(\"/order/v1/cancel_order\", {'symbol_name': 'BTC_USDT', 'id': row.id}).then(resp => {\n        if (resp.status !== 200) {\n          this.$message.error('内部错误')\n          return\n        }\n        if (resp.data.code !== 0) {\n          this.$message.error(resp.data.msg)\n        }\n      })\n    },\n    async initWebsocketConn() {\n      //等待 onopen被触发 返回promise resolve\n      await this.connect()\n      const subs = [\n        {'code': 1, 'topic': 'kline@BTC_USDT@Min1'},\n        {'code': 1, 'topic': 'tick@BTC_USDT'},\n        {'code': 1, 'topic': 'depth@BTC_USDT'},\n        {'code': 1, 'topic': 'ticker@BTC_USDT'},\n      ]\n      if (this.isLogin) {\n        let loginReq = {'code': 3, 'data': localStorage.getItem('gexToken')}\n        this.webSocketConn.send(JSON.stringify(loginReq))\n        let orderReq = {'code': 1, 'topic': 'order@BTC_USDT'}\n        subs.push(orderReq)\n      }\n      const tickTopic = 'tick'\n      const tickerTopic = 'ticker'\n      const depthTopic = 'depth'\n      const klineTopic = 'kline'\n      const orderTopic = 'order'\n      subs.forEach((el) => {\n        this.webSocketConn.send(JSON.stringify(el))\n      })\n      this.webSocketConn.onmessage = (data) => {\n        let resp = JSON.parse(data.data)\n\n        if (resp.code >= 20000) {\n          return\n        }\n        let prefix = resp.t.split(\"@\")[0]\n        switch (prefix) {\n          case tickerTopic:\n            console.log(resp)\n            this.tickerList.forEach(el=>{\n              if (el.symbol === resp.t.split(\"@\")[1]) {\n                el.last_price = resp.p.lp\n                el.price_range = resp.p.r\n                this.last_price= resp.p.lp\n              }\n            })\n            break\n          case depthTopic:\n            let newAsks = []\n            const decimalZero = new Decimal(0)\n            resp.p.a.forEach((d) => {\n              let existed = false\n              let pos = {}\n              //在卖盘中查找\n              this.askList.forEach((el) => {\n                if (d[0] === el.price) {\n                  el.qty = d[1]\n                  el.amount = d[2]\n                  existed = true\n                }\n              })\n              if (new Decimal(d[1]).eq(decimalZero)) {\n                return\n              }\n              pos = {'price': d[0], 'qty': d[1], 'amount': d[2]}\n              if (!existed) {\n                newAsks.push(pos)\n              }\n            })\n            this.askList.forEach(d => {\n              if (new Decimal(d.qty).eq(decimalZero)) {\n                return\n              }\n              newAsks.push(d)\n            })\n            //更新最大值\n            this.askMaxQty = new Decimal(0)\n            newAsks.forEach(el => {\n              let qty = new Decimal(el.qty)\n              if (qty.gt(this.askMaxQty)) {\n                this.askMaxQty = qty\n              }\n\n            })\n            this.askList = newAsks.sort((v1, v2) => {\n              const v1Price = new Decimal(v1.price)\n              const v2Price = new Decimal(v2.price)\n              return -v1Price.comparedTo(v2Price)\n            })\n            let newBids = []\n            resp.p.b.forEach((d) => {\n              let existed = false\n              let pos = {}\n              //在买盘中查找\n              this.bidList.forEach((el) => {\n                //有相同的价格则修改数量和金额\n                if (d[0] === el.price) {\n                  el.qty = d[1]\n                  el.amount = d[2]\n                  existed = true\n                }\n              })\n              //数量为零不存\n              if (new Decimal(d[1]).eq(decimalZero)) {\n                return\n              }\n              pos = {'price': d[0], 'qty': d[1], 'amount': d[2]}\n              //如果不存在则存起来\n              if (!existed) {\n                newBids.push(pos)\n              }\n            })\n            this.bidList.forEach(d => {\n              if (new Decimal(d.qty).eq(decimalZero)) {\n                return\n              }\n              newBids.push(d)\n            })\n            //更新最大\n            this.bidMaxQty = new Decimal(0)\n            newBids.forEach(el => {\n              let qty = new Decimal(el.qty)\n              if (qty.gt(this.bidMaxQty)) {\n                this.bidMaxQty = qty\n              }\n\n            })\n\n            this.bidList = newBids.sort((v1, v2) => {\n              const v1Price = new Decimal(v1.price)\n              const v2Price = new Decimal(v2.price)\n              return -v1Price.comparedTo(v2Price)\n            })\n            //  console.log(this.bidList)\n            break\n          case tickTopic:\n            let obj = {\n              'price': resp.p.p,\n              'qty': resp.p.q,\n              'filled_time': castTimeStamp2Time(resp.p.ts),\n              'taker_is_buyer': resp.p.tib\n            }\n            this.filledOrderList.unshift(obj)\n            this.filledOrderList.pop()\n            break\n          case klineTopic:\n            /*{\"t\":\"kline@BTC_USDT@Min1\",\"p\":{\"kt\":1,\"o\":\"3\",\"h\":\"3\",\"l\":\"3\",\"c\":\"3\",\"v\":\"0\",\"t\":\"0\",\"st\":1694953020,\"et\":1694953080,\"r\":\"0.000\",\"s\":\"BTC_USDT\"}}*/\n            let klineCycle =''\n            switch (this.kline_type){\n              case '1分钟':\n                klineCycle ='Min1'\n                break\n              case '5分钟':\n                klineCycle ='Min5'\n                break\n              case '10分钟':\n                klineCycle ='Min10'\n                break\n              case '15分钟':\n                klineCycle ='Min15'\n                break\n              case '30分钟':\n                klineCycle ='Min30'\n                break\n              case '1小时':\n                klineCycle ='Hour1'\n                break\n              case '4小时':\n                klineCycle ='Hour4'\n                break\n              case '1天':\n                klineCycle ='Day1'\n                break\n              case '1周':\n                klineCycle ='Week1'\n                break\n              case '1月':\n                klineCycle ='Month1'\n                break\n            }\n            if (resp.t.split(\"@\")[2] !== klineCycle) {\n             return\n            }\n            let l = this.klineOption.series[0].data.length\n            let item = [resp.p.o,resp.p.c,resp.p.l,resp.p.h,resp.p.v]\n\n            if (this.klineOption.xAxis[0].data[l - 1] === castTimeStamp(resp.p.st)) {\n              let lastCategory = [l-1,resp.p.v,-1]\n              this.klineOption.series[0].data[l-1]=item\n              this.klineOption.series[1].data[l-1]=lastCategory\n            }else{\n              let lastCategory = [l,resp.p.v,-1]\n              this.klineOption.series[0].data.push(item)\n              this.klineOption.xAxis[0].data.push(castTimeStamp(resp.p.st))\n              this.klineOption.series[1].data.push(lastCategory)\n            }\n            console.log(this.klineOption.series)\n            this.echartDom.setOption(this.klineOption)\n            break\n          case orderTopic:\n            switch (resp.p.s){\n              case 1:\n                let order = {\n                  'id': resp.p.id,\n                  'order_id': resp.p.oi,\n                  'user_id': resp.p.u,\n                  'symbol': resp.p.sn,\n                  'price': resp.p.p,\n                  'qty': resp.p.q,\n                  'amount': resp.p.a,\n                  'side': resp.p.si ===1 ? '买':'卖',\n                  'status': resp.p.s,\n                  'order_type': resp.p.ot,\n                  'filled_qty': resp.p.fq,\n                  'filled_amount': resp.p.fa,\n                  'filled_avg_price': resp.p.fap,\n                  'date': castTimeStamp(resp.p.ca),\n                  'filledUnfilled':resp.p.fq+'/'+resp.p.q,\n                }\n                this.currentOrderList.unshift(order)\n                break\n              case 4:\n                this.currentOrderList = this.currentOrderList.filter(el=>{\n                  return el.id !== resp.p.id;\n                })\n                break\n              case 2:\n                this.currentOrderList.forEach(el=>{\n                  el.filledUnfilled = resp.p.fq+'/'+el.qty\n                })\n                break\n              case 3:\n                this.currentOrderList = this.currentOrderList.filter(el=>{\n                  return el.id !== resp.p.id;\n                })\n            }\n\n\n            if (resp.p.s === 2){\n\n\n            }\n            break\n        }\n\n      }\n    },\n    filledOrderCell({rowIndex, columnIndex, row, column}) {\n      if (row.taker_is_buyer && columnIndex === 0) {\n        return \"color :  #31BD65\";\n      }\n      if (!row.taker_is_buyer && columnIndex === 0) {\n        return \"color : #EB4F70\";\n      }\n\n    },\n    tickerListStyle({rowIndex, columnIndex, row, column}){\n\n      if (columnIndex === 2){\n\n        if (row.price_range < 0) {\n          return \"color : #EB4F70\";\n        }\n\n        if (row.price_range >= 0) {\n          return \"color : #31BD65\";\n        }\n      }\n\n    },\n    askListCell({rowIndex, columnIndex, row, column}) {\n      if (columnIndex === 0) {\n        return `color: #EB4F70;text-align:left;border: none;padding: 0;font-family:\"Hiragino Sans GB\";margin: 5px 0;`\n      }\n      return `text-align:right;border: none;padding: 5px 0;font-size: 13px;font-family:\"Hiragino Sans GB\";margin: 5px 0;`\n    },\n    askListRow({row, rowIndex}) {\n      let qty = new Decimal(row.qty)\n      let sc = qty.div(this.askMaxQty).mul(new Decimal(100)).ceil().toFixed(0, Decimal.ROUND_CEIL)\n      return {'background-image': `linear-gradient(to left,#F1D9DE ` + sc + `%, #FFFFFF ` + sc + `%  )`}\n    },\n\n    bidListCell({rowIndex, columnIndex, row, column}) {\n      if (columnIndex === 0) {\n        return `color: #31BD65;text-align:left;border: none;padding: 0;font-family:\"Hiragino Sans GB\";margin: 5px 0;`\n      }\n      return `text-align:right;border: none;padding: 5px 0;font-size: 13px;font-family:\"Hiragino Sans GB\";margin: 5px 0;`\n    },\n    bidListRow({row, rowIndex}) {\n      console.log(this.bidMaxQty.toString())\n      let qty = new Decimal(row.qty)\n      let sc = qty.div(this.bidMaxQty).mul(new Decimal(100)).ceil().toFixed(0, Decimal.ROUND_CEIL)\n      return {'background-image': `linear-gradient(to left,#F1D9DE ` + sc + `%, #FFFFFF ` + sc + `%  )`}\n    },\n\n    async connect() {\n      await new Promise((resolve, reject) => {\n        this.webSocketConn = new WebSocket(\"ws://api.gex.com/ws\")\n        this.webSocketConn.onopen = () => {\n          console.log(\"connected\")\n          resolve()\n        }\n        this.webSocketConn.onerror = (error) => {\n          reject(error)\n        }\n      })\n\n    },\n\n  },\n\n\n  mounted() {\n    this.isLogin = this.validateToken()\n    if (this.isLogin) {\n      this.loBuyButtonName = '买入'\n      this.loSellButtonName = '卖出'\n      this.getUserAsset()\n      this.getCurrentUserOrder()\n    }\n    this.getDepthList()\n    this.getTickList()\n    this.getTicker()\n    this.initWebsocketConn()\n    this.getKlineData().then(()=>{\n      this.myEcharts()\n    })\n  },\n\n}\n</script>\n\n<style scoped>\nhtml, body {\n  width: 100%;\n  height: 100%;\n}\n\n.filledOrderSell {\n  color: #EB4F70;\n  font-size: 10px;\n  height: 10px;\n}\n\n.filledOrderBuy {\n  line-height: 5px;\n  color: #31BD65;\n  font-family: \"Helvetica Neue\", Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"微软雅黑\", Arial, sans-serif;\n  font-size: 10px;\n\n}\n\n.filledOrder >>> .el-table__row > td {\n  border: none;\n  padding: 5px;\n}\n\n.el-table::before {\n  height: 0;\n}\n\n.height100 {\n  width: 100%;\n  padding: 0;\n  margin: 0;\n}\n\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n\n.clearfix:after {\n  clear: both\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/home/home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"height100\"},[_c('div',[_c('el-dialog',{attrs:{\"title\":\"登录\",\"visible\":_vm.showLoginDialogForm},on:{\"update:visible\":function($event){_vm.showLoginDialogForm=$event}}},[_c('el-form',{attrs:{\"model\":_vm.loginForm}},[_c('el-form-item',{attrs:{\"label\":\"用户名\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.loginForm.username),callback:function ($$v) {_vm.$set(_vm.loginForm, \"username\", $$v)},expression:\"loginForm.username\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"密码\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.loginForm.password),callback:function ($$v) {_vm.$set(_vm.loginForm, \"password\", $$v)},expression:\"loginForm.password\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.showLoginDialogForm = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitLoginForm()}}},[_vm._v(\"确 定\")])],1)],1)],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":5}},[_c('el-col',{attrs:{\"span\":4}},[_c('el-card',{staticClass:\"box-card\",staticStyle:{\"margin-bottom\":\"400px\"},attrs:{\"shadow\":\"never\"}},[_c('div',{staticClass:\"clearfix\",staticStyle:{\"float\":\"left\"},attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"市场\")]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tickerList,\"cell-style\":_vm.tickerListStyle}},[_c('el-table-column',{attrs:{\"prop\":\"symbol\",\"width\":\"100\",\"label\":\"交易对\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"last_price\",\"width\":\"100\",\"label\":\"价格\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"price_range\",\"width\":\"90\",\"label\":\"涨跌幅\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(\"\\n                \"+_vm._s(scope.row.price_range)+\"%\\n            \")]}}])})],1)],1),_vm._v(\" \"),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"never\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',{staticStyle:{\"float\":\"left\"}},[_vm._v(\"资产\")])]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.asset_data}},[_c('el-table-column',{attrs:{\"prop\":\"coin_name\",\"label\":\"币种\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"available_qty\",\"label\":\"可用\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"frozen_qty\",\"label\":\"冻结\"}})],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-card',{attrs:{\"shadow\":\"never\"}},[_c('div',{attrs:{\"className\":\"Echarts\"}},[_c('el-row',[_c('el-radio-group',{attrs:{\"text-color\":\"#F2F2F2\"},on:{\"input\":_vm.reload},model:{value:(_vm.kline_type),callback:function ($$v) {_vm.kline_type=$$v},expression:\"kline_type\"}},[_c('el-radio-button',{attrs:{\"label\":\"1分钟\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"5分钟\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"10分钟\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"15分钟\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"30分钟\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"1小时\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"4小时\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"1天\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"1周\"}}),_vm._v(\" \"),_c('el-radio-button',{attrs:{\"label\":\"1月\"}})],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"600px\"},attrs:{\"id\":\"kline\"}})],1)]),_vm._v(\" \"),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"never\"}},[_c('div',{staticStyle:{\"height\":\"200px\"}},[_c('el-tabs',{on:{\"tab-click\":_vm.switchEntrustForm},model:{value:(_vm.currentEntrustForm),callback:function ($$v) {_vm.currentEntrustForm=$$v},expression:\"currentEntrustForm\"}},[_c('el-tab-pane',{attrs:{\"label\":\"限价委托\",\"name\":\"lo\"}},[_c('div',[_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-form',{ref:\"loBuyForm\",attrs:{\"label-width\":\"80px\",\"model\":_vm.loBuyForm}},[_c('el-form-item',{attrs:{\"prop\":\"price\"}},[_c('el-input',{attrs:{\"placeholder\":\"价格\"},model:{value:(_vm.loBuyForm.price),callback:function ($$v) {_vm.$set(_vm.loBuyForm, \"price\", $$v)},expression:\"loBuyForm.price\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"qty\"}},[_c('el-input',{attrs:{\"placeholder\":\"数量\"},model:{value:(_vm.loBuyForm.qty),callback:function ($$v) {_vm.$set(_vm.loBuyForm, \"qty\", $$v)},expression:\"loBuyForm.qty\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{staticStyle:{\"width\":\"80%\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.buyLoOrderOrLogin('loBuyForm')}}},[_vm._v(\"\\n                          \"+_vm._s(_vm.loBuyButtonName)+\"\\n                        \")])],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-form',{ref:\"loSellForm\",attrs:{\"label-width\":\"80px\",\"model\":_vm.loSellForm}},[_c('el-form-item',{attrs:{\"prop\":\"price\"}},[_c('el-input',{attrs:{\"placeholder\":\"价格\"},model:{value:(_vm.loSellForm.price),callback:function ($$v) {_vm.$set(_vm.loSellForm, \"price\", $$v)},expression:\"loSellForm.price\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"qty\"}},[_c('el-input',{attrs:{\"placeholder\":\"数量\"},model:{value:(_vm.loSellForm.qty),callback:function ($$v) {_vm.$set(_vm.loSellForm, \"qty\", $$v)},expression:\"loSellForm.qty\"}})],1),_vm._v(\" \"),_c('el-button',{staticStyle:{\"width\":\"80%\"},attrs:{\"round\":\"\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.sellLoOrderOrLogin('loSellForm')}}},[_vm._v(\"\\n                        \"+_vm._s(_vm.loSellButtonName)+\"\\n                      \")])],1)],1)],1)],1)]),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"市价委托\",\"name\":\"mo\"}},[_c('div',[_c('el-row',[_c('el-col',{attrs:{\"span\":12}},[_c('el-form',{ref:\"moBuyForm\",attrs:{\"label-width\":\"80px\",\"model\":_vm.moBuyForm}},[_c('el-form-item',{attrs:{\"prop\":\"amount\"}},[_c('el-input',{attrs:{\"placeholder\":\"金额\"},model:{value:(_vm.moBuyForm.amount),callback:function ($$v) {_vm.$set(_vm.moBuyForm, \"amount\", $$v)},expression:\"moBuyForm.amount\"}})],1),_vm._v(\" \"),_c('el-button',{staticStyle:{\"width\":\"80%\"},attrs:{\"round\":\"\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.buyMoOrderOrLogin('moBuyForm')}}},[_vm._v(\"买入\")])],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('el-form',{ref:\"moSellForm\",attrs:{\"label-width\":\"80px\",\"model\":_vm.moSellForm}},[_c('el-form-item',{attrs:{\"prop\":\"qty\"}},[_c('el-input',{attrs:{\"placeholder\":\"数量\"},model:{value:(_vm.moSellForm.qty),callback:function ($$v) {_vm.$set(_vm.moSellForm, \"qty\", $$v)},expression:\"moSellForm.qty\"}})],1),_vm._v(\" \"),_c('el-button',{staticStyle:{\"width\":\"80%\"},attrs:{\"round\":\"\",\"type\":\"warning\"},on:{\"click\":function($event){return _vm.sellMoOrderOrLogin('moSellForm')}}},[_vm._v(\"卖出\")])],1)],1)],1)],1)])],1)],1)])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"never\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"订单簿\")])]),_vm._v(\" \"),_c('div',{staticClass:\"askListTable\"},[_c('el-table',{attrs:{\"data\":_vm.askList,\"cell-style\":_vm.askListCell,\"row-style\":_vm.askListRow}},[_c('el-table-column',{attrs:{\"prop\":\"price\",\"width\":\"100\",\"label\":\"价格(usdt)\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qty\",\"label\":\"数量\",\"width\":\"90\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"amount\",\"min-width\":\"100\",\"label\":\"金额\"}})],1)],1)]),_vm._v(\" \"),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"never\"}},[_c('div',[_vm._v(\"price \"+_vm._s(_vm.last_price))])]),_vm._v(\" \"),_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"never\"}},[_c('el-table',{attrs:{\"data\":_vm.bidList,\"cell-style\":_vm.bidListCell,\"row-style\":_vm.bidListRow}},[_c('el-table-column',{attrs:{\"prop\":\"price\",\"width\":\"100\",\"label\":\"价格(usdt)\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qty\",\"label\":\"数量\",\"width\":\"90\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"amount\",\"width\":\"123\",\"label\":\"金额\"}})],1)],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":4}},[_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"never\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"实时成交\")])]),_vm._v(\" \"),_c('div',{staticClass:\"filledOrder\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.filledOrderList,\"row-class-name\":_vm.filledOrderListClassName,\"cell-style\":_vm.filledOrderCell}},[_c('el-table-column',{attrs:{\"prop\":\"price\",\"label\":\"价格(usdt)\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qty\",\"label\":\"数量(btc)\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"filled_time\",\"label\":\"时间\"}})],1)],1)])],1)],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('el-tabs',{on:{\"tab-click\":_vm.switchOrderListCard},model:{value:(_vm.entrustCard),callback:function ($$v) {_vm.entrustCard=$$v},expression:\"entrustCard\"}},[_c('el-tab-pane',{attrs:{\"label\":\"当前委托\",\"name\":\"current\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.currentOrderList}},[_c('el-table-column',{attrs:{\"prop\":\"date\",\"label\":\"时间\",\"width\":\"150\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"symbol\",\"label\":\"交易对\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"side\",\"label\":\"方向\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"price\",\"label\":\"委托价\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qty\",\"label\":\"委托量\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"amount\",\"label\":\"委托总额\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"filledUnfilled\",\"label\":\"已成交数量/未成交数量\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.cancelOrder(scope.$index, scope.row)}}},[_vm._v(\"取消订单\\n                \")])]}}])})],1)],1),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":\"历史委托\",\"name\":\"history\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.historyOrderList}},[_c('el-table-column',{attrs:{\"prop\":\"date\",\"label\":\"时间\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"symbol\",\"label\":\"交易对\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"side\",\"label\":\"方向\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"order_type\",\"label\":\"类型\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"price\",\"label\":\"委托价\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"qty\",\"label\":\"委托量\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"amount\",\"label\":\"委托总额\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"filled_qty\",\"label\":\"已成交数量\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"filled_avg_price\",\"label\":\"成交均价\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"filled_amount\",\"label\":\"成交额\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"operate\",\"label\":\"操作\"}})],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3d677527\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/home/home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3d677527\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./home.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3d677527\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3d677527\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/home/home.vue\n// module id = null\n// module chunks = ","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-array-iter.js\n// module id = Mhyx\n// module chunks = 0","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_for-of.js\n// module id = NWt+\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = RY/4\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = SldL\n// module chunks = 0","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/promise.js\n// module id = U5ju\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = Xxa5\n// module chunks = 0","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-species.js\n// module id = bRrM\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_perform.js\n// module id = dNDb\n// module chunks = 0","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-detect.js\n// module id = dY0y\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _promise = require(\"../core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/asyncToGenerator.js\n// module id = exGp\n// module chunks = 0","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_promise-resolve.js\n// module id = fJUb\n// module chunks = 0","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_user-agent.js\n// module id = iUbK\n// module chunks = 0","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es7.promise.try.js\n// module id = jKW+\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = jyFz\n// module chunks = 0","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_invoke.js\n// module id = knuC\n// module chunks = 0","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-call.js\n// module id = msXi\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/json/stringify.js\n// module id = mvHQ\n// module chunks = 0","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_new-promise-capability.js\n// module id = qARP\n// module chunks = 0","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/json/stringify.js\n// module id = qkKv\n// module chunks = 0","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_species-constructor.js\n// module id = t8x9\n// module chunks = 0",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*!\r\n   *  decimal.js v10.4.3\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/decimal.js/decimal.js\n// module id = wbDN\n// module chunks = 0","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine-all.js\n// module id = xH/j\n// module chunks = 0"],"sourceRoot":""}